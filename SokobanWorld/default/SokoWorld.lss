
platz_demo.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800100  0000eede  0000efde  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000eede  00000000  00000000  00000100  2**8
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000c78  00800120  00800120  0000efe0  2**5
                  ALLOC
  3 .debug_aranges 00000628  00000000  00000000  0000efe0  2**3
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 000010f3  00000000  00000000  0000f608  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00005a7b  00000000  00000000  000106fb  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000a50  00000000  00000000  00016176  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00004413  00000000  00000000  00016bc6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000990  00000000  00000000  0001afdc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00001321  00000000  00000000  0001b96c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00003d19  00000000  00000000  0001cc8d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000007f0  00000000  00000000  000209a8  2**3
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
/**
 * Dynamically sets the rasterizer parameters:
 * firstScanlineToRender = First scanline to render
 * scanlinesToRender     = Total number of vertical lines to render. 
 */
void SetRenderingParameters(u8 firstScanlineToRender, u8 scanlinesToRender){        
       0:	0c 94 d0 54 	jmp	0xa9a0	; 0xa9a0 <__ctors_end>
	lastStatus=0;
	songSpeed=0;
	playSong=true;
}

void RestartSong(){	
       4:	0c 94 34 55 	jmp	0xaa68	; 0xaa68 <__bad_interrupt>
			vram[ram_tiles_restore[i].addr]=ram_tiles_restore[i].tileIndex;
		}	
	}


	void SetSpriteVisibility(bool visible){
       8:	0c 94 34 55 	jmp	0xaa68	; 0xaa68 <__bad_interrupt>
void GameEnding();
bool AllLevelsCompleted();

void SetVram(u8 x, u8 y, u8 t){//direct vram, bypass RAM_TILES_COUNT
	vram[(y*30)+x] = t;
}
       c:	0c 94 34 55 	jmp	0xaa68	; 0xaa68 <__bad_interrupt>
      10:	0c 94 34 55 	jmp	0xaa68	; 0xaa68 <__bad_interrupt>
      14:	0c 94 34 55 	jmp	0xaa68	; 0xaa68 <__bad_interrupt>
      18:	0c 94 34 55 	jmp	0xaa68	; 0xaa68 <__bad_interrupt>
      1c:	0c 94 34 55 	jmp	0xaa68	; 0xaa68 <__bad_interrupt>
      20:	0c 94 34 55 	jmp	0xaa68	; 0xaa68 <__bad_interrupt>
      24:	0c 94 34 55 	jmp	0xaa68	; 0xaa68 <__bad_interrupt>
      28:	0c 94 34 55 	jmp	0xaa68	; 0xaa68 <__bad_interrupt>
      2c:	0c 94 34 55 	jmp	0xaa68	; 0xaa68 <__bad_interrupt>
      30:	0c 94 34 55 	jmp	0xaa68	; 0xaa68 <__bad_interrupt>
      34:	0c 94 0a 57 	jmp	0xae14	; 0xae14 <__vector_13>
      38:	0c 94 4a 57 	jmp	0xae94	; 0xae94 <__vector_14>
      3c:	0c 94 34 55 	jmp	0xaa68	; 0xaa68 <__bad_interrupt>
      40:	0c 94 34 55 	jmp	0xaa68	; 0xaa68 <__bad_interrupt>
      44:	0c 94 34 55 	jmp	0xaa68	; 0xaa68 <__bad_interrupt>
      48:	0c 94 34 55 	jmp	0xaa68	; 0xaa68 <__bad_interrupt>
      4c:	0c 94 34 55 	jmp	0xaa68	; 0xaa68 <__bad_interrupt>
      50:	0c 94 34 55 	jmp	0xaa68	; 0xaa68 <__bad_interrupt>
      54:	0c 94 34 55 	jmp	0xaa68	; 0xaa68 <__bad_interrupt>
      58:	0c 94 34 55 	jmp	0xaa68	; 0xaa68 <__bad_interrupt>
      5c:	0c 94 34 55 	jmp	0xaa68	; 0xaa68 <__bad_interrupt>
      60:	0c 94 34 55 	jmp	0xaa68	; 0xaa68 <__bad_interrupt>
      64:	0c 94 34 55 	jmp	0xaa68	; 0xaa68 <__bad_interrupt>
      68:	0c 94 34 55 	jmp	0xaa68	; 0xaa68 <__bad_interrupt>
      6c:	0c 94 34 55 	jmp	0xaa68	; 0xaa68 <__bad_interrupt>

00000070 <eeprom_format_table>:
      70:	5a 55 01 20 01 01 00 38 08 00 00 00 00 00 00 00     ZU. ...8........
	...

00000090 <io_table>:
      90:	81 00 45 00 27 ff 24 ff 2a 90 2b 1c 21 0c 22 fb     ..E.'.$.*.+.!.".
      a0:	85 00 84 00 89 03 88 8d 81 09 6f 02 44 42 47 00     ..........o.DBG.
      b0:	45 01 b0 83 b3 00 b1 01 25 11 8a 4f 8b 03           E.......%..O..

000000be <patchCommands>:
      be:	4d 5a 50 5a 95 5e 46 5b 3e 5b 59 5a 5e 5a 63 5a     MZPZ.^F[>[YZ^ZcZ
      ce:	2c 5b 66 5a 69 5a 6c 5a b0 5a                       ,[fZiZlZ.Z

000000d8 <fader>:
      d8:	00 40 88 91 d2 e4 ad b5 b6 be bf ff                 .@..........

000000e4 <GameTiles>:
      e4:	5b 5b 52 5b 5b 52 52 09 5b 52 a4 52 52 a4 a4 52     [[R[[RR.[R.RR..R
      f4:	52 a4 5b 52 a4 5b 5b 5b 52 5b 5b 52 a4 5b 5b 5b     R.[R.[[[R[[R.[[[
     104:	09 52 52 52 5b 5b 5b 52 52 52 a4 a4 52 5b 5b 52     .RRR[[[RRR..R[[R
     114:	52 a4 5b 5b 5b 52 52 52 52 5b 5b 5b 52 a4 a4 52     R.[[[RRRR[[[R..R
     124:	09 52 a4 a4 5b 52 5b 5b 52 a4 5b 5b 5b 52 5b 5b     .R..[R[[R.[[[R[[
     134:	52 a4 5b 5b 5b 5b 52 52 52 52 5b 5b 5b 5b 09 09     R.[[[[RRRR[[[[..
     144:	a4 a4 52 5b 52 52 a4 a4 a4 5b 5b 52 52 a4 5b 5b     ..R[RR...[[RR.[[
     154:	a4 5b 5b 52 09 52 5b 5b 5b 5b 52 5b 5b 5b 52 52     .[[R.R[[[[R[[[RR
     164:	52 5b 5b 52 a4 5b 5b 5b a4 52 52 52 5b 5b 5b 52     R[[R.[[[.RRR[[[R
     174:	a4 5b 5b 52 5b 5b 52 a4 5b 5b 5b 52 52 09 09 5b     .[[R[[R.[[[RR..[
     184:	5b 5b 52 a4 a4 52 09 52 52 52 a4 5b 5b 5b 52 a4     [[R..R.RRR.[[[R.
     194:	a4 a4 52 5b 5b 5b 52 a4 5b 5b 52 5b 5b 5b 52 5b     ..R[[[R.[[R[[[R[
     1a4:	52 52 52 5b 5b 5b 5b 52 a4 a4 a4 52 5b 5b 5b 52     RRR[[[[R...R[[[R
     1b4:	5b 5b 5b 52 52 5b 5b 52 5b 5b 52 a4 a4 52 52 52     [[[RR[[R[[R..RRR
     1c4:	52 52 a4 5b 5b 5b 5b 52 5b 52 a4 5b 5b 5b 5b 52     RR.[[[[R[R.[[[[R
     1d4:	5b 5b 52 5b 5b 5b 52 a4 5b 5b 52 52 52 52 a4 5b     [[R[[[R.[[RRRR.[
	...
     1ec:	00 00 89 89 89 89 89 00 00 89 92 92 92 92 89 92     ................
     1fc:	00 89 92 92 92 92 89 92 00 89 92 92 92 89 9b 92     ................
     20c:	00 89 92 92 89 9b 92 92 00 89 89 89 9b 92 92 92     ................
     21c:	00 00 9b 9b 92 92 92 92 00 00 00 00 00 00 00 00     ................
     22c:	89 89 89 89 89 89 89 89 92 92 92 92 92 92 92 92     ................
     23c:	92 92 92 92 92 92 92 92 92 92 92 92 92 92 92 92     ................
     24c:	92 92 92 92 92 92 92 92 92 92 92 92 92 92 92 92     ................
     25c:	92 92 92 92 92 92 92 92 00 92 92 92 92 92 92 92     ................
     26c:	00 89 92 92 92 92 92 92 00 89 92 92 92 92 92 92     ................
     27c:	00 89 92 92 92 92 92 92 00 89 92 92 92 92 92 92     ................
     28c:	00 89 92 92 92 92 92 92 00 89 92 92 92 92 92 92     ................
     29c:	00 89 92 92 92 92 92 92 92 92 92 92 92 92 89 89     ................
     2ac:	92 92 92 92 89 89 9b 9b 92 92 92 89 9b 9b 92 92     ................
     2bc:	92 92 89 9b 92 92 92 92 92 89 9b 92 92 92 92 92     ................
     2cc:	92 89 9b 92 92 92 92 92 89 9b 92 92 92 92 92 92     ................
     2dc:	89 9b 92 92 92 92 92 92 00 00 00 00 00 00 00 00     ................
     2ec:	00 00 89 89 89 89 89 00 00 89 92 92 92 92 89 92     ................
     2fc:	00 89 92 92 92 92 89 92 00 89 92 92 92 89 9b 92     ................
     30c:	00 89 92 92 89 9b 92 3f 00 89 89 89 9b 92 3f 3f     .......?......??
     31c:	00 00 9b 9b 92 3f 3f 3f 00 00 00 00 00 00 00 00     .....???........
     32c:	89 89 89 89 89 89 89 89 92 92 92 92 92 92 92 92     ................
     33c:	92 92 92 92 92 92 92 92 92 92 92 92 92 92 92 92     ................
     34c:	3f 92 92 92 92 92 92 92 3f 3f 92 92 92 92 92 92     ?.......??......
     35c:	3f 3f 3f 92 92 92 92 92 00 92 92 92 92 3f 3f 3f     ???..........???
     36c:	00 89 92 92 92 92 3f 3f 00 89 92 92 92 92 92 3f     ......??.......?
     37c:	00 89 92 92 92 92 92 92 00 89 92 92 92 92 92 92     ................
     38c:	00 89 92 92 92 92 92 92 00 89 92 92 92 92 92 92     ................
     39c:	00 89 92 92 92 92 92 92 3f 3f 3f 92 92 92 89 89     ........???.....
     3ac:	3f 3f 92 92 89 89 9b 9b 3f 92 92 89 9b 9b 92 92     ??......?.......
     3bc:	92 92 89 9b 92 92 92 92 92 89 9b 92 92 92 92 92     ................
     3cc:	92 89 9b 92 92 92 92 92 89 9b 92 92 92 92 92 92     ................
     3dc:	89 9b 92 92 92 92 92 92 09 09 09 09 09 09 09 09     ................
     3ec:	09 2e 2e 2e 2e 2e 2e 2e 09 2e 1c 1c 1c 1c 1c 1c     ................
     3fc:	09 2e 13 13 13 13 13 13 09 2e 1c 1c 1c 1c 1c 1c     ................
     40c:	09 2e 1c 1c 1c 1c 1c 1c 09 2e 13 13 13 13 13 2e     ................
     41c:	09 2e 1c 1c 1c 1c 2e 1c 09 09 09 09 09 09 09 09     ................
     42c:	2e 2e 2e 2e 2e 2e 13 09 1c 1c 1c 2e 1c 2e 13 09     ................
     43c:	13 13 2e 1c 13 2e 13 09 1c 2e 1c 13 1c 2e 13 09     ................
     44c:	2e 1c 13 1c 1c 2e 13 09 1c 13 13 13 13 2e 13 09     ................
     45c:	13 1c 1c 1c 1c 2e 13 09 09 2e 1c 1c 1c 2e 1c 13     ................
     46c:	09 2e 13 13 2e 1c 13 13 09 2e 1c 2e 1c 13 1c 1c     ................
     47c:	09 2e 2e 1c 13 1c 1c 2e 09 2e 1c 13 13 13 13 13     ................
     48c:	09 2e 2e 2e 2e 2e 2e 2e 09 13 13 13 13 13 13 13     ................
     49c:	09 09 09 09 09 09 09 09 1c 1c 1c 1c 1c 2e 13 09     ................
     4ac:	13 13 13 13 13 2e 13 09 1c 1c 1c 1c 1c 2e 13 09     ................
     4bc:	1c 2e 2e 1c 1c 2e 13 09 13 13 13 13 13 2e 13 09     ................
     4cc:	2e 2e 2e 2e 2e 2e 13 09 13 13 13 13 13 13 13 09     ................
     4dc:	09 09 09 09 09 09 09 09 01 01 01 01 01 01 01 01     ................
     4ec:	01 17 17 17 17 17 17 17 01 17 06 06 06 06 06 06     ................
     4fc:	01 17 02 02 02 02 02 02 01 17 06 06 06 06 06 06     ................
     50c:	01 17 06 06 06 06 06 06 01 17 02 02 02 02 02 17     ................
     51c:	01 17 06 06 06 06 17 06 01 01 01 01 01 01 01 01     ................
     52c:	17 17 17 17 17 17 02 01 06 06 06 17 06 17 02 01     ................
     53c:	02 02 17 06 02 17 02 01 06 17 06 02 06 17 02 01     ................
     54c:	17 06 02 06 06 17 02 01 06 02 02 02 02 17 02 01     ................
     55c:	02 06 06 06 06 17 02 01 01 17 06 06 06 17 06 02     ................
     56c:	01 17 02 02 17 06 02 02 01 17 06 17 06 02 06 06     ................
     57c:	01 17 17 06 02 06 06 17 01 17 06 02 02 02 02 02     ................
     58c:	01 17 17 17 17 17 17 17 01 02 02 02 02 02 02 02     ................
     59c:	01 01 01 01 01 01 01 01 06 06 06 06 06 17 02 01     ................
     5ac:	02 02 02 02 02 17 02 01 06 06 06 06 06 17 02 01     ................
     5bc:	06 17 17 06 06 17 02 01 02 02 02 02 02 17 02 01     ................
     5cc:	17 17 17 17 17 17 02 01 02 02 02 02 02 02 02 01     ................
     5dc:	01 01 01 01 01 01 01 01 53 53 53 53 53 53 53 53     ........SSSSSSSS
     5ec:	53 ae ae ae ae ae ae ae 53 ae ae ae ae ae ae ae     S.......S.......
     5fc:	53 ae ae a5 ae ae a5 a5 53 ae ae a5 a5 ae a5 5c     S.......S......\
     60c:	53 ae ae a5 a5 5c 5c a5 53 ae ae 5c 5c 5c a5 5c     S....\\.S..\\\.\
     61c:	53 ae ae a5 a5 a5 a5 a5 53 53 53 53 53 53 53 53     S.......SSSSSSSS
     62c:	ae ae ae ae ae ae a5 53 ae ae ae ae ae a5 5c 53     .......S......\S
     63c:	5c 5c a5 5c 5c 5c 5c 53 5c a5 a5 ae 5c 53 5c 53     \\.\\\\S\...\S\S
     64c:	a5 a5 ae ae a5 5c 53 53 5c ae ae a5 a5 5c 5c 53     .....\SS\....\\S
     65c:	ae 5c 5c a5 a5 5c 5c 53 53 ae ae ae a5 a5 a5 ae     .\\..\\SS.......
     66c:	53 ae ae a5 ae ae ae a5 53 ae ae ae a5 a5 a5 a5     S.......S.......
     67c:	53 ae ae ae a5 a5 a5 a5 53 ae ae a5 a5 5c 5c 5c     S.......S....\\\
     68c:	53 ae a5 5c 5c 5c 53 53 53 a5 5c 5c 5c 53 53 5c     S..\\\SSS.\\\SS\
     69c:	53 53 53 53 53 53 53 53 ae a5 5c 5c 5c 53 53 53     SSSSSSSS..\\\SSS
     6ac:	a5 ae a5 5c 5c 53 53 53 a5 5c 5c a5 a5 5c 5c 53     ...\\SSS.\\..\\S
     6bc:	5c 5c a5 ae ae a5 5c 53 5c a5 a5 a5 ae a5 5c 53     \\....\S\.....\S
     6cc:	5c 5c 5c 5c 5c 5c a5 53 5c 5c 5c 5c 5c 5c 5c 53     \\\\\\.S\\\\\\\S
     6dc:	53 53 53 53 53 53 53 53 1b 5c 1b 5c 5c 5c 5c 13     SSSSSSSS.\.\\\\.
     6ec:	1b 1b 5c 1b 5c 5c 5c 13 1b 5c 5c 5c 1b 5c 5c 13     ..\.\\\..\\\.\\.
     6fc:	5c 5c 1b 5c 5c 5c 13 1b 1b 5c 5c 1b 5c 5c 13 13     \\.\\\...\\.\\..
     70c:	5c 1b 5c 5c 5c 5c 13 1b 1b 5c 5c 5c 5c 13 1b 13     \.\\\\...\\\\...
     71c:	5c 5c 1b 5c 5c 13 1b 5c 1b 5c 1b 5c 5c 5c 5c 13     \\.\\..\.\.\\\\.
     72c:	1b 1b 5c 1b 5c 5c 5c 13 1b 5c 5c 1b 1b 5c 5c 13     ..\.\\\..\\..\\.
     73c:	5c 5c 1b 5c 5c 5c 13 1b 1b 5c 5c 1b 5c 5c 13 13     \\.\\\...\\.\\..
     74c:	5c 1b 5c 5c 5c 5c 13 1b 1b 5c 1b 5c 5c 13 1b 13     \.\\\\...\.\\...
     75c:	5c 5c 1b 5c 5c 13 1b 5c 5c 5c 5c 5c 13 1b 13 1b     \\.\\..\\\\\....
     76c:	5c 5c 5c 13 1b 13 1b 5c 5c 5c 13 13 1b 1b 5c 1b     \\\....\\\....\.
     77c:	5c 13 13 1b 13 5c 1b 5c 5c 13 1b 13 1b 5c 5c 5c     \....\.\\....\\\
     78c:	13 13 1b 1b 5c 1b 5c 5c 13 1b 13 1b 5c 5c 5c 5c     ....\.\\....\\\\
     79c:	13 1b 1b 5c 1b 5c 5c 5c 5c 5c 5c 5c 13 1b 13 1b     ...\.\\\\\\\....
     7ac:	1b 5c 1b 13 1b 5c 1b 5c 5c 5c 13 13 1b 1b 5c 1b     .\...\.\\\....\.
     7bc:	5c 13 5c 1b 13 5c 1b 5c 5c 13 1b 13 1b 5c 5c 5c     \.\..\.\\....\\\
     7cc:	13 5c 1b 1b 5c 1b 5c 5c 13 1b 13 1b 5c 5c 1b 5c     .\..\.\\....\\.\
     7dc:	13 1b 1b 5c 1b 5c 5c 1b 01 01 01 01 01 01 01 01     ...\.\\.........
     7ec:	01 18 18 18 18 10 01 01 01 18 10 10 10 10 10 01     ................
     7fc:	01 01 10 10 10 10 10 01 10 01 01 01 01 01 01 01     ................
     80c:	18 10 10 01 18 18 18 10 10 10 10 01 18 10 10 10     ................
     81c:	10 10 01 01 01 10 10 10 01 01 01 01 01 01 01 01     ................
     82c:	18 18 18 18 18 18 10 10 18 10 10 10 10 10 10 10     ................
     83c:	10 10 10 10 10 10 01 01 01 01 01 01 01 01 01 01     ................
     84c:	10 01 01 01 18 18 01 18 10 10 01 18 10 10 01 10     ................
     85c:	10 10 01 10 10 10 10 01 01 01 01 01 01 01 01 01     ................
     86c:	18 10 18 10 10 01 18 18 10 10 10 10 10 01 18 10     ................
     87c:	10 10 10 01 01 01 10 10 01 01 01 01 10 10 01 01     ................
     88c:	01 10 18 18 18 10 10 10 01 10 18 10 10 10 10 10     ................
     89c:	01 01 10 10 10 10 10 10 01 01 01 01 01 01 01 01     ................
     8ac:	18 18 10 10 01 10 18 18 10 10 10 10 01 10 18 10     ................
     8bc:	10 10 10 01 01 01 10 10 01 01 01 10 10 10 01 01     ................
     8cc:	10 01 10 18 18 18 10 10 10 01 10 18 10 10 10 10     ................
     8dc:	01 01 01 10 10 10 10 01 01 01 01 01 01 01 01 01     ................
     8ec:	01 18 18 18 18 10 01 01 01 18 10 10 10 10 10 01     ................
     8fc:	01 01 10 10 10 10 10 01 10 01 01 01 01 01 01 01     ................
     90c:	18 10 10 01 18 18 18 37 10 10 10 01 18 10 37 37     .......7......77
     91c:	10 10 01 01 01 37 37 37 01 01 01 01 01 01 01 01     .....777........
     92c:	18 18 18 18 18 18 10 10 18 10 10 10 10 10 10 10     ................
     93c:	10 10 10 10 10 10 01 01 01 01 01 01 01 01 01 01     ................
     94c:	37 01 01 01 18 18 01 18 37 37 01 18 10 10 01 10     7.......77......
     95c:	37 37 37 10 10 10 10 01 01 01 01 01 01 37 37 37     777..........777
     96c:	18 10 18 10 10 01 37 37 10 10 10 10 10 01 18 37     ......77.......7
     97c:	10 10 10 01 01 01 10 10 01 01 01 01 10 10 01 01     ................
     98c:	01 10 18 18 18 10 10 10 01 10 18 10 10 10 10 10     ................
     99c:	01 01 10 10 10 10 10 10 37 37 37 01 01 01 01 01     ........777.....
     9ac:	37 37 10 10 01 10 18 18 37 10 10 10 01 10 18 10     77......7.......
     9bc:	10 10 10 01 01 01 10 10 01 01 01 10 10 10 01 01     ................
     9cc:	10 01 10 18 18 18 10 10 10 01 10 18 10 10 10 10     ................
     9dc:	01 01 01 10 10 10 10 01 00 00 00 00 00 00 00 00     ................
     9ec:	00 76 76 76 76 76 76 76 00 76 1b 1b 6d 6d 1b 1b     .vvvvvvv.v..mm..
     9fc:	00 76 24 24 6d 6d 1b 24 00 76 6d 6d 6d 6d 1b 24     .v$$mm.$.vmmmm.$
     a0c:	00 76 6d 6d 6d 6d 6d 1b 00 76 6d 1b 6d 6d 6d 1b     .vmmmmm..vm.mmm.
     a1c:	00 76 1b 24 1b 6d 6d 1b 00 00 00 00 00 00 00 00     .v.$.mm.........
     a2c:	76 76 76 76 76 6d 1b 00 1b 6d 6d 1b 6d 24 1b 00     vvvvvm...mm.m$..
     a3c:	24 6d 6d 1b 6d 24 1b 00 24 1b 6d 6d 6d 24 1b 00     $mm.m$..$.mmm$..
     a4c:	24 24 6d 6d 6d 24 1b 00 24 24 1b 6d 6d 24 1b 00     $$mmm$..$$.mm$..
     a5c:	24 24 24 6d 6d 24 1b 00 00 76 24 24 24 6d 6d 1b     $$$mm$...v$$$mm.
     a6c:	00 76 6d 6d 6d 6d 6d 1b 00 76 1b 1b 1b 6d 1b 6d     .vmmmmm..v...m.m
     a7c:	00 76 6d 6d 6d 1b 6d 1b 00 76 6d 6d 6d 6d 6d 6d     .vmmm.m..vmmmmmm
     a8c:	00 6d 24 24 24 24 24 24 00 1b 1b 1b 1b 1b 1b 1b     .m$$$$$$........
	...
     aa4:	24 24 24 1b 6d 24 1b 00 1b 24 24 24 6d 24 1b 00     $$$.m$...$$$m$..
     ab4:	1b 6d 24 24 6d 24 1b 00 1b 6d 6d 24 6d 24 1b 00     .m$$m$...mm$m$..
     ac4:	6d 6d 6d 6d 6d 24 1b 00 24 24 24 24 24 24 1b 00     mmmmm$..$$$$$$..
     ad4:	1b 1b 1b 1b 1b 1b 1b 00 00 00 00 00 00 00 00 00     ................
     ae4:	01 01 01 01 01 01 01 01 01 17 17 17 17 17 17 17     ................
     af4:	01 17 01 01 06 06 01 01 01 17 02 02 06 06 01 02     ................
     b04:	01 17 06 06 06 06 01 02 01 17 06 06 06 06 06 01     ................
     b14:	01 17 06 01 06 06 06 01 01 17 01 02 01 06 06 01     ................
     b24:	01 01 01 01 01 01 01 01 17 17 17 17 17 06 01 01     ................
     b34:	01 06 06 01 06 02 01 01 02 06 06 01 06 02 01 01     ................
     b44:	02 01 06 06 06 02 01 01 02 02 06 06 06 02 01 01     ................
     b54:	02 02 01 06 06 02 01 01 02 02 02 06 06 02 01 01     ................
     b64:	01 17 02 02 02 06 06 01 01 17 06 06 06 06 06 01     ................
     b74:	01 17 01 01 01 06 01 06 01 17 06 06 06 01 06 01     ................
     b84:	01 17 06 06 06 06 06 06 01 06 02 02 02 02 02 02     ................
     b94:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
     ba4:	02 02 02 01 06 02 01 01 01 02 02 02 06 02 01 01     ................
     bb4:	01 06 02 02 06 02 01 01 01 06 06 02 06 02 01 01     ................
     bc4:	06 06 06 06 06 02 01 01 02 02 02 02 02 02 01 01     ................
     bd4:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
     be4:	26 26 26 26 1c 01 26 26 26 26 26 26 1c 01 26 26     &&&&..&&&&&&..&&
     bf4:	26 26 1c 1c 13 01 26 1c 26 26 1c 1c 13 01 26 1c     &&....&.&&....&.
     c04:	26 26 1c 13 13 01 26 1c 26 1c 13 1c 13 01 26 1c     &&....&.&.....&.
     c14:	1c 13 13 13 13 01 1c 13 01 01 01 01 01 01 01 01     ................
     c24:	26 26 26 26 26 26 1c 01 26 26 26 26 26 1c 13 01     &&&&&&..&&&&&...
     c34:	1c 1c 1c 1c 1c 13 13 01 1c 1c 1c 1c 1c 13 13 01     ................
     c44:	1c 1c 1c 1c 13 13 13 01 1c 13 1c 13 1c 13 13 01     ................
     c54:	13 13 13 13 13 13 13 01 01 01 01 01 01 01 01 01     ................
     c64:	26 26 26 26 26 26 26 26 26 26 1c 1c 1c 1c 1c 1c     &&&&&&&&&&......
     c74:	26 26 1c 1c 1c 1c 1c 1c 26 26 1c 1c 1c 1c 1c 1c     &&......&&......
     c84:	26 26 1c 1c 1c 1c 13 1c 26 1c 13 13 13 13 13 13     &&......&.......
     c94:	1c 13 13 13 13 13 13 13 01 01 01 01 01 01 01 01     ................
     ca4:	26 1c 01 26 26 26 1c 01 1c 13 01 26 1c 1c 13 01     &..&&&.....&....
     cb4:	1c 13 01 26 1c 13 13 01 13 13 01 26 1c 13 13 01     ...&.......&....
     cc4:	1c 13 01 26 1c 13 13 01 13 13 01 1c 13 13 13 01     ...&............
     cd4:	13 13 01 1c 13 13 13 01 01 01 01 01 01 01 01 01     ................
     ce4:	0b 0b 0b 0b 0a 0b 0b 14 0b 0b 14 0b 0b 0b 0b 0a     ................
     cf4:	14 0b 0a 0a 0b 0b 0b 0b 0a 0b 0b 14 0b 0b 0b 0b     ................
     d04:	0b 0b 0b 0a 0b 0b 0b 14 0b 14 0b 0b 0b 14 0b 0a     ................
     d14:	0b 0b 0b 0b 0b 0a 0b 0b 0b 0a 0b 0a 14 0b 0b 0b     ................
     d24:	0a 0b 0b 0b 0a 0b 0b 14 0b 0b 14 0b 0b 0b 0b 0a     ................
     d34:	14 0b 0a 0b 0b 0b 0b 0a 0a 0b 0b 14 0b 0b 0b 0b     ................
     d44:	0b 0b 0b 0a 0b 0b 0b 14 0b 14 0b 0b 0b 14 0b 0a     ................
     d54:	0b 0b 0b 0b 0b 0a 0b 0b 0b 0a 0b 0b 14 0b 0b 0b     ................
     d64:	0b 0b 0a 0b 0a 0b 0b 14 0b 0b 14 0b 0b 0b 0b 0a     ................
     d74:	14 0b 0a 0b 0b 0b 0b 0b 0a 0b 0b 14 0b 0b 0b 0b     ................
     d84:	0b 0b 0b 0a 0b 0b 0b 14 0b 14 0b 0b 0b 14 0b 0a     ................
     d94:	0b 0a 0b 0b 0b 0a 0b 0b 0b 0a 0b 0b 14 0b 0b 0b     ................
     da4:	0b 0b 0b 0b 0a 0b 0a 14 0b 0b 14 0b 0b 0b 0b 0a     ................
     db4:	14 0b 0a 0b 0b 0b 0b 0b 0a 0a 0b 14 0b 0b 0b 0b     ................
     dc4:	0b 0b 0b 0a 0b 0a 0b 14 0b 14 0b 0b 0b 14 0b 0a     ................
     dd4:	0b 0b 0b 0b 0b 0a 0b 0b 0b 0a 0b 0b 14 0a 0b 0b     ................
	...
     dec:	00 08 08 08 08 08 08 08 00 08 11 11 11 11 11 11     ................
     dfc:	00 08 11 11 11 12 11 11 00 08 11 12 12 12 12 12     ................
     e0c:	00 08 11 11 11 12 11 11 00 08 11 12 12 12 12 12     ................
     e1c:	00 08 11 11 11 11 11 11 00 00 00 00 00 00 00 00     ................
     e2c:	08 08 08 08 08 08 08 08 11 11 11 11 11 11 11 11     ................
     e3c:	11 11 11 12 11 11 11 11 11 12 12 12 12 12 11 11     ................
     e4c:	11 11 11 12 11 11 11 11 11 12 12 12 12 12 11 11     ................
     e5c:	11 11 11 11 11 11 11 11 00 08 11 12 12 12 12 12     ................
     e6c:	00 08 11 12 11 11 11 12 00 08 11 12 12 12 12 12     ................
     e7c:	00 08 11 11 11 12 11 11 00 08 11 12 12 12 12 12     ................
     e8c:	00 08 11 11 11 12 11 11 00 08 11 12 12 12 12 12     ................
     e9c:	00 08 11 11 11 11 11 11 11 12 12 12 12 12 11 11     ................
     eac:	11 12 11 11 11 12 11 11 11 12 12 12 12 12 11 11     ................
     ebc:	11 11 11 12 11 11 11 11 11 12 12 12 12 12 11 11     ................
     ecc:	11 11 11 12 11 11 11 11 11 12 12 12 12 12 11 11     ................
     edc:	11 11 11 11 11 11 11 11 00 00 00 00 00 00 00 00     ................
     eec:	00 08 08 08 08 08 08 08 00 08 11 11 11 11 11 11     ................
     efc:	00 08 11 11 11 12 11 11 00 08 11 12 12 12 12 12     ................
     f0c:	00 08 11 11 11 12 11 3f 00 08 11 12 12 12 3f 3f     .......?......??
     f1c:	00 08 11 11 11 3f 3f 3f 00 00 00 00 00 00 00 00     .....???........
     f2c:	08 08 08 08 08 08 08 08 11 11 11 11 11 11 11 11     ................
     f3c:	11 11 11 12 11 11 11 11 11 12 12 12 12 12 11 11     ................
     f4c:	3f 11 11 12 11 11 11 11 3f 3f 12 12 12 12 11 11     ?.......??......
     f5c:	3f 3f 3f 11 11 11 11 11 00 08 11 12 12 3f 3f 3f     ???..........???
     f6c:	00 08 11 12 11 11 3f 3f 00 08 11 12 12 12 12 3f     ......??.......?
     f7c:	00 08 11 11 11 12 11 11 00 08 11 12 12 12 12 12     ................
     f8c:	00 08 11 11 11 12 11 11 00 08 11 12 12 12 12 12     ................
     f9c:	00 08 11 11 11 11 11 11 3f 3f 3f 12 12 12 11 11     ........???.....
     fac:	3f 3f 11 11 11 12 11 11 3f 12 12 12 12 12 11 11     ??......?.......
     fbc:	11 11 11 12 11 11 11 11 11 12 12 12 12 12 11 11     ................
     fcc:	11 11 11 12 11 11 11 11 11 12 12 12 12 12 11 11     ................
     fdc:	11 11 11 11 11 11 11 11 08 08 08 08 08 08 08 08     ................
     fec:	08 f6 f6 f6 f6 f6 f6 f6 08 f6 ad ad ad ad 5a 5a     ..............ZZ
     ffc:	08 f6 ad ad 5a 5a ad 5a 08 f6 ad 5a ad ad 5a 5a     ....ZZ.Z...Z..ZZ
    100c:	08 f6 ad 5a ad 5a ad ad 08 f6 5a ad 5a ad 5a 08     ...Z.Z....Z.Z.Z.
    101c:	08 f6 5a 5a 5a ad 08 ad 08 08 08 08 08 08 08 08     ..ZZZ...........
    102c:	f6 f6 f6 f6 f6 ad 5a 08 5a ad ad ad ad ad 5a 08     ......Z.Z.....Z.
    103c:	ad 5a 5a ad ad ad 5a 08 5a ad ad 5a ad ad 5a 08     .ZZ...Z.Z..Z..Z.
    104c:	ad 5a ad 5a ad ad 5a 08 5a ad 5a ad 5a ad 5a 08     .Z.Z..Z.Z.Z.Z.Z.
    105c:	08 ad 5a 5a 5a ad 5a 08 08 f6 5a ad 5a ad 5a 08     ..ZZZ.Z...Z.Z.Z.
    106c:	08 f6 ad 5a ad 5a ad ad 08 f6 ad 5a ad ad 5a 5a     ...Z.Z.....Z..ZZ
    107c:	08 f6 ad ad 5a 5a ad 5a 08 f6 ad ad ad ad 5a 5a     ....ZZ.Z......ZZ
    108c:	08 f6 ad ad ad ad ad ad 08 ad 5a 5a 5a 5a 5a 5a     ..........ZZZZZZ
    109c:	08 08 08 08 08 08 08 08 5a ad 5a ad 5a ad 5a 08     ........Z.Z.Z.Z.
    10ac:	ad 5a ad 5a ad ad 5a 08 5a ad ad 5a ad ad 5a 08     .Z.Z..Z.Z..Z..Z.
    10bc:	ad 5a 5a ad ad ad 5a 08 5a ad ad ad ad ad 5a 08     .ZZ...Z.Z.....Z.
    10cc:	ad ad ad ad ad 5a 5a 08 5a 5a 5a 5a 5a 5a 08 08     .....ZZ.ZZZZZZ..
    10dc:	08 08 08 08 08 08 08 08 01 01 01 01 01 01 01 01     ................
    10ec:	01 17 17 17 17 17 17 17 01 17 07 07 07 07 02 02     ................
    10fc:	01 17 07 07 02 02 07 02 01 17 07 02 07 07 02 02     ................
    110c:	01 17 07 02 07 02 07 07 01 17 02 07 02 07 02 02     ................
    111c:	01 17 02 02 02 07 02 07 01 01 01 01 01 01 01 01     ................
    112c:	17 17 17 17 17 07 02 01 02 07 07 07 07 07 02 01     ................
    113c:	07 02 02 07 07 07 02 01 02 07 07 02 07 07 02 01     ................
    114c:	07 02 07 02 07 07 02 01 02 07 02 07 02 07 02 01     ................
    115c:	02 07 02 02 02 07 02 01 01 17 02 07 02 07 02 02     ................
    116c:	01 17 07 02 07 02 07 07 01 17 07 02 07 07 02 02     ................
    117c:	01 17 07 07 02 02 07 02 01 17 07 07 07 07 02 02     ................
    118c:	01 17 07 07 07 07 07 07 01 07 02 02 02 02 02 02     ................
    119c:	01 01 01 01 01 01 01 01 02 07 02 07 02 07 02 01     ................
    11ac:	07 02 07 02 07 07 02 01 02 07 07 02 07 07 02 01     ................
    11bc:	07 02 02 07 07 07 02 01 02 07 07 07 07 07 02 01     ................
    11cc:	07 07 07 07 07 02 02 01 02 02 02 02 02 02 01 01     ................
    11dc:	01 01 01 01 01 01 01 01 25 25 25 25 25 25 25 25     ........%%%%%%%%
    11ec:	1c 25 25 25 25 25 25 25 1c 1c 1c 25 1c 25 25 25     .%%%%%%%...%.%%%
    11fc:	1c 1c 1c 25 1c 25 25 25 1c 1c 1c 25 1c 25 25 25     ...%.%%%...%.%%%
    120c:	1c 1c 1c 25 1c 25 25 25 1c 1c 1c 25 1c 25 25 25     ...%.%%%...%.%%%
    121c:	1c 1c 1c 25 1c 25 25 25 25 25 25 25 25 25 1c 00     ...%.%%%%%%%%%..
    122c:	25 25 25 25 1c 1c 13 00 1c 1c 1c 1c 13 0a 00 00     %%%%............
    123c:	1c 13 1c 13 13 0a 00 00 1c 13 1c 13 13 0a 00 00     ................
    124c:	1c 13 1c 13 13 0a 00 00 1c 13 1c 13 13 0a 00 00     ................
    125c:	1c 13 1c 13 13 0a 00 00 1c 1c 1c 25 1c 25 25 25     ...........%.%%%
    126c:	1c 1c 1c 25 1c 25 25 25 1c 1c 1c 25 1c 25 25 25     ...%.%%%...%.%%%
    127c:	1c 1c 1c 25 1c 25 25 25 1c 1c 1c 25 1c 25 25 25     ...%.%%%...%.%%%
    128c:	1c 1c 1c 13 13 13 13 13 1c 13 13 13 13 13 13 13     ................
	...
    12a4:	1c 13 1c 13 13 0a 00 00 1c 13 1c 13 13 0a 00 00     ................
    12b4:	1c 13 1c 13 13 0a 00 00 1c 13 1c 13 13 0a 00 00     ................
    12c4:	1c 13 1c 13 13 0a 00 00 13 13 1c 13 13 0a 00 00     ................
    12d4:	13 13 13 13 13 0a 00 00 00 00 00 00 00 00 00 00     ................
    12e4:	51 5b 51 5b 51 51 5b 5b 5b 51 51 5b 51 51 51 5b     Q[Q[QQ[[[QQ[QQQ[
    12f4:	51 5b 5b 5b 51 51 5b 51 51 5b 5b 51 51 5b 51 51     Q[[[QQ[QQ[[QQ[QQ
    1304:	5b 5b 51 5b 5b 51 5b 5b 51 5b 5b 51 5b 5b 5b 51     [[Q[[Q[[Q[[Q[[[Q
    1314:	51 5b 51 5b 5b 51 5b 5b 51 5b 5b 5b 51 5b 51 5b     Q[Q[[Q[[Q[[[Q[Q[
    1324:	51 51 5b 51 51 5b 51 51 51 51 5b 51 5b 5b 5b 51     QQ[QQ[QQQQ[Q[[[Q
    1334:	5b 5b 5b 5b 5b 5b 5b 5b 51 5b 51 51 51 5b 51 51     [[[[[[[[Q[QQQ[QQ
    1344:	5b 5b 51 5b 51 5b 51 51 5b 5b 51 5b 51 5b 5b 5b     [[Q[Q[QQ[[Q[Q[[[
    1354:	5b 5b 5b 51 51 51 51 51 51 5b 5b 5b 5b 5b 5b 5b     [[[QQQQQQ[[[[[[[
    1364:	5b 51 51 5b 5b 51 5b 5b 5b 5b 51 51 5b 5b 5b 51     [QQ[[Q[[[[QQ[[[Q
    1374:	51 5b 5b 5b 5b 51 5b 5b 5b 51 5b 5b 51 51 5b 51     Q[[[[Q[[[Q[[QQ[Q
    1384:	5b 5b 5b 51 5b 51 5b 51 51 51 5b 5b 5b 51 5b 5b     [[[Q[Q[QQQ[[[Q[[
    1394:	51 5b 5b 5b 51 5b 5b 5b 51 5b 5b 51 51 5b 5b 51     Q[[[Q[[[Q[[QQ[[Q
    13a4:	5b 5b 51 5b 5b 51 51 51 5b 51 5b 5b 51 51 5b 5b     [[Q[[QQQ[Q[[QQ[[
    13b4:	5b 5b 5b 51 51 5b 5b 51 5b 51 5b 5b 5b 51 5b 51     [[[QQ[[Q[Q[[[Q[Q
    13c4:	5b 5b 51 5b 51 51 51 5b 5b 5b 51 5b 51 5b 5b 5b     [[Q[QQQ[[[Q[Q[[[
    13d4:	5b 51 5b 51 5b 51 51 51 5b 51 51 5b 51 5b 5b 51     [Q[Q[QQQ[QQ[Q[[Q
    13e4:	49 49 49 49 49 49 49 49 da da da da da da da da     IIIIIIII........
    13f4:	da da da da da da da da da da eb eb eb eb eb eb     ................
    1404:	da da eb eb eb eb f4 f4 da da eb eb eb f4 f4 f4     ................
    1414:	da da eb eb f4 f4 f4 eb da da eb f4 f4 f4 eb f4     ................
    1424:	49 49 49 49 49 49 49 49 da da da da da da da 49     IIIIIIII.......I
    1434:	da da da da da da da 49 eb eb eb eb eb eb eb 49     .......I.......I
    1444:	f4 eb f4 f4 eb eb eb 49 eb f4 f4 eb eb eb f4 49     .......I.......I
    1454:	f4 f4 eb eb eb f4 f4 49 f4 eb eb eb f4 f4 f4 49     .......I.......I
    1464:	da da eb f4 f4 eb f4 f4 da da eb f4 eb f4 f4 eb     ................
    1474:	da da eb eb f4 f4 eb eb da da eb f4 f4 eb eb eb     ................
    1484:	da da eb f4 eb eb eb f4 da da eb eb eb eb f4 f4     ................
    1494:	da da eb eb eb f4 f4 f4 da da eb eb f4 f4 f4 eb     ................
    14a4:	eb eb eb f4 f4 f4 eb 49 eb eb f4 f4 f4 eb eb 49     .......I.......I
    14b4:	eb f4 f4 f4 eb eb eb 49 f4 f4 f4 eb eb eb eb 49     .......I.......I
    14c4:	f4 f4 eb eb eb eb eb 49 f4 eb eb eb eb eb eb 49     .......I.......I
    14d4:	eb eb eb eb eb eb eb 49 eb eb eb eb eb eb eb 49     .......I.......I
    14e4:	49 49 49 49 49 49 49 49 da da da da da da da da     IIIIIIII........
    14f4:	da da da da da da da da da da eb eb eb eb eb eb     ................
    1504:	da da eb eb eb eb f4 f4 da da eb eb eb f4 3f 3f     ..............??
    1514:	da da eb eb f4 3f 3f 3f da da eb f4 3f 3f 3f 3f     .....???....????
    1524:	49 49 49 49 49 49 49 49 da da da da da da da 49     IIIIIIII.......I
    1534:	da da da da da da da 49 eb eb eb eb eb eb eb 49     .......I.......I
    1544:	f4 eb f4 f4 eb eb eb 49 eb f4 f4 eb eb eb f4 49     .......I.......I
    1554:	3f f4 eb eb eb f4 f4 49 3f 3f eb eb f4 f4 f4 49     ?......I??.....I
    1564:	da da eb f4 3f 3f 3f 3f da da eb f4 eb 3f 3f 3f     ....????.....???
    1574:	da da eb eb f4 f4 3f 3f da da eb f4 f4 eb eb eb     ......??........
    1584:	da da eb f4 eb eb eb f4 da da eb eb eb eb f4 f4     ................
    1594:	da da eb eb eb f4 f4 f4 da da eb eb f4 f4 f4 eb     ................
    15a4:	3f 3f eb f4 f4 f4 eb 49 3f eb f4 f4 f4 eb eb 49     ??.....I?......I
    15b4:	eb f4 f4 f4 eb eb eb 49 f4 f4 f4 eb eb eb eb 49     .......I.......I
    15c4:	f4 f4 eb eb eb eb eb 49 f4 eb eb eb eb eb eb 49     .......I.......I
    15d4:	eb eb eb eb eb eb eb 49 eb eb eb eb eb eb eb 49     .......I.......I
    15e4:	49 49 49 49 49 49 49 49 49 ff ff ff ff ff ff ff     IIIIIIIII.......
    15f4:	49 ff ad ad ad ad ad ad 49 ff ad ad ad ad ad ad     I.......I.......
    1604:	49 ff ad ad ad ad ad ad 49 ff ad ad ad ad ad ad     I.......I.......
    1614:	49 ff ad ad ad ad ad ad 49 ad 9b 9b 9b 9b 9b 9b     I.......I.......
    1624:	49 49 49 49 49 49 49 49 ff ff ff ff ff ff ad 49     IIIIIIII.......I
    1634:	9b ad ad ad ad ad 9b 49 9b ad ad ad ad ad 9b 49     .......I.......I
    1644:	9b ad ad ad ad ad 9b 49 9b ad ad ad ad ad 9b 49     .......I.......I
    1654:	9b ad ad ad ad ad 9b 49 9b 9b 9b 9b 9b 9b 9b 49     .......I.......I
    1664:	49 ff ad ad ad ad ad ad 49 ff ad ad ad ad ad ad     I.......I.......
    1674:	49 ff ad ad ad ad ad ad 49 ff ad ad ad ad ad ad     I.......I.......
    1684:	49 ff ad ad ad ad ad ad 49 ff ad ad ad ad ad ad     I.......I.......
    1694:	49 ad 9b 9b 9b 9b 9b 9b 49 49 49 49 49 49 49 49     I.......IIIIIIII
    16a4:	9b ad ad ad ad ad 9b 49 9b ad ad ad ad ad 9b 49     .......I.......I
    16b4:	9b ad ad ad ad ad 9b 49 9b ad ad ad ad ad 9b 49     .......I.......I
    16c4:	9b ad ad ad ad ad 9b 49 9b ad ad ad ad ad 9b 49     .......I.......I
    16d4:	9b 9b 9b 9b 9b 9b 9b 49 49 49 49 49 49 49 49 49     .......IIIIIIIII
    16e4:	01 01 01 01 01 01 01 01 01 17 17 17 17 17 17 17     ................
    16f4:	01 17 06 06 06 06 06 06 01 17 06 06 06 06 06 06     ................
    1704:	01 17 06 06 06 06 06 06 01 17 06 06 06 06 06 06     ................
    1714:	01 17 06 06 06 06 06 06 01 06 02 02 02 02 02 02     ................
    1724:	01 01 01 01 01 01 01 01 17 17 17 17 17 17 06 01     ................
    1734:	02 06 06 06 06 06 02 01 02 06 06 06 06 06 02 01     ................
    1744:	02 06 06 06 06 06 02 01 02 06 06 06 06 06 02 01     ................
    1754:	02 06 06 06 06 06 02 01 02 02 02 02 02 02 02 01     ................
    1764:	01 17 06 06 06 06 06 06 01 17 06 06 06 06 06 06     ................
    1774:	01 17 06 06 06 06 06 06 01 17 06 06 06 06 06 06     ................
    1784:	01 17 06 06 06 06 06 06 01 17 06 06 06 06 06 06     ................
    1794:	01 06 02 02 02 02 02 02 01 01 01 01 01 01 01 01     ................
    17a4:	02 06 06 06 06 06 02 01 02 06 06 06 06 06 02 01     ................
    17b4:	02 06 06 06 06 06 02 01 02 06 06 06 06 06 02 01     ................
    17c4:	02 06 06 06 06 06 02 01 02 06 06 06 06 06 02 01     ................
    17d4:	02 02 02 02 02 02 02 01 01 01 01 01 01 01 01 01     ................
    17e4:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 db e4 db e4 db     ................
    17f4:	e4 e4 db e4 db db db e4 e4 db db db db db db db     ................
    1804:	e4 e4 db db db db 92 db e4 db db 92 db 92 db 92     ................
    1814:	db 92 92 92 92 92 92 92 89 89 89 89 89 89 89 89     ................
    1824:	e4 e4 e4 e4 e4 e4 db 89 e4 db e4 db e4 db 92 89     ................
    1834:	db db db e4 db 92 92 89 db db db db db db 92 89     ................
    1844:	db 92 db 92 db 92 92 89 db db 92 db 92 db 92 89     ................
    1854:	92 92 92 92 92 92 92 89 89 89 89 89 89 89 89 89     ................
    1864:	e4 e4 e4 e4 e4 e4 db 89 e4 db e4 db e4 db 92 89     ................
    1874:	db db db e4 db 92 92 89 db db 92 db 92 db 92 89     ................
    1884:	db 92 db 92 db 92 92 89 db db 92 db 92 db 92 89     ................
    1894:	92 92 92 92 92 92 92 89 89 89 89 89 89 89 89 89     ................
    18a4:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 db e4 db e4 db     ................
    18b4:	e4 e4 db e4 db db db e4 e4 db db db db db db db     ................
    18c4:	e4 e4 92 db 92 db 92 db e4 db db 92 db 92 db 92     ................
    18d4:	db 92 92 92 92 92 92 92 89 89 89 89 89 89 89 89     ................
    18e4:	18 18 18 18 10 18 18 1a 18 10 1a 18 18 18 18 10     ................
    18f4:	1a 18 10 18 10 18 18 1a 10 18 18 1a 18 18 18 18     ................
    1904:	18 18 18 10 18 18 18 1a 18 1a 18 18 18 1a 18 10     ................
    1914:	18 18 18 18 18 10 18 18 18 10 1a 18 1a 18 18 10     ................
    1924:	18 18 18 18 10 18 18 1a 18 18 1a 18 18 18 18 10     ................
    1934:	1a 18 10 18 18 18 18 18 10 18 18 1a 10 18 18 18     ................
    1944:	18 18 18 10 18 18 18 1a 18 1a 18 18 10 1a 18 10     ................
    1954:	18 18 18 18 18 10 18 18 18 10 18 18 1a 18 18 18     ................
    1964:	18 18 18 18 10 18 18 1a 18 18 1a 18 18 18 18 10     ................
    1974:	1a 18 10 18 18 18 10 18 10 18 18 1a 10 18 18 18     ................
    1984:	18 18 18 10 18 10 18 1a 18 1a 18 18 18 1a 18 10     ................
    1994:	18 18 18 18 18 10 18 18 18 10 18 18 1a 18 18 18     ................
    19a4:	18 18 18 18 10 18 18 1a 18 10 1a 18 18 18 1a 10     ................
    19b4:	1a 18 10 18 18 10 18 18 10 18 18 1a 18 18 18 18     ................
    19c4:	18 18 18 10 18 18 18 1a 1a 1a 18 18 18 1a 18 10     ................
    19d4:	1a 18 18 18 18 10 10 18 18 10 18 18 1a 18 18 18     ................
	...
    19ec:	00 52 52 52 52 52 52 52 00 52 49 49 49 49 49 49     .RRRRRRR.RIIIIII
    19fc:	00 52 49 49 49 49 49 49 00 00 00 00 00 00 00 00     .RIIIIII........
    1a0c:	52 52 52 52 49 52 52 52 49 49 49 49 00 52 49 49     RRRRIRRRIIII.RII
    1a1c:	49 49 49 49 00 52 49 49 00 00 00 00 00 00 00 00     IIII.RII........
    1a2c:	49 52 52 52 52 52 52 52 00 52 49 49 49 49 49 49     IRRRRRRR.RIIIIII
    1a3c:	00 52 49 49 49 49 49 49 00 00 00 00 00 00 00 00     .RIIIIII........
    1a4c:	52 52 52 52 49 52 52 52 49 49 49 49 00 52 49 49     RRRRIRRRIIII.RII
    1a5c:	49 49 49 49 00 52 49 49 49 00 00 00 00 00 00 00     IIII.RIII.......
    1a6c:	49 52 52 52 52 52 52 52 00 52 49 49 49 49 49 49     IRRRRRRR.RIIIIII
    1a7c:	00 52 49 49 49 49 49 49 00 00 00 00 00 00 00 00     .RIIIIII........
    1a8c:	52 52 52 52 49 52 52 52 49 49 49 49 00 52 49 49     RRRRIRRRIIII.RII
    1a9c:	49 49 49 49 00 52 49 49 00 00 00 00 49 00 00 00     IIII.RII....I...
    1aac:	49 52 52 52 52 52 52 52 00 52 49 49 49 49 49 49     IRRRRRRR.RIIIIII
    1abc:	00 52 49 49 49 49 49 49 00 00 00 00 00 00 00 00     .RIIIIII........
    1acc:	52 52 52 52 49 52 52 52 49 49 49 49 00 52 49 49     RRRRIRRRIIII.RII
    1adc:	49 49 49 49 00 52 49 49 00 00 00 00 00 00 00 00     IIII.RII........
    1aec:	49 52 52 52 52 52 52 52 00 52 49 49 49 49 49 49     IRRRRRRR.RIIIIII
    1afc:	00 52 49 49 49 49 49 49 00 00 00 00 00 00 00 00     .RIIIIII........
    1b0c:	52 52 52 52 49 52 52 37 49 49 49 49 00 52 37 37     RRRRIRR7IIII.R77
    1b1c:	49 49 49 49 00 37 37 37 00 00 00 00 00 00 00 00     IIII.777........
    1b2c:	49 52 52 52 52 52 52 52 00 52 49 49 49 49 49 49     IRRRRRRR.RIIIIII
    1b3c:	00 52 49 49 49 49 49 49 00 00 00 00 00 00 00 00     .RIIIIII........
    1b4c:	37 52 52 52 49 52 52 52 37 37 49 49 00 52 49 49     7RRRIRRR77II.RII
    1b5c:	37 37 37 49 00 52 49 49 00 00 00 00 00 37 37 37     777I.RII.....777
    1b6c:	49 52 52 52 52 52 37 37 00 52 49 49 49 49 49 37     IRRRRR77.RIIIII7
    1b7c:	00 52 49 49 49 49 49 49 00 00 00 00 00 00 00 00     .RIIIIII........
    1b8c:	52 52 52 52 49 52 52 52 49 49 49 49 00 52 49 49     RRRRIRRRIIII.RII
    1b9c:	49 49 49 49 00 52 49 49 37 37 37 00 00 00 00 00     IIII.RII777.....
    1bac:	37 37 52 52 52 52 52 52 37 52 49 49 49 49 49 49     77RRRRRR7RIIIIII
    1bbc:	00 52 49 49 49 49 49 49 00 00 00 00 00 00 00 00     .RIIIIII........
    1bcc:	52 52 52 52 49 52 52 52 49 49 49 49 00 52 49 49     RRRRIRRRIIII.RII
    1bdc:	49 49 49 49 00 52 49 49 0a 0a 0a 0a 0a 0a 0a 0a     IIII.RII........
    1bec:	0a 66 14 66 66 66 66 66 0a 14 0a 0a 0a 0a 0a 0a     .f.fffff........
    1bfc:	0a 66 0a 1d 66 1d 14 1d 0a 66 0a 0a 1d 66 14 1d     .f..f....f...f..
    1c0c:	0a 66 0a 1d 0a 1d 66 1d 0a 66 0a 1d 14 0a 1d 66     .f....f..f.....f
    1c1c:	0a 66 0a 1d 14 1d 66 1d 0a 0a 0a 0a 0a 0a 0a 0a     .f....f.........
    1c2c:	66 66 66 66 0a 66 14 0a 0a 0a 0a 0a 0a 14 0a 0a     ffff.f..........
    1c3c:	14 1d 66 1d 0a 66 14 0a 14 66 1d 0a 0a 66 14 0a     ..f..f...f...f..
    1c4c:	66 1d 0a 1d 0a 66 14 0a 1d 0a 14 1d 0a 66 14 0a     f....f.......f..
    1c5c:	0a 1d 14 1d 0a 66 14 0a 0a 66 0a 1d 14 66 1d 0a     .....f...f...f..
    1c6c:	0a 66 0a 1d 66 1d 0a 1d 0a 66 0a 66 1d 0a 14 1d     .f..f....f.f....
    1c7c:	0a 66 0a 1d 0a 1d 14 1d 0a 14 0a 0a 0a 0a 0a 0a     .f..............
    1c8c:	0a 66 14 66 66 66 66 66 0a 14 0a 14 14 14 14 14     .f.fffff........
    1c9c:	0a 0a 0a 0a 0a 0a 0a 0a 1d 66 14 1d 0a 66 14 0a     .........f...f..
    1cac:	0a 1d 66 1d 0a 66 14 0a 14 0a 1d 66 0a 66 14 0a     ..f..f.....f.f..
    1cbc:	14 1d 0a 1d 0a 66 14 0a 0a 0a 0a 0a 0a 14 0a 0a     .....f..........
    1ccc:	66 66 66 66 14 66 14 0a 14 14 14 14 0a 14 14 0a     ffff.f..........
    1cdc:	0a 0a 0a 0a 0a 0a 0a 0a 01 01 01 01 01 01 01 01     ................
    1cec:	01 17 02 17 17 17 17 17 01 02 01 01 01 01 01 01     ................
    1cfc:	01 17 01 06 17 06 02 06 01 17 01 01 06 17 02 06     ................
    1d0c:	01 17 01 06 01 06 17 06 01 17 01 06 02 01 06 17     ................
    1d1c:	01 17 01 06 02 06 17 06 01 01 01 01 01 01 01 01     ................
    1d2c:	17 17 17 17 01 17 02 01 01 01 01 01 01 02 01 01     ................
    1d3c:	02 06 17 06 01 17 02 01 02 17 06 01 01 17 02 01     ................
    1d4c:	17 06 01 06 01 17 02 01 06 01 02 06 01 17 02 01     ................
    1d5c:	01 06 02 06 01 17 02 01 01 17 01 06 02 17 06 01     ................
    1d6c:	01 17 01 06 17 06 01 06 01 17 01 17 06 01 02 06     ................
    1d7c:	01 17 01 06 01 06 02 06 01 02 01 01 01 01 01 01     ................
    1d8c:	01 17 02 17 17 17 17 17 01 02 01 02 02 02 02 02     ................
    1d9c:	01 01 01 01 01 01 01 01 06 17 02 06 01 17 02 01     ................
    1dac:	01 06 17 06 01 17 02 01 02 01 06 17 01 17 02 01     ................
    1dbc:	02 06 01 06 01 17 02 01 01 01 01 01 01 02 01 01     ................
    1dcc:	17 17 17 17 02 17 02 01 02 02 02 02 01 02 02 01     ................
    1ddc:	01 01 01 01 01 01 01 01 64 64 64 64 64 64 64 64     ........dddddddd
    1dec:	64 64 64 64 64 64 64 64 64 64 5b 5b 5b 5b 5b 5b     dddddddddd[[[[[[
    1dfc:	64 64 5b 5b 5b 5b 5b 5b 64 64 5b 5b 5b 5b 5b 5b     dd[[[[[[dd[[[[[[
    1e0c:	64 5b 5b 5b 5b 5b 5b 5b 5b 09 09 09 09 09 09 09     d[[[[[[[[.......
    1e1c:	09 09 09 09 09 09 09 09 64 64 64 64 64 64 64 12     ........ddddddd.
    1e2c:	64 64 64 64 64 5b 12 12 5b 5b 5b 5b 5b 5b 12 12     ddddd[..[[[[[[..
    1e3c:	5b 5b 5b 5b 5b 5b 12 12 5b 5b 5b 5b 5b 5b 12 12     [[[[[[..[[[[[[..
    1e4c:	5b 5b 5b 5b 5b 5b 12 12 09 09 09 09 09 09 12 12     [[[[[[..........
    1e5c:	09 09 09 09 09 09 09 12 64 64 64 64 64 64 64 12     ........ddddddd.
    1e6c:	64 64 64 64 5b 5b 12 12 5b 5b 5b 5b 5b 5b 12 12     dddd[[..[[[[[[..
    1e7c:	5b 5b 5b 5b 5b 5b 12 12 5b 5b 5b 5b 5b 5b 12 12     [[[[[[..[[[[[[..
    1e8c:	5b 5b 5b 5b 5b 5b 12 12 09 09 09 09 09 09 12 12     [[[[[[..........
    1e9c:	09 09 09 09 09 09 09 12 64 64 64 64 64 64 64 64     ........dddddddd
    1eac:	64 64 64 64 64 64 64 64 64 64 5b 5b 5b 5b 5b 5b     dddddddddd[[[[[[
    1ebc:	64 64 5b 5b 5b 5b 5b 5b 64 5b 5b 5b 5b 5b 5b 5b     dd[[[[[[d[[[[[[[
    1ecc:	64 5b 5b 5b 5b 5b 5b 5b 5b 09 09 09 09 09 09 09     d[[[[[[[[.......
    1edc:	09 09 09 09 09 09 09 09 ff ff ff ff ff ff ff ff     ................
    1eec:	ff ff ff ff ff ff ff ff 5b 5b 5b 5b 5b 5b 5b 5b     ........[[[[[[[[
    1efc:	80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80     ................
    1f0c:	c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0     ................
    1f1c:	c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0     ................
    1f2c:	c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0     ................
    1f3c:	c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0     ................
    1f4c:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1f5c:	5b 5b 5b 5b 5b 5b 5b 5b ff ff 5b 80 80 c0 c0 c0     [[[[[[[[..[.....
    1f6c:	ff ff 5b 80 80 c0 c0 c0 ff ff 5b 80 80 c0 c0 c0     ..[.......[.....
    1f7c:	ff ff 5b 80 80 c0 c0 c0 ff ff 5b 80 80 c0 c0 c0     ..[.......[.....
    1f8c:	ff ff 5b 80 80 c0 c0 c0 ff ff 5b 80 80 c0 c0 c0     ..[.......[.....
    1f9c:	ff ff 5b 80 80 c0 c0 c0 c0 c0 c0 c0 c0 ff ff 5b     ..[............[
    1fac:	c0 c0 c0 c0 c0 ff ff 5b c0 c0 c0 c0 c0 ff ff 5b     .......[.......[
    1fbc:	c0 c0 c0 c0 c0 ff ff 5b c0 c0 c0 c0 c0 ff ff 5b     .......[.......[
    1fcc:	c0 c0 c0 c0 c0 ff ff 5b c0 c0 c0 c0 c0 ff ff 5b     .......[.......[
    1fdc:	c0 c0 c0 c0 c0 ff ff 5b ff ff 00 80 80 c0 c0 c0     .......[........
    1fec:	ff 00 f6 00 00 c0 c0 c0 ff 00 f6 f6 f6 00 c0 c0     ................
    1ffc:	ff 00 f6 f6 f6 f6 00 c0 ff 00 f6 f6 f6 00 c0 c0     ................
    200c:	ff 00 f6 00 00 c0 c0 c0 ff ff 00 80 80 c0 c0 c0     ................
    201c:	ff ff 5b 80 80 c0 c0 c0 00 00 ff ff ff ff ff ff     ..[.............
    202c:	00 ff ff ff ff ff ff ff ff ff ff ff ff 5b 5b 5b     .............[[[
    203c:	ff ff ff 5b 5b 80 80 80 ff ff 5b 5b 80 80 80 80     ...[[.....[[....
    204c:	ff ff 5b 80 80 80 c0 c0 ff ff 5b 80 80 c0 c0 c0     ..[.......[.....
    205c:	ff ff 5b 80 80 c0 c0 c0 ff ff ff ff ff 5b 00 00     ..[..........[..
    206c:	ff ff ff ff ff 5b 5b 00 5b 5b 5b ff ff ff 5b 5b     .....[[.[[[...[[
    207c:	80 80 80 5b 5b ff ff 5b 80 80 80 80 5b ff ff 5b     ...[[..[....[..[
    208c:	c0 c0 c0 c0 80 ff ff 5b c0 c0 c0 c0 c0 ff ff 5b     .......[.......[
    209c:	c0 c0 c0 c0 c0 ff ff 5b ff ff 5b 80 80 c0 c0 c0     .......[..[.....
    20ac:	ff ff 5b 80 80 c0 c0 c0 ff ff 5b 80 80 c0 c0 c0     ..[.......[.....
    20bc:	ff ff 5b 5b 80 c0 c0 c0 ff ff ff 5b 5b 80 c0 c0     ..[[.......[[...
    20cc:	ff ff ff ff ff ff ff ff 00 ff ff ff ff ff ff ff     ................
    20dc:	00 00 5b 5b 5b 5b 5b 5b c0 c0 c0 c0 c0 ff ff 5b     ..[[[[[[.......[
    20ec:	c0 c0 c0 c0 c0 ff ff 5b c0 c0 c0 c0 c0 ff ff 5b     .......[.......[
    20fc:	c0 c0 c0 c0 ff ff ff 5b c0 c0 c0 ff ff ff ff 5b     .......[.......[
    210c:	ff ff ff ff ff ff 5b 5b ff ff ff ff ff 5b 5b 00     ......[[.....[[.
    211c:	5b 5b 5b 5b 5b 5b 00 00 00 00 00 00 00 00 00 00     [[[[[[..........
	...
    2164:	c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0     ................
    2174:	c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0     ................
    2184:	c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0     ................
    2194:	c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0     ................
    21a4:	c0 c0 ff ff ff 80 c0 c0 c0 c0 ff ff ff 80 c0 c0     ................
    21b4:	c0 c0 ff ff ff 80 c0 c0 c0 c0 ff ff 80 80 c0 c0     ................
    21c4:	c0 c0 ff ff 80 c0 c0 c0 c0 c0 80 80 80 c0 c0 c0     ................
    21d4:	c0 c0 ff ff 80 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0     ................
    21e4:	c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 ff c0 c0 c0 c0     ................
    21f4:	c0 ff c0 ff c0 ff c0 c0 c0 c0 ff ff ff c0 c0 c0     ................
    2204:	c0 ff c0 ff c0 ff c0 c0 c0 c0 c0 ff c0 c0 c0 c0     ................
    2214:	c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0     ................
    2224:	c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0     ................
    2234:	c0 c0 c0 c0 c0 c0 c0 c0 c0 ff ff ff ff ff c0 c0     ................
    2244:	c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0     ................
    2254:	c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0     ................
    2264:	c0 c0 ff ff ff c0 c0 c0 c0 ff 80 80 ff ff c0 c0     ................
    2274:	ff ff 80 c0 80 ff ff c0 ff ff 80 c0 c0 ff ff c0     ................
    2284:	ff ff 80 c0 c0 ff ff c0 c0 ff ff 80 c0 ff 80 c0     ................
    2294:	c0 c0 ff ff ff 80 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0     ................
    22a4:	c0 c0 c0 ff ff c0 c0 c0 c0 c0 ff ff ff 80 c0 c0     ................
    22b4:	c0 c0 c0 ff ff 80 c0 c0 c0 c0 c0 ff ff 80 c0 c0     ................
    22c4:	c0 c0 c0 ff ff 80 c0 c0 c0 c0 c0 ff ff 80 c0 c0     ................
    22d4:	c0 ff ff ff ff ff ff c0 c0 c0 80 80 80 80 80 80     ................
    22e4:	c0 ff ff ff ff ff 80 c0 ff ff c0 c0 c0 ff ff 80     ................
    22f4:	c0 c0 c0 c0 ff ff ff 80 c0 c0 ff ff ff ff 80 c0     ................
    2304:	c0 ff ff ff ff 80 c0 c0 ff ff ff 80 80 c0 c0 c0     ................
    2314:	ff ff ff ff ff ff ff c0 c0 80 80 80 80 80 80 80     ................
    2324:	c0 ff ff ff ff ff ff c0 c0 c0 80 80 ff ff 80 c0     ................
    2334:	c0 c0 c0 ff ff 80 c0 c0 c0 c0 ff ff ff ff c0 c0     ................
    2344:	c0 c0 c0 c0 c0 ff ff c0 ff ff c0 c0 c0 ff ff c0     ................
    2354:	c0 ff ff ff ff ff 80 c0 c0 c0 80 80 80 80 c0 c0     ................
    2364:	c0 c0 c0 ff ff ff 80 c0 c0 c0 ff ff ff ff 80 c0     ................
    2374:	c0 ff ff 80 ff ff 80 c0 ff ff 80 c0 ff ff 80 c0     ................
    2384:	ff ff ff ff ff ff ff c0 c0 80 80 80 ff ff 80 80     ................
    2394:	c0 c0 c0 c0 ff ff 80 c0 c0 c0 c0 c0 c0 80 80 c0     ................
    23a4:	ff ff ff ff ff ff c0 c0 ff ff 80 80 80 80 c0 c0     ................
    23b4:	ff ff ff ff ff ff c0 c0 c0 80 80 80 80 ff ff c0     ................
    23c4:	c0 c0 c0 c0 80 ff ff c0 ff ff c0 c0 80 ff ff c0     ................
    23d4:	c0 ff ff ff ff ff c0 c0 c0 80 80 80 80 80 c0 c0     ................
    23e4:	c0 c0 ff ff ff ff c0 c0 c0 ff ff 80 80 c0 c0 c0     ................
    23f4:	ff ff 80 c0 c0 c0 c0 c0 ff ff ff ff ff ff c0 c0     ................
    2404:	ff ff 80 80 80 ff ff c0 ff ff 80 c0 c0 ff ff c0     ................
    2414:	c0 ff ff ff ff ff 80 c0 c0 c0 80 80 80 80 c0 c0     ................
    2424:	ff ff ff ff ff ff ff c0 ff ff 80 80 80 ff ff c0     ................
    2434:	c0 c0 c0 c0 ff ff 80 c0 c0 c0 c0 ff ff 80 c0 c0     ................
    2444:	c0 c0 ff ff 80 c0 c0 c0 c0 c0 ff ff 80 c0 c0 c0     ................
    2454:	c0 c0 ff ff 80 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0     ................
    2464:	c0 ff ff ff ff c0 c0 c0 ff ff 80 80 80 ff c0 c0     ................
    2474:	ff ff ff 80 c0 ff c0 c0 c0 ff ff ff ff c0 c0 c0     ................
    2484:	ff 80 80 ff ff ff ff c0 ff 80 c0 c0 c0 ff ff c0     ................
    2494:	c0 ff ff ff ff ff 80 c0 c0 c0 c0 c0 c0 c0 c0 c0     ................
    24a4:	c0 ff ff ff ff ff c0 c0 ff ff 80 80 80 ff ff c0     ................
    24b4:	ff ff 80 c0 c0 ff ff c0 c0 ff ff ff ff ff ff c0     ................
    24c4:	c0 c0 c0 c0 c0 ff ff c0 c0 c0 c0 c0 ff ff 80 c0     ................
    24d4:	c0 ff ff ff ff 80 c0 c0 c0 c0 80 80 80 c0 c0 c0     ................
    24e4:	c0 c0 ff ff ff 80 c0 c0 c0 ff ff 80 ff ff 80 c0     ................
    24f4:	ff ff 80 c0 80 ff ff c0 ff ff 80 c0 c0 ff ff 80     ................
    2504:	ff ff ff ff ff ff ff 80 ff ff 80 80 80 ff ff 80     ................
    2514:	ff ff 80 c0 c0 ff ff 80 80 80 80 c0 c0 c0 80 80     ................
    2524:	ff ff ff ff ff ff c0 c0 ff ff 80 80 80 ff ff c0     ................
    2534:	ff ff 80 c0 c0 ff ff c0 ff ff ff ff ff ff 80 c0     ................
    2544:	ff ff 80 80 80 ff ff c0 ff ff 80 c0 c0 ff ff c0     ................
    2554:	ff ff ff ff ff ff 80 c0 c0 80 80 80 80 80 c0 c0     ................
    2564:	c0 c0 ff ff ff ff 80 c0 c0 ff ff 80 80 ff ff c0     ................
    2574:	ff ff 80 c0 c0 c0 c0 c0 ff ff 80 c0 c0 c0 c0 c0     ................
    2584:	ff ff 80 c0 c0 c0 c0 c0 c0 ff ff 80 80 ff ff c0     ................
    2594:	c0 80 ff ff ff ff 80 c0 c0 c0 80 80 80 80 c0 c0     ................
    25a4:	ff ff ff ff ff 80 c0 c0 ff ff 80 80 ff ff 80 c0     ................
    25b4:	ff ff 80 c0 c0 ff ff c0 ff ff 80 c0 c0 ff ff c0     ................
    25c4:	ff ff 80 c0 c0 ff ff c0 ff ff 80 c0 ff ff 80 c0     ................
    25d4:	ff ff ff ff ff 80 c0 c0 c0 80 80 80 80 c0 c0 c0     ................
    25e4:	ff ff ff ff ff ff ff c0 ff ff 80 80 80 80 c0 c0     ................
    25f4:	ff ff 80 c0 c0 c0 c0 c0 ff ff ff ff ff ff c0 c0     ................
    2604:	ff ff 80 80 80 c0 c0 c0 ff ff 80 c0 c0 c0 c0 c0     ................
    2614:	ff ff ff ff ff ff ff c0 c0 80 80 80 80 80 80 c0     ................
    2624:	ff ff ff ff ff ff ff c0 ff ff 80 80 80 80 c0 c0     ................
    2634:	ff ff 80 c0 c0 c0 c0 c0 ff ff ff ff ff ff c0 c0     ................
    2644:	ff ff 80 80 80 c0 c0 c0 ff ff 80 c0 c0 c0 c0 c0     ................
    2654:	ff ff 80 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0     ................
    2664:	c0 c0 ff ff ff ff ff c0 c0 ff ff 80 80 80 c0 c0     ................
    2674:	ff ff 80 c0 c0 c0 c0 c0 ff ff 80 c0 ff ff ff c0     ................
    2684:	ff ff 80 c0 80 ff ff c0 c0 ff ff 80 80 ff ff c0     ................
    2694:	c0 c0 ff ff ff ff 80 c0 c0 c0 c0 c0 c0 c0 c0 c0     ................
    26a4:	ff ff c0 c0 c0 ff ff c0 ff ff 80 c0 c0 ff ff 80     ................
    26b4:	ff ff 80 c0 c0 ff ff 80 ff ff ff ff ff ff ff 80     ................
    26c4:	ff ff 80 80 80 ff ff 80 ff ff 80 c0 c0 ff ff 80     ................
    26d4:	ff ff 80 c0 c0 ff ff 80 c0 80 80 c0 c0 c0 80 80     ................
    26e4:	c0 ff ff ff ff ff ff c0 c0 c0 c0 ff ff 80 c0 c0     ................
    26f4:	c0 c0 c0 ff ff 80 c0 c0 c0 c0 c0 ff ff 80 c0 c0     ................
    2704:	c0 c0 c0 ff ff 80 c0 c0 c0 c0 c0 ff ff 80 c0 c0     ................
    2714:	c0 ff ff ff ff ff ff c0 c0 c0 80 80 80 80 80 c0     ................
    2724:	c0 c0 c0 ff ff ff ff 80 c0 c0 c0 c0 ff ff 80 c0     ................
    2734:	c0 c0 c0 c0 ff ff 80 c0 c0 c0 c0 c0 ff ff 80 c0     ................
    2744:	c0 c0 c0 c0 ff ff 80 c0 ff c0 c0 c0 ff ff 80 c0     ................
    2754:	c0 ff ff ff ff 80 c0 c0 c0 c0 80 80 80 80 c0 c0     ................
    2764:	ff ff c0 c0 c0 ff ff c0 ff ff 80 c0 ff ff 80 c0     ................
    2774:	ff ff 80 ff ff 80 c0 c0 ff ff ff ff 80 c0 c0 c0     ................
    2784:	ff ff ff ff ff c0 c0 c0 ff ff 80 ff ff ff c0 c0     ................
    2794:	ff ff 80 c0 ff ff ff c0 c0 80 80 c0 c0 80 80 c0     ................
    27a4:	c0 ff ff c0 c0 c0 c0 c0 c0 ff ff 80 c0 c0 c0 c0     ................
    27b4:	c0 ff ff 80 c0 c0 c0 c0 c0 ff ff 80 c0 c0 c0 c0     ................
    27c4:	c0 ff ff 80 c0 c0 c0 c0 c0 ff ff 80 c0 c0 c0 c0     ................
    27d4:	c0 ff ff ff ff ff ff c0 c0 c0 80 80 80 80 80 c0     ................
    27e4:	ff ff 80 c0 c0 ff ff c0 ff ff ff 80 ff ff ff 80     ................
    27f4:	ff ff ff ff ff ff ff 80 ff ff ff ff ff ff ff 80     ................
    2804:	ff ff 80 ff 80 ff ff 80 ff ff 80 c0 c0 ff ff 80     ................
    2814:	ff ff 80 c0 c0 ff ff 80 c0 80 80 c0 c0 c0 80 80     ................
    2824:	ff ff c0 c0 c0 ff ff c0 ff ff ff 80 c0 ff ff 80     ................
    2834:	ff ff ff ff 80 ff ff 80 ff ff ff ff ff ff ff 80     ................
    2844:	ff ff 80 ff ff ff ff 80 ff ff 80 c0 ff ff ff 80     ................
    2854:	ff ff 80 c0 c0 ff ff 80 c0 80 80 c0 c0 c0 80 80     ................
    2864:	c0 ff ff ff ff ff c0 c0 ff ff 80 80 80 ff ff c0     ................
    2874:	ff ff 80 c0 c0 ff ff c0 ff ff 80 c0 c0 ff ff c0     ................
    2884:	ff ff 80 c0 c0 ff ff c0 ff ff 80 c0 c0 ff ff c0     ................
    2894:	c0 ff ff ff ff ff 80 c0 c0 c0 80 80 80 80 c0 c0     ................
    28a4:	ff ff ff ff ff ff c0 c0 ff ff 80 80 80 ff ff c0     ................
    28b4:	ff ff 80 c0 c0 ff ff c0 ff ff 80 c0 c0 ff ff c0     ................
    28c4:	ff ff ff ff ff ff 80 c0 ff ff 80 c0 c0 c0 c0 c0     ................
    28d4:	ff ff 80 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0     ................
    28e4:	c0 ff ff ff ff ff c0 c0 ff ff 80 c0 c0 ff ff c0     ................
    28f4:	ff ff 80 c0 c0 ff ff c0 ff ff 80 c0 c0 ff ff c0     ................
    2904:	ff ff 80 ff ff ff ff c0 ff ff 80 c0 ff ff 80 c0     ................
    2914:	c0 ff ff ff ff 80 ff c0 c0 c0 c0 c0 c0 c0 c0 c0     ................
    2924:	ff ff ff ff ff ff c0 c0 ff ff 80 80 80 ff ff c0     ................
    2934:	ff ff 80 c0 c0 ff ff c0 ff ff 80 c0 ff ff ff c0     ................
    2944:	ff ff ff ff ff 80 c0 c0 ff ff 80 ff ff ff 80 c0     ................
    2954:	ff ff 80 c0 ff ff ff 80 c0 c0 c0 c0 c0 c0 c0 c0     ................
    2964:	c0 ff ff ff ff 80 c0 c0 ff ff 80 80 ff ff c0 c0     ................
    2974:	ff ff 80 c0 c0 c0 c0 c0 c0 ff ff ff ff ff c0 c0     ................
    2984:	c0 c0 c0 80 80 ff ff c0 ff ff c0 c0 c0 ff ff c0     ................
    2994:	c0 ff ff ff ff ff 80 c0 c0 c0 c0 c0 c0 c0 c0 c0     ................
    29a4:	ff ff ff ff ff ff 80 c0 c0 c0 ff ff 80 c0 c0 c0     ................
    29b4:	c0 c0 ff ff 80 c0 c0 c0 c0 c0 ff ff 80 c0 c0 c0     ................
    29c4:	c0 c0 ff ff 80 c0 c0 c0 c0 c0 ff ff 80 c0 c0 c0     ................
    29d4:	c0 c0 ff ff 80 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0     ................
    29e4:	ff ff 80 c0 c0 ff ff 80 ff ff 80 c0 c0 ff ff 80     ................
    29f4:	ff ff 80 c0 c0 ff ff 80 ff ff 80 c0 c0 ff ff 80     ................
    2a04:	ff ff 80 c0 c0 ff ff 80 ff ff 80 80 80 ff ff 80     ................
    2a14:	c0 ff ff ff ff ff 80 c0 c0 c0 c0 c0 c0 c0 c0 c0     ................
    2a24:	ff ff 80 c0 c0 ff ff 80 ff ff 80 c0 c0 ff ff 80     ................
    2a34:	ff ff 80 c0 c0 ff ff 80 ff ff ff 80 ff ff ff 80     ................
    2a44:	c0 ff ff ff ff ff 80 c0 c0 c0 ff ff ff 80 c0 c0     ................
    2a54:	c0 c0 c0 ff 80 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0     ................
    2a64:	ff ff c0 c0 c0 ff ff c0 ff ff 80 c0 c0 ff ff 80     ................
    2a74:	ff ff 80 ff 80 ff ff 80 ff ff ff ff ff ff ff 80     ................
    2a84:	ff ff ff ff ff ff ff 80 ff ff ff 80 ff ff ff 80     ................
    2a94:	ff ff 80 c0 80 ff ff 80 c0 80 c0 c0 c0 c0 80 80     ................
    2aa4:	ff ff 80 c0 c0 ff ff 80 ff ff ff 80 ff ff ff 80     ................
    2ab4:	c0 ff ff ff ff ff 80 c0 c0 c0 ff ff ff 80 c0 c0     ................
    2ac4:	c0 ff ff ff ff ff 80 c0 ff ff ff 80 ff ff ff 80     ................
    2ad4:	ff ff 80 c0 c0 ff ff 80 c0 c0 c0 c0 c0 c0 c0 c0     ................
    2ae4:	c0 ff ff 80 c0 ff ff 80 c0 ff ff 80 c0 ff ff 80     ................
    2af4:	c0 ff ff 80 c0 ff ff 80 c0 c0 ff ff ff ff 80 c0     ................
    2b04:	c0 c0 c0 ff ff 80 c0 c0 c0 c0 c0 ff ff 80 c0 c0     ................
    2b14:	c0 c0 c0 ff ff 80 c0 c0 c0 c0 c0 c0 80 80 c0 c0     ................
    2b24:	ff ff ff ff ff ff ff 80 c0 80 80 80 ff ff ff 80     ................
    2b34:	c0 c0 c0 ff ff ff 80 c0 c0 c0 ff ff ff 80 c0 c0     ................
    2b44:	c0 ff ff ff 80 c0 c0 c0 ff ff ff 80 c0 c0 c0 c0     ................
    2b54:	ff ff ff ff ff ff ff 80 c0 80 80 80 80 80 80 80     ................
    2b64:	00 00 00 82 82 82 82 82 00 00 82 07 07 07 07 07     ................
    2b74:	00 82 07 07 07 07 07 07 82 17 17 17 17 17 17 17     ................
    2b84:	82 17 17 17 17 17 17 82 82 1f 1f 1f 1f 1f 1f 82     ................
    2b94:	00 82 1f 1f 1f 1f 1f 82 00 00 82 27 27 27 27 82     ...........''''.
    2ba4:	82 82 00 00 00 00 00 00 82 07 82 82 00 00 00 00     ................
    2bb4:	82 07 07 07 82 00 00 00 82 17 17 17 82 00 00 00     ................
    2bc4:	17 17 82 82 00 00 00 00 1f 82 00 00 00 00 00 00     ................
    2bd4:	1f 82 00 00 00 00 00 00 27 27 82 00 00 00 00 00     ........''......
    2be4:	00 00 00 00 00 00 82 82 00 00 00 00 00 82 07 07     ................
    2bf4:	00 00 00 82 82 07 07 07 00 00 82 82 17 17 17 17     ................
    2c04:	00 00 82 17 17 17 17 17 00 82 82 1f 1f 1f 1f 1f     ................
    2c14:	00 82 1f 1f 1f 1f 1f 1f 82 82 27 27 27 27 27 27     ..........''''''
    2c24:	82 82 82 82 00 00 00 00 07 82 07 07 82 00 00 00     ................
    2c34:	07 82 07 07 07 82 00 00 17 82 17 17 17 17 82 00     ................
    2c44:	82 17 17 17 17 17 82 00 82 1f 1f 1f 1f 1f 1f 82     ................
    2c54:	82 1f 1f 1f 1f 1f 1f 82 82 27 27 27 27 27 27 82     .........''''''.
    2c64:	00 00 00 00 00 82 82 82 00 00 00 00 82 07 07 07     ................
    2c74:	00 00 00 00 82 07 07 07 00 00 00 00 82 17 17 17     ................
    2c84:	00 00 00 82 17 17 17 17 00 00 00 82 1f 1f 1f 1f     ................
    2c94:	00 00 00 82 1f 1f 1f 1f 00 00 00 82 27 27 27 27     ............''''
    2ca4:	82 82 82 82 82 82 82 00 07 82 07 07 07 07 07 82     ................
    2cb4:	07 82 07 07 07 07 82 00 17 82 17 17 17 17 82 00     ................
    2cc4:	82 17 17 17 17 82 00 00 82 1f 1f 1f 1f 82 00 00     ................
    2cd4:	82 1f 1f 1f 82 00 00 00 82 27 27 27 82 00 00 00     .........'''....
    2ce4:	00 00 00 00 00 82 82 82 00 00 00 00 82 07 07 07     ................
    2cf4:	00 00 00 00 82 07 07 07 00 00 00 00 82 17 17 17     ................
    2d04:	00 00 00 82 17 17 17 82 00 00 00 82 1f 1f 1f 82     ................
    2d14:	00 00 00 82 1f 1f 1f 82 00 00 00 82 27 27 27 82     ............'''.
    2d24:	82 82 82 82 00 00 00 00 82 07 07 07 82 00 00 00     ................
    2d34:	82 07 07 07 07 82 00 00 82 17 17 17 17 17 82 00     ................
    2d44:	17 17 17 17 17 17 82 00 1f 1f 1f 1f 1f 1f 82 00     ................
    2d54:	1f 1f 1f 1f 1f 82 00 00 27 27 27 27 82 00 00 00     ........''''....
    2d64:	00 00 00 00 00 00 82 82 00 00 00 00 00 82 07 07     ................
    2d74:	00 00 00 00 00 82 07 07 00 00 00 00 00 82 17 17     ................
    2d84:	00 00 00 00 82 17 17 82 00 00 00 00 82 1f 1f 82     ................
    2d94:	00 00 00 00 82 1f 1f 82 00 00 00 82 82 27 27 82     .............''.
    2da4:	82 82 00 00 00 00 00 00 82 07 82 00 00 00 00 00     ................
    2db4:	82 07 82 00 00 00 00 00 82 17 82 00 00 00 00 00     ................
    2dc4:	17 17 17 82 00 00 00 00 1f 1f 1f 82 00 00 00 00     ................
    2dd4:	1f 1f 1f 82 00 00 00 00 27 27 27 82 82 00 00 00     ........'''.....
    2de4:	00 00 00 00 00 82 82 82 00 00 00 00 82 07 07 07     ................
    2df4:	00 00 00 00 82 07 07 07 00 00 00 00 82 17 17 17     ................
    2e04:	00 00 00 00 82 17 17 17 00 00 00 82 1f 82 1f 1f     ................
    2e14:	00 00 00 82 1f 82 1f 1f 00 00 82 27 27 82 27 27     ...........''.''
    2e24:	82 00 82 82 82 82 82 00 07 82 07 07 07 07 07 82     ................
    2e34:	07 82 07 07 07 07 07 82 17 82 17 17 17 17 82 82     ................
    2e44:	17 82 17 17 17 17 82 00 1f 1f 82 1f 1f 82 82 00     ................
    2e54:	1f 1f 82 1f 1f 82 00 00 27 27 82 27 82 82 00 00     ........''.'....
    2e64:	00 00 00 82 27 27 82 27 00 00 00 00 82 27 82 27     ....''.'.....'.'
    2e74:	00 00 00 82 2f 2f 82 2f 00 00 82 2f 2f 2f 82 2f     ....//./...///./
    2e84:	00 82 2f 2f 2f 82 2f 2f 00 82 3f 3f 3f 82 3f 3f     ..///.//..???.??
    2e94:	00 00 82 3f 3f 82 3f 3f 00 00 00 82 82 82 82 82     ...??.??........
    2ea4:	27 27 27 82 00 00 00 00 27 27 27 27 82 00 00 00     '''.....''''....
    2eb4:	2f 2f 2f 2f 2f 82 00 00 2f 2f 2f 2f 2f 82 00 00     /////.../////...
    2ec4:	2f 2f 2f 2f 2f 82 00 00 3f 3f 3f 3f 82 00 00 00     /////...????....
    2ed4:	3f 3f 3f 82 00 00 00 00 82 82 82 00 00 00 00 00     ???.............
    2ee4:	82 27 27 27 27 27 27 82 82 27 27 27 27 27 27 82     .''''''..''''''.
    2ef4:	82 2f 2f 2f 2f 2f 2f 82 00 82 2f 2f 2f 2f 2f 82     .//////.../////.
    2f04:	00 82 2f 2f 2f 2f 82 2f 00 00 82 3f 3f 3f 82 3f     ..////./...???.?
    2f14:	00 00 00 82 3f 3f 82 3f 00 00 00 00 82 82 82 82     ....??.?........
    2f24:	27 27 27 27 27 27 27 82 27 27 27 27 27 27 82 82     '''''''.''''''..
    2f34:	2f 2f 2f 2f 2f 2f 82 00 2f 2f 2f 2f 2f 2f 82 00     //////..//////..
    2f44:	2f 2f 2f 2f 2f 82 00 00 3f 3f 3f 3f 82 00 00 00     /////...????....
    2f54:	3f 3f 82 82 00 00 00 00 82 82 00 00 00 00 00 00     ??..............
    2f64:	00 00 82 27 27 27 27 82 00 00 82 27 27 27 27 82     ...''''....''''.
    2f74:	00 00 82 2f 2f 2f 2f 82 00 82 82 2f 2f 2f 2f 82     ...////....////.
    2f84:	00 82 2f 2f 2f 2f 82 2f 00 82 3f 3f 3f 3f 82 3f     ..////./..????.?
    2f94:	00 82 3f 3f 3f 3f 82 3f 00 00 82 82 82 82 82 82     ..????.?........
    2fa4:	27 27 82 82 00 00 00 00 27 27 82 00 00 00 00 00     ''......''......
    2fb4:	2f 2f 2f 82 00 00 00 00 2f 2f 2f 82 00 00 00 00     ///.....///.....
    2fc4:	2f 2f 2f 2f 82 00 00 00 3f 3f 3f 3f 82 82 00 00     ////....????....
    2fd4:	3f 3f 3f 3f 3f 82 00 00 82 82 82 82 82 00 00 00     ?????...........
    2fe4:	00 00 00 82 27 27 82 27 00 00 00 82 27 27 82 27     ....''.'....''.'
    2ff4:	00 00 00 82 2f 2f 82 2f 00 00 00 82 2f 2f 82 2f     ....//./....//./
    3004:	00 00 82 2f 2f 82 2f 2f 00 00 82 3f 3f 82 3f 3f     ...//.//...??.??
    3014:	00 00 82 3f 3f 82 3f 3f 00 00 82 82 82 82 82 82     ...??.??........
    3024:	27 27 82 82 00 00 00 00 27 27 27 27 82 00 00 00     ''......''''....
    3034:	2f 2f 2f 2f 2f 82 00 00 2f 2f 2f 2f 2f 82 00 00     /////.../////...
    3044:	2f 2f 2f 2f 2f 82 00 00 3f 3f 3f 3f 3f 82 00 00     /////...?????...
    3054:	3f 3f 3f 3f 82 00 00 00 82 82 82 82 00 00 00 00     ????............
    3064:	00 00 00 82 27 27 82 27 00 00 00 82 27 27 82 27     ....''.'....''.'
    3074:	00 00 00 82 2f 2f 82 2f 00 00 82 82 2f 2f 82 2f     ....//./....//./
    3084:	00 00 82 2f 2f 82 2f 2f 00 00 82 3f 3f 82 3f 3f     ...//.//...??.??
    3094:	00 00 82 3f 3f 82 3f 3f 00 00 00 82 82 82 82 82     ...??.??........
    30a4:	27 27 27 27 82 00 00 00 27 27 27 27 82 00 00 00     ''''....''''....
    30b4:	2f 2f 2f 2f 82 00 00 00 2f 2f 2f 2f 82 82 00 00     ////....////....
    30c4:	2f 2f 2f 2f 2f 82 00 00 3f 3f 3f 3f 3f 82 00 00     /////...?????...
    30d4:	3f 3f 3f 3f 3f 82 00 00 82 82 82 82 82 00 00 00     ?????...........
    30e4:	00 00 82 27 27 82 27 27 00 00 82 27 27 82 27 27     ...''.''...''.''
    30f4:	00 82 2f 2f 2f 82 2f 2f 00 82 2f 2f 2f 2f 82 2f     ..///.//..////./
    3104:	00 82 2f 2f 2f 2f 82 2f 82 3f 3f 3f 3f 82 82 3f     ..////./.????..?
    3114:	82 3f 3f 3f 3f 82 82 3f 00 00 82 82 82 00 00 82     .????..?........
    3124:	27 27 82 27 82 00 00 00 27 27 82 82 82 00 00 00     ''.'....''......
    3134:	2f 2f 2f 82 82 00 00 00 2f 2f 2f 82 00 00 00 00     ///.....///.....
    3144:	2f 2f 2f 82 00 00 00 00 3f 3f 82 00 00 00 00 00     ///.....??......
    3154:	3f 3f 82 00 00 00 00 00 82 82 00 00 00 00 00 00     ??..............
	...
    31a4:	82 82 82 82 82 00 82 82 82 07 07 07 07 82 07 07     ................
    31b4:	82 07 07 07 07 82 07 07 82 17 17 17 17 82 17 17     ................
    31c4:	82 17 17 17 17 82 17 17 00 82 1f 1f 1f 1f 82 1f     ................
    31d4:	00 82 1f 1f 1f 1f 82 1f 00 82 27 27 27 27 82 27     ..........''''.'
    31e4:	82 82 00 82 82 82 82 82 07 07 82 07 07 07 07 82     ................
    31f4:	07 07 82 07 07 07 07 82 17 17 82 17 17 17 17 82     ................
    3204:	17 17 82 17 17 17 17 82 1f 1f 1f 82 1f 1f 82 82     ................
    3214:	1f 1f 1f 82 1f 1f 82 00 27 27 27 82 27 82 82 00     ........'''.'...
    3224:	00 00 00 00 00 00 82 82 00 00 00 00 00 82 07 07     ................
    3234:	00 00 00 00 00 82 07 07 00 00 00 00 00 82 17 17     ................
    3244:	00 00 00 00 82 17 17 17 00 00 00 00 82 1f 1f 1f     ................
    3254:	00 00 00 00 82 1f 1f 1f 00 00 00 00 82 27 27 27     .............'''
    3264:	82 82 00 00 00 00 00 00 07 07 82 00 00 00 00 00     ................
    3274:	07 07 82 00 00 00 00 00 17 17 82 00 00 00 00 00     ................
    3284:	17 82 00 00 00 00 00 00 1f 82 00 00 00 00 00 00     ................
    3294:	1f 82 00 00 00 00 00 00 27 82 00 00 00 00 00 00     ........'.......
    32a4:	82 82 82 82 82 00 00 00 07 82 07 07 07 82 00 00     ................
    32b4:	07 82 07 07 07 07 82 00 17 82 17 17 17 17 82 00     ................
    32c4:	82 17 17 17 17 17 17 82 82 1f 1f 1f 1f 1f 1f 82     ................
    32d4:	82 1f 1f 1f 1f 1f 1f 82 82 27 27 27 27 27 27 82     .........''''''.
    32e4:	00 82 27 27 27 27 82 27 00 82 27 27 27 27 82 27     ..''''.'..''''.'
    32f4:	00 82 2f 2f 2f 2f 82 2f 00 00 82 2f 2f 2f 2f 82     ..////./...////.
    3304:	00 00 82 2f 2f 2f 2f 82 00 00 82 3f 3f 3f 82 82     ...////....???..
    3314:	00 00 82 3f 3f 3f 82 82 00 00 00 82 82 82 00 00     ...???..........
    3324:	27 27 27 82 27 82 00 00 27 27 27 82 82 82 00 00     '''.'...'''.....
    3334:	2f 2f 2f 2f 82 82 00 00 2f 2f 2f 2f 82 00 00 00     ////....////....
    3344:	2f 2f 2f 2f 82 00 00 00 3f 3f 3f 82 00 00 00 00     ////....???.....
    3354:	3f 3f 3f 82 00 00 00 00 82 82 82 00 00 00 00 00     ???.............
    3364:	00 00 82 27 27 27 82 27 00 00 82 27 27 27 82 27     ...'''.'...'''.'
    3374:	00 00 82 2f 2f 2f 82 2f 00 00 82 2f 2f 2f 82 2f     ...///./...///./
    3384:	00 82 2f 2f 2f 82 2f 2f 00 82 3f 3f 3f 82 3f 3f     ..///.//..???.??
    3394:	00 82 3f 3f 3f 82 3f 3f 00 00 82 82 82 82 82 82     ..???.??........
    33a4:	00 00 00 82 27 27 27 27 00 00 00 82 27 27 27 27     ....''''....''''
    33b4:	00 00 00 82 2f 2f 2f 2f 00 00 00 82 2f 2f 2f 2f     ....////....////
    33c4:	00 00 82 2f 2f 2f 2f 82 00 00 82 3f 3f 3f 3f 82     ...////....????.
    33d4:	00 00 82 3f 3f 3f 3f 82 00 00 00 82 82 82 82 82     ...????.........
    33e4:	82 00 00 00 00 00 00 00 82 00 82 82 82 00 00 00     ................
    33f4:	82 82 2f 2f 82 00 00 00 82 2f 2f 2f 82 00 00 00     ..//.....///....
    3404:	2f 2f 2f 2f 82 00 00 00 3f 3f 3f 82 82 00 00 00     ////....???.....
    3414:	3f 3f 3f 82 00 00 00 00 82 82 82 00 00 00 00 00     ???.............
    3424:	00 00 82 27 27 27 27 82 00 00 82 27 27 27 27 82     ...''''....''''.
    3434:	00 00 82 2f 2f 2f 2f 82 00 00 82 2f 2f 2f 2f 82     ...////....////.
    3444:	00 82 2f 2f 2f 2f 82 2f 00 82 3f 3f 3f 3f 82 3f     ..////./..????.?
    3454:	00 82 3f 3f 3f 3f 82 3f 00 00 82 82 82 82 82 82     ..????.?........
    3464:	27 27 27 27 27 27 27 82 27 27 27 27 27 27 27 82     '''''''.'''''''.
    3474:	2f 2f 2f 2f 2f 2f 82 00 2f 2f 2f 2f 2f 2f 82 00     //////..//////..
    3484:	2f 2f 2f 2f 2f 82 00 00 3f 3f 3f 3f 82 00 00 00     /////...????....
    3494:	3f 82 82 82 00 00 00 00 82 00 00 00 00 00 00 00     ?...............

000034a4 <colormap>:
    34a4:	0f 30 f0 37 c0                                      .0.7.

000034a9 <TitleMap>:
    34a9:	01 02 03 04 05 06 03 04 07 08 09 0a 0b 0c 0d 0e     ................
    34b9:	0f 10 11 12 0f 10 13 14 15 16 17 18 19 19 1a 1b     ................
    34c9:	03 04 07 08 1c 1d 05 1e 19 19 19 19 1f 20 0f 10     ............. ..
    34d9:	21 12 22 23 24 25 19 19                             !."#$%..

000034e1 <ScreenFadeParms>:
    34e1:	17 11 03 00 05 00 30 08 04 00 04 00 27 11 03 01     ......0.....'...
    34f1:	05 00 00 09 04 00 04 00 37 08 04 01 04 00 08 09     ........7.......
    3501:	04 01 04 00 28 08 04 00 04 00 09 0e 02 00 04 00     ....(...........
    3511:	2f 08 04 01 04 00 38 08 06 00 08 00 16 0e 02 01     /.....8.........
    3521:	04 00                                               ..

00003523 <ScreenFadeTable>:
    3523:	81 00 00 00 00 00 00 81 42 81 00 00 00 00 81 42     ........B......B
    3533:	24 42 81 00 00 81 42 24 18 42 81 81 81 81 42 18     $B....B$.B....B.
    3543:	00 24 42 81 81 43 24 18 00 18 42 81 81 42 42 00     .$B..C$...B..BB.
    3553:	00 00 24 42 42 24 3c 00 00 00 1c 24 24 00 00 00     ..$BB$<....$$...
    3563:	00 00 00 18 18 18 00 00 80 00 00 00 00 00 00 00     ................
    3573:	40 80 00 00 00 00 00 00 20 40 80 00 00 00 00 00     @....... @......
    3583:	10 20 40 80 00 00 00 00 08 10 20 40 80 00 00 00     . @....... @....
    3593:	04 08 10 20 40 80 00 00 02 04 08 10 20 40 80 00     ... @....... @..
    35a3:	01 02 04 08 10 20 40 80 00 01 02 04 08 10 20 40     ..... @....... @
    35b3:	00 00 01 02 04 08 10 20 00 00 00 01 02 04 08 10     ....... ........
    35c3:	00 00 00 00 01 02 04 08 00 00 00 00 00 01 02 04     ................
    35d3:	00 00 00 00 00 00 01 03 f0 00 00 00 00 00 00 00     ................
    35e3:	0f 00 00 00 00 00 00 00 00 01 01 01 01 00 00 00     ................
    35f3:	00 00 00 00 00 01 01 03 00 00 00 00 00 00 00 3c     ...............<
    3603:	00 00 00 00 00 80 80 c0 00 80 80 80 80 00 00 00     ................
    3613:	00 78 00 00 00 00 00 00 00 06 02 02 00 00 00 00     .x..............
    3623:	00 00 00 00 02 02 06 00 00 00 00 00 00 00 78 00     ..............x.
    3633:	00 00 40 40 40 40 00 00 00 00 3c 00 00 00 00 00     ..@@@@....<.....
    3643:	00 00 00 04 04 0c 00 00 00 00 00 20 20 30 00 00     ...........  0..
    3653:	00 00 00 18 08 08 00 00 00 00 00 00 10 10 00 00     ................
    3663:	80 80 80 80 80 80 80 80 40 40 40 40 40 40 40 40     ........@@@@@@@@
    3673:	20 20 20 20 20 20 20 20 10 10 10 10 10 10 10 10             ........
    3683:	08 08 08 08 08 08 08 08 04 04 04 04 04 04 04 04     ................
    3693:	02 02 02 02 02 02 02 02 01 01 01 01 01 01 01 01     ................
    36a3:	ff 00 00 00 00 00 00 00 00 ff 00 00 00 00 00 00     ................
    36b3:	00 00 ff 00 00 00 00 00 00 00 00 ff 00 00 00 00     ................
    36c3:	00 00 00 00 ff 00 00 00 00 00 00 00 00 ff 00 00     ................
    36d3:	00 00 00 00 00 00 ff 00 00 00 00 00 00 00 00 ff     ................
    36e3:	10 00 00 00 00 00 00 10 28 10 00 00 00 00 10 28     ........(......(
    36f3:	44 28 10 00 00 10 28 44 82 44 28 10 10 28 44 82     D(....(D.D(..(D.
    3703:	01 82 44 28 28 44 82 01 00 00 00 00 81 00 00 00     ..D((D..........
    3713:	00 00 00 81 42 81 00 00 00 00 81 42 24 42 81 00     ....B......B$B..

00003723 <GameSprites>:
    3723:	09 09 09 09 09 09 09 09 09 2e 2e 2e 2e 2e 2e 2e     ................
    3733:	09 2e 1c 1c 1c 1c 1c 1c 09 2e 13 13 13 13 13 13     ................
    3743:	09 2e 1c 1c 1c 1c 1c 1c 09 2e 1c 1c 1c 1c 1c 1c     ................
    3753:	09 2e 13 13 13 13 13 2e 09 2e 1c 1c 1c 1c 2e 1c     ................
    3763:	09 09 09 09 09 09 09 09 2e 2e 2e 2e 2e 2e 13 09     ................
    3773:	1c 1c 1c 2e 1c 2e 13 09 13 13 2e 1c 13 2e 13 09     ................
    3783:	1c 2e 1c 13 1c 2e 13 09 2e 1c 13 1c 1c 2e 13 09     ................
    3793:	1c 13 13 13 13 2e 13 09 13 1c 1c 1c 1c 2e 13 09     ................
    37a3:	09 2e 1c 1c 1c 2e 1c 13 09 2e 13 13 2e 1c 13 13     ................
    37b3:	09 2e 1c 2e 1c 13 1c 1c 09 2e 2e 1c 13 1c 1c 2e     ................
    37c3:	09 2e 1c 13 13 13 13 13 09 2e 2e 2e 2e 2e 2e 2e     ................
    37d3:	09 13 13 13 13 13 13 13 09 09 09 09 09 09 09 09     ................
    37e3:	1c 1c 1c 1c 1c 2e 13 09 13 13 13 13 13 2e 13 09     ................
    37f3:	1c 1c 1c 1c 1c 2e 13 09 1c 2e 2e 1c 1c 2e 13 09     ................
    3803:	13 13 13 13 13 2e 13 09 2e 2e 2e 2e 2e 2e 13 09     ................
    3813:	13 13 13 13 13 13 13 09 09 09 09 09 09 09 09 09     ................
    3823:	fe fe fe fe fe fe 00 00 fe fe fe fe 00 00 37 ff     ..............7.
    3833:	fe fe fe 00 16 16 37 ff fe fe 00 16 6f 16 37 ff     ......7.....o.7.
    3843:	fe 00 00 16 6f 16 37 37 00 16 00 16 6f 16 37 37     ....o.77....o.77
    3853:	00 6f 00 16 6f 6f 16 37 fe 00 00 16 6f 6f 6f 16     .o..oo.7....ooo.
    3863:	00 fe fe fe fe fe fe fe 37 00 00 fe fe fe fe fe     ........7.......
    3873:	37 16 16 00 fe fe fe fe 37 16 6f 16 00 fe fe fe     7.......7.o.....
    3883:	37 16 6f 16 00 00 fe fe 37 16 6f 16 00 16 00 fe     7.o.....7.o.....
    3893:	16 6f 6f 16 00 6f 00 fe 6f 6f 6f 16 00 00 fe fe     .oo..o..ooo.....
    38a3:	fe 00 ff 00 16 6f 6f 6f fe 00 ff 00 00 16 16 16     .....ooo........
    38b3:	fe fe 00 d0 d0 00 00 00 fe fe 00 d0 d0 d0 d0 d0     ................
    38c3:	fe fe fe 00 d0 d0 d0 d0 fe fe 00 07 00 00 00 00     ................
    38d3:	fe fe 00 07 07 07 00 fe fe fe fe 00 00 00 fe fe     ................
    38e3:	6f 6f 16 00 ff ff 00 fe 16 16 00 d0 ff 00 00 fe     oo..............
    38f3:	00 00 d0 d0 00 07 00 fe d0 d0 d0 d0 00 07 00 fe     ................
    3903:	d0 d0 d0 00 fe 00 fe fe 00 00 00 fe fe fe fe fe     ................
    3913:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    3923:	fe fe fe fe fe 00 00 00 fe fe fe fe 00 07 37 ff     ..............7.
    3933:	fe fe fe 00 07 07 37 ff fe 00 00 07 07 07 37 ff     ......7.......7.
    3943:	00 07 00 07 07 07 37 37 00 07 00 07 07 07 07 37     ......77.......7
    3953:	fe 00 00 07 07 07 07 07 fe 00 ff 00 07 07 07 07     ................
    3963:	00 00 fe fe fe fe fe fe 37 07 00 fe fe fe fe fe     ........7.......
    3973:	37 07 07 00 fe fe fe fe 37 07 07 07 00 00 fe fe     7.......7.......
    3983:	37 07 07 07 00 07 00 fe 07 07 07 07 00 07 00 fe     7...............
    3993:	07 07 07 07 00 00 fe fe 07 07 07 00 ff 00 fe fe     ................
    39a3:	fe 00 d0 00 07 07 07 07 fe 00 d0 d0 00 00 00 00     ................
    39b3:	fe 00 d0 d0 d0 d0 d0 d0 fe 00 d0 d0 d0 d0 d0 d0     ................
    39c3:	fe fe 00 d0 d0 d0 d0 d0 fe 00 07 00 00 00 00 00     ................
    39d3:	fe 00 07 07 07 00 fe fe fe fe 00 00 00 fe fe fe     ................
    39e3:	07 00 d0 00 fe fe fe fe 00 d0 d0 00 fe fe fe fe     ................
    39f3:	d0 d0 d0 00 fe fe fe fe d0 d0 d0 00 fe fe fe fe     ................
    3a03:	d0 d0 00 fe fe fe fe fe 00 00 fe fe fe fe fe fe     ................
    3a13:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    3a23:	fe fe fe fe fe fe 00 00 fe fe fe fe 00 00 37 ff     ..............7.
    3a33:	fe fe fe 00 16 16 37 ff fe fe 00 16 6f 16 37 37     ......7.....o.77
    3a43:	fe 00 00 16 6f 6f 16 37 00 6f 00 16 6f 6f 6f 16     ....oo.7.o..ooo.
    3a53:	00 6f 00 16 6f 00 6f 6f fe 00 00 16 6f ff 00 6f     .o..o.oo....o..o
    3a63:	00 fe fe fe fe fe fe fe 37 00 00 fe fe fe fe fe     ........7.......
    3a73:	37 16 16 00 fe fe fe fe 37 16 6f 16 00 fe fe fe     7.......7.o.....
    3a83:	16 6f 6f 16 00 00 fe fe 6f 6f 6f 16 00 16 00 fe     .oo.....ooo.....
    3a93:	6f 00 6f 16 00 6f 00 fe 00 ff 6f 16 00 00 00 fe     o.o..o....o.....
    3aa3:	fe 00 d0 00 16 ff 00 6f fe 00 d0 d0 00 16 6f 6f     .......o......oo
    3ab3:	fe fe 00 d0 d0 00 00 00 fe fe 00 d0 d0 d0 d0 d0     ................
    3ac3:	fe fe fe 00 d0 d0 d0 d0 fe fe 00 07 00 00 00 00     ................
    3ad3:	fe fe 00 07 07 07 00 fe fe fe fe 00 00 00 fe fe     ................
    3ae3:	00 ff 16 00 ff ff 00 fe 6f 16 00 d0 ff ff 00 fe     ........o.......
    3af3:	00 00 d0 d0 00 07 00 fe d0 d0 d0 00 00 07 00 fe     ................
    3b03:	d0 d0 00 fe fe 00 fe fe 00 00 fe fe fe fe fe fe     ................
    3b13:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    3b23:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe 00 00     ................
    3b33:	fe fe fe fe 00 00 37 ff fe fe fe 00 07 07 37 ff     ......7.......7.
    3b43:	fe fe 00 07 07 07 37 37 fe 00 00 07 07 07 37 37     ......77......77
    3b53:	00 07 00 07 07 07 07 37 00 07 00 07 07 00 07 07     .......7........
    3b63:	fe fe fe fe fe fe fe fe 00 fe fe fe fe fe fe fe     ................
    3b73:	37 00 00 fe fe fe fe fe 37 07 07 00 fe fe fe fe     7.......7.......
    3b83:	37 07 07 07 00 fe fe fe 37 07 07 07 00 00 fe fe     7.......7.......
    3b93:	07 07 07 07 00 07 00 fe 07 00 07 07 00 07 00 fe     ................
    3ba3:	fe 00 00 07 07 ff 00 07 fe 00 07 07 07 ff 00 07     ................
    3bb3:	fe 00 07 07 07 07 07 07 fe 00 00 07 07 07 07 07     ................
    3bc3:	fe 00 ff 00 00 07 07 07 fe 00 00 00 00 00 00 00     ................
    3bd3:	fe 00 6f 6f 00 fe fe fe fe fe 00 00 fe fe fe fe     ..oo............
    3be3:	00 ff 07 07 00 00 fe fe 00 ff 07 07 07 00 fe fe     ................
    3bf3:	07 07 07 07 07 00 fe fe 07 07 07 07 00 00 fe fe     ................
    3c03:	07 07 00 00 ff 00 fe fe 00 00 00 00 00 00 fe fe     ................
    3c13:	fe fe 00 6f 6f 00 fe fe fe fe fe 00 00 fe fe fe     ...oo...........
    3c23:	fe fe fe fe fe 00 00 00 fe fe fe fe 00 37 37 37     .............777
    3c33:	fe fe fe fe 00 16 16 16 fe fe fe 00 6f 6f 00 6f     ............oo.o
    3c43:	fe fe fe 00 6f 00 ff 6f fe fe fe 00 6f 00 ff 6f     ....o..o....o..o
    3c53:	fe fe fe 00 6f 6f 6f 6f fe fe fe fe 00 6f 6f 00     ....oooo.....oo.
    3c63:	00 00 00 fe fe fe fe fe 37 37 37 00 fe fe fe fe     ........777.....
    3c73:	16 16 37 37 00 fe fe fe 6f 6f 16 37 00 fe fe fe     ..77....oo.7....
    3c83:	6f 6f 6f 16 00 fe fe fe 00 6f 16 16 00 fe fe fe     ooo......o......
    3c93:	00 6f 00 16 00 fe fe fe 6f 6f 00 00 fe fe fe fe     .o......oo......
    3ca3:	fe fe 00 00 d0 00 00 00 fe fe 00 00 d0 d0 00 ff     ................
    3cb3:	fe fe fe 00 d0 d0 00 ff fe fe fe 00 d0 d0 00 07     ................
    3cc3:	fe fe fe fe 00 00 00 00 fe fe fe 00 07 07 07 00     ................
    3cd3:	fe fe fe fe 00 00 00 fe fe fe fe fe fe fe fe fe     ................
    3ce3:	00 00 00 00 fe fe fe fe ff 00 d0 00 fe fe fe fe     ................
    3cf3:	ff 00 d0 00 fe fe fe fe 07 00 d0 00 fe fe fe fe     ................
    3d03:	00 00 00 fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    3d13:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    3d23:	fe fe fe fe fe fe fe fe fe fe fe fe fe 00 00 00     ................
    3d33:	fe fe fe fe 00 37 37 37 fe fe fe fe 00 16 16 00     .....777........
    3d43:	fe fe fe 00 6f 6f 00 6f fe fe fe 00 6f 00 ff 6f     ....oo.o....o..o
    3d53:	fe fe fe 00 6f 00 ff 6f fe fe fe 00 6f 6f 6f 6f     ....o..o....oooo
    3d63:	fe fe fe fe fe fe fe fe 00 00 00 fe fe fe fe fe     ................
    3d73:	37 37 37 00 fe fe fe fe 16 16 37 37 00 fe fe fe     777.......77....
    3d83:	6f 6f 16 37 00 fe fe fe 6f 6f 6f 16 00 fe fe fe     oo.7....ooo.....
    3d93:	6f 6f 16 16 00 fe fe fe 00 6f 00 16 00 fe fe fe     oo.......o......
    3da3:	fe fe fe fe 00 6f 6f 00 fe fe fe 00 d0 00 00 00     .....oo.........
    3db3:	fe fe fe 00 d0 00 ff ff fe fe fe 00 d0 00 ff ff     ................
    3dc3:	fe fe 00 07 00 07 07 00 fe fe fe 00 00 00 00 00     ................
    3dd3:	fe fe fe fe fe fe 00 07 fe fe fe fe fe fe fe 00     ................
    3de3:	6f 6f 00 00 fe fe fe fe 00 00 00 00 fe fe fe fe     oo..............
    3df3:	00 d0 d0 00 fe fe fe fe 00 d0 d0 00 fe fe fe fe     ................
    3e03:	d0 00 00 fe fe fe fe fe 00 07 00 fe fe fe fe fe     ................
    3e13:	07 00 fe fe fe fe fe fe 00 fe fe fe fe fe fe fe     ................
    3e23:	fe fe fe fe 00 00 00 00 fe fe fe 00 37 37 37 37     ............7777
    3e33:	fe fe 00 07 07 07 07 07 fe fe 00 07 07 07 07 07     ................
    3e43:	fe 00 07 07 00 07 07 07 fe 00 07 00 ff 07 07 00     ................
    3e53:	fe 00 07 00 ff 07 00 07 fe 00 07 07 07 07 00 07     ................
    3e63:	00 00 fe fe fe fe fe fe 37 37 00 fe fe fe fe fe     ........77......
    3e73:	07 37 37 00 fe fe fe fe 07 07 37 00 fe fe fe fe     .77.......7.....
    3e83:	07 07 07 00 fe fe fe fe 00 07 07 00 fe fe fe fe     ................
    3e93:	07 00 07 00 fe fe fe fe 07 00 00 fe fe fe fe fe     ................
    3ea3:	fe fe 00 07 07 07 00 07 00 00 00 00 00 00 00 00     ................
    3eb3:	00 6f 00 ff ff ff ff 00 fe 00 00 00 00 00 00 d0     .o..............
    3ec3:	fe fe fe fe fe 00 d0 d0 fe fe fe fe fe fe 00 00     ................
    3ed3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    3ee3:	00 d0 00 fe fe fe fe fe d0 d0 d0 00 fe fe fe fe     ................
    3ef3:	d0 d0 d0 00 fe fe fe fe d0 00 00 fe fe fe fe fe     ................
    3f03:	00 07 00 fe fe fe fe fe 07 07 00 fe fe fe fe fe     ................
    3f13:	00 00 fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    3f23:	fe fe fe fe fe fe fe fe fe fe fe fe 00 00 00 00     ................
    3f33:	fe fe fe 00 37 37 37 37 fe fe 00 07 07 07 07 07     ....7777........
    3f43:	fe fe 00 07 07 07 07 07 fe 00 07 07 00 00 07 07     ................
    3f53:	fe 00 07 00 ff 07 07 00 fe 00 07 00 ff 07 00 07     ................
    3f63:	fe fe fe fe fe fe fe fe 00 00 fe fe fe fe fe fe     ................
    3f73:	37 37 00 fe fe fe fe fe 07 37 37 00 fe fe fe fe     77.......77.....
    3f83:	07 07 37 00 fe fe fe fe 07 07 07 00 fe fe fe fe     ..7.............
    3f93:	00 07 07 00 fe fe fe fe 07 00 07 00 fe fe fe fe     ................
    3fa3:	fe 00 07 07 07 07 00 07 fe fe 00 07 07 07 00 07     ................
	...
    3fbb:	00 6f 00 ff 00 ff ff 00 fe 00 00 00 ff 00 00 d0     .o..............
    3fcb:	fe fe fe fe fe 00 d0 00 fe fe fe fe fe fe 00 07     ................
    3fdb:	fe fe fe fe fe fe fe 00 07 00 00 fe fe fe fe fe     ................
    3feb:	00 d0 00 fe fe fe fe fe d0 d0 d0 00 fe fe fe fe     ................
    3ffb:	d0 d0 d0 00 fe fe fe fe 00 00 00 fe fe fe fe fe     ................
    400b:	07 00 fe fe fe fe fe fe 07 00 fe fe fe fe fe fe     ................
    401b:	00 fe fe fe fe fe fe fe 00 00 00 00 00 00 00 00     ................
    402b:	00 76 76 76 76 76 76 76 00 76 1b 1b 6d 6d 1b 1b     .vvvvvvv.v..mm..
    403b:	00 76 24 24 6d 6d 1b 24 00 76 6d 6d 6d 6d 1b 24     .v$$mm.$.vmmmm.$
    404b:	00 76 6d 6d 6d 6d 6d 1b 00 76 6d 1b 6d 6d 6d 1b     .vmmmmm..vm.mmm.
    405b:	00 76 1b 24 1b 6d 6d 1b 00 00 00 00 00 00 00 00     .v.$.mm.........
    406b:	76 76 76 76 76 6d 1b 00 1b 6d 6d 1b 6d 24 1b 00     vvvvvm...mm.m$..
    407b:	24 6d 6d 1b 6d 24 1b 00 24 1b 6d 6d 6d 24 1b 00     $mm.m$..$.mmm$..
    408b:	24 24 6d 6d 6d 24 1b 00 24 24 1b 6d 6d 24 1b 00     $$mmm$..$$.mm$..
    409b:	24 24 24 6d 6d 24 1b 00 00 76 24 24 24 6d 6d 1b     $$$mm$...v$$$mm.
    40ab:	00 76 6d 6d 6d 6d 6d 1b 00 76 1b 1b 1b 6d 1b 6d     .vmmmmm..v...m.m
    40bb:	00 76 6d 6d 6d 1b 6d 1b 00 76 6d 6d 6d 6d 6d 6d     .vmmm.m..vmmmmmm
    40cb:	00 6d 24 24 24 24 24 24 00 1b 1b 1b 1b 1b 1b 1b     .m$$$$$$........
	...
    40e3:	24 24 24 1b 6d 24 1b 00 1b 24 24 24 6d 24 1b 00     $$$.m$...$$$m$..
    40f3:	1b 6d 24 24 6d 24 1b 00 1b 6d 6d 24 6d 24 1b 00     .m$$m$...mm$m$..
    4103:	6d 6d 6d 6d 6d 24 1b 00 24 24 24 24 24 24 1b 00     mmmmm$..$$$$$$..
    4113:	1b 1b 1b 1b 1b 1b 1b 00 00 00 00 00 00 00 00 00     ................
    4123:	fe fe fe fe 00 00 00 00 fe fe 00 00 1c 2e 2e 2e     ................
    4133:	fe 00 1c 2e 1c 2e 2e 2e fe 00 1c 2e 00 1c 1c 1c     ................
    4143:	fe 00 1c 2e 2e 00 00 00 00 1f 00 1c 2e 2e 1c 2e     ................
    4153:	00 6f 00 00 1c 1c 2e 2e fe 00 00 1f 00 00 1c 1c     .o..............
    4163:	00 00 00 fe fe fe fe fe 2e 2e 1c 00 00 fe fe fe     ................
    4173:	2e 2e 1c 2e 1c 00 fe fe 1c 1c 00 2e 1c 00 fe fe     ................
    4183:	00 00 2e 1c 1c 00 fe fe 2e 1c 2e 1c 00 1f 00 fe     ................
    4193:	2e 2e 1c 00 00 6f 00 fe 1c 1c 00 1f 00 00 fe fe     .....o..........
    41a3:	fe 00 64 00 00 1f 1f 00 fe fe 00 76 76 00 00 00     ..d........vv...
    41b3:	fe fe 00 64 76 76 76 76 fe fe fe 00 64 64 64 64     ...dvvvv....dddd
    41c3:	fe fe 00 98 00 00 00 00 fe fe 00 98 98 98 00 fe     ................
    41d3:	fe fe fe 00 00 00 fe fe fe fe fe fe fe fe fe fe     ................
    41e3:	76 00 00 00 64 76 00 fe 64 00 76 76 00 00 00 fe     v...dv..d.vv....
    41f3:	00 76 76 64 00 6f 00 fe 64 64 64 00 fe 00 01 fe     .vvd.o..ddd.....
    4203:	00 00 00 fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    4213:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    4223:	fe fe fe fe 00 00 00 00 fe fe 00 00 1c 2e 2e 2e     ................
    4233:	fe 00 1c 2e 1c 2e 2e 2e fe 00 1c 2e 00 1c 1c 1c     ................
    4243:	00 00 1c 2e 2e 00 00 00 00 1f 00 1c 2e 2e 1c 2e     ................
    4253:	fe 00 00 00 1c 1c 2e 2e fe 00 6f 00 00 00 1c 1c     ..........o.....
    4263:	00 00 00 fe fe fe fe fe 2e 2e 1c 00 00 fe fe fe     ................
    4273:	2e 2e 1c 2e 1c 00 fe fe 1c 1c 00 2e 1c 00 fe fe     ................
    4283:	00 00 2e 1c 1c 00 00 fe 2e 1c 2e 1c 00 1f 00 fe     ................
    4293:	2e 2e 1c 00 00 00 fe fe 1c 1c 00 00 6f 00 fe fe     ............o...
    42a3:	fe fe 00 64 00 0e 00 00 fe fe 00 64 76 00 00 00     ...d.......dv...
    42b3:	fe fe 00 64 76 76 76 00 fe fe 00 64 64 76 76 76     ...dvvv....ddvvv
    42c3:	fe fe fe 00 64 64 64 64 fe fe 00 98 00 00 00 00     ....dddd........
    42d3:	fe fe 00 98 98 98 00 fe fe fe fe 00 00 00 fe fe     ................
    42e3:	00 00 00 64 00 fe fe fe 76 00 76 64 00 fe fe fe     ...d....v.vd....
    42f3:	64 00 76 64 00 fe fe fe 00 76 64 64 00 fe fe fe     d.vd.....vdd....
    4303:	64 64 64 00 fe fe fe fe 00 00 00 fe fe fe fe fe     ddd.............
    4313:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    4323:	fe fe fe 00 00 00 00 00 fe fe 00 1c 00 1c 2e 2e     ................
    4333:	fe 00 1c 1c 2e 00 00 00 fe 00 1c 1c 2e 1c 2e 2e     ................
    4343:	fe 00 00 1c 1c 2e 2e 2e 00 6f 00 00 00 00 00 00     .........o......
    4353:	00 6f 00 1f 6f 00 6f 6f fe 00 00 1f 6f ff 00 6f     .o..o.oo....o..o
    4363:	00 00 00 00 fe fe fe fe 1c 00 2e 1c 00 fe fe fe     ................
    4373:	00 2e 2e 1c 1c 00 fe fe 2e 1c 2e 1c 1c 00 fe fe     ................
    4383:	2e 1c 1c 1c 00 00 fe fe 00 00 00 00 00 1f 00 fe     ................
    4393:	6f 00 6f 1f 00 6f 00 fe 00 ff 1f 1f 00 00 fe fe     o.o..o..........
    43a3:	fe 00 2e 00 1f ff 00 6f fe 00 76 76 00 1f 1f 1f     .......o..vv....
    43b3:	fe fe 00 76 76 00 00 00 fe fe 00 64 76 76 76 64     ...vv......dvvvd
    43c3:	fe fe fe 00 64 64 64 64 fe fe 00 98 00 00 00 00     ....dddd........
    43d3:	fe fe 00 98 98 98 00 fe fe fe fe 00 00 00 fe fe     ................
    43e3:	00 ff 1f 00 1c 1c 00 fe 1f 1f 00 64 00 64 00 fe     ...........d.d..
    43f3:	00 00 76 64 00 00 00 fe 76 76 64 00 00 6f 00 fe     ..vd....vvd..o..
    4403:	64 64 00 fe fe 00 fe fe 00 00 fe fe fe fe fe fe     dd..............
    4413:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    4423:	fe fe fe fe fe fe fe fe fe fe fe 00 00 00 00 00     ................
    4433:	fe fe 00 1c 2e 00 1c 2e fe 00 1c 1c 2e 2e 00 00     ................
    4443:	fe 00 1c 1c 2e 1c 2e 2e fe 00 00 1c 1c 1c 2e 2e     ................
    4453:	00 0e 00 00 00 00 00 00 00 1f 00 0e 1f 00 1f 1f     ................
    4463:	fe fe fe fe fe fe fe fe 00 00 00 00 fe fe fe fe     ................
    4473:	2e 1c 00 1c 00 fe fe fe 00 00 2e 1c 1c 00 fe fe     ................
    4483:	2e 1c 2e 1c 1c 00 fe fe 2e 2e 1c 1c 00 00 fe fe     ................
    4493:	00 00 00 00 00 1f 00 fe 1f 00 1f 0e 00 1f 00 fe     ................
    44a3:	fe 00 00 0e 1f ff 00 1f fe 00 0e 1f 1f ff 00 1f     ................
    44b3:	fe 00 0e 1f 1f 1f 1f 1f fe 00 00 0e 1f 1f 1f 1f     ................
    44c3:	fe 00 6f 00 00 0e 0e 0e fe 00 6f 00 00 00 00 00     ..o.......o.....
    44d3:	fe 00 6f 6f 00 fe fe fe fe fe 00 00 fe fe fe fe     ..oo............
    44e3:	00 ff 1f 0e 00 00 fe fe 00 ff 1f 1f 0e 00 fe fe     ................
    44f3:	1f 1f 1f 1f 0e 00 fe fe 1f 1f 0e 0e 00 00 fe fe     ................
    4503:	0e 0e 00 00 6f 00 fe fe 00 00 00 00 6f 00 fe fe     ....o.......o...
    4513:	fe fe 00 6f 6f 00 fe fe fe fe fe 00 00 fe fe fe     ...oo...........
    4523:	fe fe fe fe fe 00 00 00 fe fe fe fe 00 1c 2e 2e     ................
    4533:	fe fe fe 00 1c 2e 2e 1c fe fe fe 00 1c 1c 1c 00     ................
    4543:	fe fe fe 00 00 00 00 00 fe fe fe 00 6f 00 ff 6f     ............o..o
    4553:	fe fe fe 00 6f 6f 6f 6f fe fe fe fe 00 6f 6f 00     ....oooo.....oo.
    4563:	00 00 00 00 fe fe fe fe 1c 00 1c 1c 00 fe fe fe     ................
    4573:	2e 2e 2e 00 1c 00 fe fe 1c 1c 00 00 1c 00 fe fe     ................
    4583:	00 00 00 00 00 1c 00 fe 6f 00 00 1f 00 2e 00 fe     ........o.......
    4593:	6f 6f 00 1f 00 2e 00 fe 6f 1f 00 00 00 1c 00 fe     oo......o.......
    45a3:	fe fe 00 00 76 00 00 00 fe fe 00 00 76 76 00 6f     ....v.......vv.o
    45b3:	fe fe fe 00 64 76 00 6f fe fe fe 00 64 64 00 6f     ....dv.o....dd.o
    45c3:	fe fe fe 00 00 00 00 00 fe fe fe 00 98 98 98 00     ................
    45d3:	fe fe fe fe 00 00 00 fe fe fe fe fe fe fe fe fe     ................
    45e3:	00 00 00 00 fe 00 00 fe 6f 00 76 00 fe fe fe fe     ........o.v.....
    45f3:	6f 00 76 00 fe fe fe fe 6f 00 64 00 fe fe fe fe     o.v.....o.d.....
    4603:	00 00 00 fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    4613:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    4623:	fe fe fe fe fe fe fe fe fe fe fe fe fe 00 00 00     ................
    4633:	fe fe fe fe 00 1c 2e 2e fe fe fe 00 1c 2e 2e 1c     ................
    4643:	fe fe fe 00 1c 1c 1c 00 fe fe fe 00 00 00 00 00     ................
    4653:	fe fe fe 00 6f 00 ff 6f fe fe fe 00 6f 6f 6f 6f     ....o..o....oooo
    4663:	fe fe fe fe fe fe fe fe 00 00 00 00 fe fe fe fe     ................
    4673:	1c 00 1c 1c 00 fe fe fe 2e 2e 2e 00 1c 00 fe fe     ................
    4683:	1c 1c 00 00 1c 00 fe fe 00 00 00 00 00 2e 00 fe     ................
    4693:	6f 00 00 1f 00 00 2e 00 6f 6f 00 1f 00 00 1c 00     o.......oo......
    46a3:	fe fe fe fe 00 6f 6f 00 fe fe fe 00 76 00 00 00     .....oo.....v...
    46b3:	fe fe fe 00 76 00 6f 6f fe fe fe 00 64 00 6f 6f     ....v.oo....d.oo
    46c3:	fe fe 00 6f 00 6f 6f 00 fe fe fe 00 00 00 00 00     ...o.oo.........
    46d3:	fe fe fe fe fe fe 00 98 fe fe fe fe fe fe fe 00     ................
    46e3:	6f 1f 00 00 fe fe 00 fe 00 00 00 00 fe fe fe fe     o...............
    46f3:	00 76 76 00 fe fe fe fe 00 76 64 00 fe fe fe fe     .vv......vd.....
    4703:	64 00 00 00 fe fe fe fe 00 6f 00 fe fe fe fe fe     d........o......
    4713:	98 00 fe fe fe fe fe fe 00 fe fe fe fe fe fe fe     ................
    4723:	fe fe 00 00 00 00 00 00 fe 00 1c 2e 2e 1c 00 1c     ................
    4733:	00 1c 2e 2e 1c 2e 2e 2e 00 1c 1c 1c 00 1c 1c 00     ................
	...
    474b:	00 1f 00 ff 1f 1f 00 00 00 1f 00 ff 1f 00 1f 1f     ................
    475b:	00 1f 1f 1f 1f 00 1f 0e 00 fe fe fe fe fe fe fe     ................
    476b:	1c 00 fe fe fe fe fe fe 00 1c 00 fe fe fe fe fe     ................
    477b:	00 1c 00 fe fe fe fe fe 00 00 1c 00 fe fe fe fe     ................
    478b:	0e 00 2e 00 fe fe fe fe 00 00 2e 00 fe fe fe fe     ................
    479b:	00 00 1c 00 fe fe fe fe fe 00 1f 1f 1f 1f 00 0e     ................
	...
    47b3:	00 6f 6f 6f 6f 6f 6f 00 fe 00 00 00 00 00 00 76     .oooooo........v
    47c3:	fe fe fe fe fe 00 64 64 fe fe fe fe fe fe 00 00     ......dd........
    47d3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    47e3:	00 00 00 00 00 fe fe fe 00 00 64 00 fe fe fe fe     ..........d.....
    47f3:	76 64 64 00 fe fe fe fe 64 00 00 fe fe fe fe fe     vdd.....d.......
    4803:	00 98 00 fe fe fe fe fe 98 98 00 fe fe fe fe fe     ................
    4813:	00 00 fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    4823:	fe fe fe fe fe fe fe fe fe fe 00 00 00 00 00 00     ................
    4833:	fe 00 1c 2e 2e 1c 00 1c 00 2e 2e 2e 1c 2e 2e 2e     ................
    4843:	00 1c 1c 1c 00 1c 1c 00 00 00 00 00 00 00 00 00     ................
    4853:	00 1f 00 ff 1f 1f 00 00 00 1f 00 ff 1f 00 1f 1f     ................
    4863:	fe fe fe fe fe fe fe fe 00 fe fe fe fe fe fe fe     ................
    4873:	1c 00 fe fe fe fe fe fe 00 1c 00 fe fe fe fe fe     ................
    4883:	00 1c 00 fe fe fe fe fe 00 00 1c 00 fe fe fe fe     ................
    4893:	0e 00 1c 00 fe fe fe fe 0e 00 2e 00 fe fe fe fe     ................
    48a3:	fe 00 1f 1f 1f 1f 00 1f fe 00 1f 1f 1f 1f 00 0e     ................
	...
    48bb:	00 00 6f 6f 6f 6f 6f 00 fe 00 00 00 00 00 00 76     ..ooooo........v
    48cb:	fe fe fe fe fe 00 00 98 fe fe fe fe fe fe 98 98     ................
    48db:	fe fe fe fe fe fe 00 00 0e 00 00 1c 00 fe fe fe     ................
    48eb:	00 00 00 00 00 fe fe fe 00 00 64 00 fe fe fe fe     ..........d.....
    48fb:	76 76 64 00 fe fe fe fe 64 00 00 fe fe fe fe fe     vvd.....d.......
    490b:	00 fe fe fe fe fe fe fe 00 fe fe fe fe fe fe fe     ................
    491b:	fe fe fe fe fe fe fe fe 08 08 08 08 08 08 08 08     ................
    492b:	08 f6 f6 f6 f6 f6 f6 f6 08 f6 ad ad ad ad 5a 5a     ..............ZZ
    493b:	08 f6 ad ad 5a 5a ad 5a 08 f6 ad 5a ad ad 5a 5a     ....ZZ.Z...Z..ZZ
    494b:	08 f6 ad 5a ad 5a ad ad 08 f6 5a ad 5a ad 5a 08     ...Z.Z....Z.Z.Z.
    495b:	08 f6 5a 5a 5a ad 08 ad 08 08 08 08 08 08 08 08     ..ZZZ...........
    496b:	f6 f6 f6 f6 f6 ad 5a 08 5a ad ad ad ad ad 5a 08     ......Z.Z.....Z.
    497b:	ad 5a 5a ad ad ad 5a 08 5a ad ad 5a ad ad 5a 08     .ZZ...Z.Z..Z..Z.
    498b:	ad 5a ad 5a ad ad 5a 08 5a ad 5a ad 5a ad 5a 08     .Z.Z..Z.Z.Z.Z.Z.
    499b:	08 ad 5a 5a 5a ad 5a 08 08 f6 5a ad 5a ad 5a 08     ..ZZZ.Z...Z.Z.Z.
    49ab:	08 f6 ad 5a ad 5a ad ad 08 f6 ad 5a ad ad 5a 5a     ...Z.Z.....Z..ZZ
    49bb:	08 f6 ad ad 5a 5a ad 5a 08 f6 ad ad ad ad 5a 5a     ....ZZ.Z......ZZ
    49cb:	08 f6 ad ad ad ad ad ad 08 ad 5a 5a 5a 5a 5a 5a     ..........ZZZZZZ
    49db:	08 08 08 08 08 08 08 08 5a ad 5a ad 5a ad 5a 08     ........Z.Z.Z.Z.
    49eb:	ad 5a ad 5a ad ad 5a 08 5a ad ad 5a ad ad 5a 08     .Z.Z..Z.Z..Z..Z.
    49fb:	ad 5a 5a ad ad ad 5a 08 5a ad ad ad ad ad 5a 08     .ZZ...Z.Z.....Z.
    4a0b:	ad ad ad ad ad 5a 5a 08 5a 5a 5a 5a 5a 5a 08 08     .....ZZ.ZZZZZZ..
    4a1b:	08 08 08 08 08 08 08 08 fe fe fe fe fe fe 00 00     ................
    4a2b:	fe fe fe fe 00 00 80 80 fe fe fe 00 80 80 80 ff     ................
    4a3b:	fe fe 00 80 80 80 80 80 fe 00 00 80 80 80 80 80     ................
    4a4b:	00 1e 00 00 80 80 80 80 00 6f 00 ff 00 80 80 80     .........o......
    4a5b:	fe 00 00 00 ff 00 00 00 00 fe fe fe fe fe fe fe     ................
    4a6b:	80 00 00 fe fe fe fe fe 80 80 80 00 fe fe fe fe     ................
    4a7b:	80 80 80 80 00 fe fe fe 80 80 80 80 00 00 fe fe     ................
    4a8b:	80 80 80 00 00 1e 00 fe 80 80 00 ff 00 6f 00 fe     .............o..
    4a9b:	00 00 ff 00 00 00 fe fe fe 00 ff 00 00 ff ff ff     ................
    4aab:	fe 00 ff 22 00 00 00 00 fe fe 00 22 22 00 00 00     ...".......""...
    4abb:	fe fe 00 22 22 22 22 22 fe fe fe 00 22 22 22 22     ..."""""....""""
    4acb:	fe fe 00 07 00 00 00 00 fe fe 00 07 07 07 00 fe     ................
    4adb:	fe fe fe 00 00 00 fe fe ff ff 00 00 ff ff 00 fe     ................
    4aeb:	00 00 00 22 ff 00 00 fe 00 00 22 22 00 6f 00 fe     ..."......"".o..
    4afb:	22 22 22 22 00 6f 00 fe 22 22 22 00 fe 00 fe fe     """".o..""".....
    4b0b:	00 00 00 fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    4b1b:	fe fe fe fe fe fe fe fe fe fe fe fe fe 00 00 00     ................
    4b2b:	fe fe fe 00 00 80 80 ff fe fe 00 80 80 80 80 80     ................
    4b3b:	00 00 00 80 80 80 80 80 00 07 00 00 80 80 80 80     ................
    4b4b:	00 07 00 ff 00 80 80 80 fe 00 00 00 ff 00 00 00     ................
    4b5b:	fe 00 ff 00 00 ff ff ff 00 00 fe fe fe fe fe fe     ................
    4b6b:	80 80 00 00 fe fe fe fe 80 80 80 80 00 fe fe fe     ................
    4b7b:	80 80 80 80 00 00 00 fe 80 80 80 00 00 07 00 fe     ................
    4b8b:	80 80 00 ff 00 07 00 fe 00 00 ff 00 00 00 fe fe     ................
    4b9b:	ff ff 00 00 ff 00 fe fe fe fe fe 00 22 00 00 00     ............"...
    4bab:	fe fe fe 00 22 22 00 00 fe fe fe 00 22 22 22 22     ....""......""""
    4bbb:	fe fe fe 00 22 22 22 22 fe fe fe fe 00 22 22 22     ....""""....."""
    4bcb:	fe fe fe 00 07 00 00 00 fe fe fe 00 07 07 07 00     ................
    4bdb:	fe fe fe fe 00 00 00 fe 00 00 00 00 22 00 fe fe     ............"...
    4beb:	00 00 00 22 22 00 fe fe 22 22 22 22 22 00 fe fe     ...""..."""""...
    4bfb:	22 22 22 22 22 00 fe fe 22 22 22 22 00 fe fe fe     """""...""""....
    4c0b:	00 00 00 00 fe fe fe fe fe fe fe fe fe fe fe fe     ................
    4c1b:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe 00 00     ................
    4c2b:	fe fe fe fe 00 00 80 ff fe fe fe 00 80 80 80 80     ................
    4c3b:	fe fe 00 00 80 80 80 80 fe 00 00 ff 00 00 00 00     ................
    4c4b:	00 1e 00 00 ff ff ff ff 00 6f 00 1e 00 00 00 00     .........o......
    4c5b:	fe 00 00 1e 6f ff 00 6f 00 fe fe fe fe fe fe fe     ....o..o........
    4c6b:	80 00 00 fe fe fe fe fe 80 80 80 00 fe fe fe fe     ................
    4c7b:	80 80 80 00 00 fe fe fe 00 00 00 ff 00 00 fe fe     ................
    4c8b:	ff ff ff 00 00 1e 00 fe 00 00 00 1e 00 6f 00 fe     .............o..
    4c9b:	00 ff 6f 1e 00 00 ff fe fe 00 ff 00 6f ff 00 6f     ..o.........o..o
    4cab:	fe 00 ff 22 00 6f 6f 6f fe fe 00 22 22 00 00 00     ...".ooo...""...
    4cbb:	fe fe 00 22 22 22 22 ff fe fe fe 00 22 22 22 ff     ..."""".....""".
    4ccb:	fe fe 00 07 00 00 00 00 fe fe 00 07 07 07 00 fe     ................
    4cdb:	fe fe fe 00 00 00 fe fe 00 ff 6f 00 ff ff 00 fe     ..........o.....
    4ceb:	6f 6f 00 22 ff 00 00 fe 00 00 22 22 00 6f 00 fe     oo."......"".o..
    4cfb:	22 22 22 22 00 6f 00 fe 22 22 22 00 fe 00 fe fe     """".o..""".....
    4d0b:	00 00 00 fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    4d1b:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    4d2b:	fe fe fe fe fe fe 00 00 fe fe fe fe 00 00 80 ff     ................
    4d3b:	fe fe fe 00 80 80 80 80 fe fe 00 00 80 80 80 80     ................
    4d4b:	fe 00 00 ff 00 00 00 00 00 07 00 00 ff ff ff ff     ................
    4d5b:	00 07 00 07 00 00 00 00 fe fe fe fe fe fe fe fe     ................
    4d6b:	00 fe fe fe fe fe fe fe 80 00 00 fe fe fe fe fe     ................
    4d7b:	80 80 80 00 fe fe fe fe 80 80 80 00 00 fe fe fe     ................
    4d8b:	00 00 00 ff 00 00 fe fe ff ff ff 00 00 07 00 fe     ................
    4d9b:	00 00 00 07 00 07 00 fe fe 00 00 07 07 ff 00 07     ................
    4dab:	fe 00 07 07 07 ff 00 07 fe 00 07 1e 07 07 07 07     ................
    4dbb:	fe 00 00 07 07 07 07 07 fe 00 ff 00 00 07 07 07     ................
    4dcb:	fe 00 00 00 00 00 00 00 fe 00 6f 6f 00 fe fe fe     ..........oo....
    4ddb:	fe fe 00 00 fe fe fe fe 00 ff 07 07 00 00 fe fe     ................
    4deb:	00 ff 07 07 07 00 fe fe 07 07 07 1e 07 00 fe fe     ................
    4dfb:	07 07 07 07 00 00 fe fe 07 07 00 00 ff 00 fe fe     ................
    4e0b:	00 00 00 00 00 00 fe fe fe fe 00 6f 6f 00 fe fe     ...........oo...
    4e1b:	fe fe fe 00 00 fe fe fe fe fe fe fe fe 00 00 00     ................
    4e2b:	fe fe fe fe 00 80 80 ff fe fe fe 00 80 80 80 80     ................
    4e3b:	fe fe fe 00 ff 80 80 80 fe fe fe 00 00 ff ff ff     ................
    4e4b:	fe fe fe 00 6f 00 00 00 fe fe fe 00 6f 00 ff 00     ....o.......o...
    4e5b:	fe fe fe fe 00 6f 6f 00 00 00 00 fe fe fe fe fe     .....oo.........
    4e6b:	80 80 80 00 fe fe fe fe 80 80 80 80 00 fe fe fe     ................
    4e7b:	80 80 80 ff 00 fe fe fe ff ff ff 00 00 fe fe fe     ................
    4e8b:	00 00 00 6f 00 fe fe fe 1e 6f 00 6f 00 fe fe fe     ...o.....o.o....
    4e9b:	6f 6f 00 00 fe fe fe fe fe fe 00 00 ff 00 00 00     oo..............
    4eab:	fe fe 00 00 ff 22 00 ff fe fe fe 00 22 22 00 00     ....."......""..
    4ebb:	fe fe fe 00 22 22 00 6f fe fe fe 00 00 00 00 00     ...."".o........
    4ecb:	fe fe fe 00 07 07 07 00 fe fe fe fe 00 00 00 fe     ................
    4edb:	fe fe fe fe fe fe fe fe 00 00 00 00 fe fe fe fe     ................
    4eeb:	ff 00 22 00 fe fe fe fe 00 00 22 00 fe fe fe fe     ..".......".....
    4efb:	6f 00 22 00 fe fe fe fe 00 00 00 fe fe fe fe fe     o.".............
    4f0b:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    4f1b:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    4f2b:	fe fe fe fe fe 00 00 00 fe fe fe fe 00 80 80 ff     ................
    4f3b:	fe fe fe 00 80 80 80 80 fe fe fe 00 ff 80 80 80     ................
    4f4b:	fe fe fe 00 00 ff ff ff fe fe fe 00 6f 00 00 00     ............o...
    4f5b:	fe fe fe 00 6f 00 ff 00 fe fe fe fe fe fe fe fe     ....o...........
    4f6b:	00 00 00 fe fe fe fe fe 80 80 80 00 fe fe fe fe     ................
    4f7b:	80 80 80 80 00 fe fe fe 80 80 80 ff 00 fe fe fe     ................
    4f8b:	ff ff ff 00 00 fe fe fe 00 00 00 6f 00 fe fe fe     ...........o....
    4f9b:	1e 6f 00 6f 00 fe fe fe fe fe fe fe 00 6f 6f 00     .o.o.........oo.
    4fab:	fe fe fe 00 ff 00 00 00 fe fe fe 00 ff 00 ff ff     ................
    4fbb:	fe fe fe 00 22 00 00 ff fe fe 00 07 00 6f 6f 00     ...."........oo.
    4fcb:	fe fe fe 00 00 00 00 00 fe fe fe fe fe fe 00 07     ................
    4fdb:	fe fe fe fe fe fe fe 00 6f 6f 00 00 fe fe fe fe     ........oo......
    4feb:	00 00 00 00 fe fe fe fe 00 22 22 00 fe fe fe fe     ........."".....
    4ffb:	00 22 22 00 fe fe fe fe 22 00 00 00 fe fe fe fe     ."".....".......
    500b:	00 07 00 fe fe fe fe fe 07 00 fe fe fe fe fe fe     ................
    501b:	00 fe fe fe fe fe fe fe fe fe fe fe 00 00 00 00     ................
    502b:	fe fe fe 00 80 80 ff 80 fe fe 00 80 80 80 80 80     ................
    503b:	fe fe 00 ff 80 80 80 80 fe 00 07 00 ff ff ff ff     ................
    504b:	fe 00 07 00 00 00 00 00 fe 00 07 00 ff 07 00 07     ................
    505b:	fe 00 07 07 07 07 00 07 00 00 fe fe fe fe fe fe     ................
    506b:	80 80 00 fe fe fe fe fe 80 80 80 00 fe fe fe fe     ................
    507b:	80 80 ff 00 fe fe fe fe ff ff 00 00 fe fe fe fe     ................
    508b:	00 00 07 00 fe fe fe fe 07 00 07 00 fe fe fe fe     ................
    509b:	07 00 00 fe fe fe fe fe fe fe 00 07 07 07 00 07     ................
	...
    50b3:	00 6f 00 ff ff ff ff 00 fe 00 00 00 00 00 00 22     .o............."
    50c3:	fe fe fe fe fe 00 22 22 fe fe fe fe fe fe 00 00     ......""........
    50d3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    50e3:	00 07 00 fe fe fe fe fe 00 22 22 00 fe fe fe fe     ........."".....
    50f3:	22 22 22 00 fe fe fe fe 22 22 00 00 fe fe fe fe     """.....""......
    5103:	22 00 07 00 fe fe fe fe 00 07 07 00 fe fe fe fe     "...............
    5113:	fe 00 00 fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    5123:	fe fe fe fe fe fe fe fe fe fe fe fe 00 00 00 00     ................
    5133:	fe fe fe 00 80 80 ff 80 fe fe 00 80 80 80 80 80     ................
    5143:	fe fe 00 ff 80 80 80 80 fe 00 07 00 ff ff ff ff     ................
    5153:	fe 00 07 00 00 00 00 00 fe 00 07 00 ff 07 00 07     ................
    5163:	fe fe fe fe fe fe fe fe 00 00 fe fe fe fe fe fe     ................
    5173:	80 80 00 fe fe fe fe fe 80 80 80 00 fe fe fe fe     ................
    5183:	80 80 ff 00 fe fe fe fe ff ff 00 00 fe fe fe fe     ................
    5193:	00 00 07 00 fe fe fe fe 07 00 07 00 fe fe fe fe     ................
    51a3:	fe 00 07 07 07 07 00 07 fe fe 00 07 07 07 00 07     ................
	...
    51bb:	00 6f 00 ff ff ff ff 00 fe 00 00 00 00 00 00 22     .o............."
    51cb:	fe fe fe fe fe 00 22 22 fe fe fe fe fe fe 00 00     ......""........
    51db:	fe fe fe fe fe fe fe fe 07 00 00 fe fe fe fe fe     ................
    51eb:	00 22 00 fe fe fe fe fe 22 22 22 00 fe fe fe fe     ."......""".....
    51fb:	22 22 22 00 fe fe fe fe 22 00 00 fe fe fe fe fe     """.....".......
    520b:	00 07 00 fe fe fe fe fe 07 07 00 fe fe fe fe fe     ................
    521b:	00 00 fe fe fe fe fe fe 49 49 49 49 49 49 49 49     ........IIIIIIII
    522b:	49 ff ff ff ff ff ff ff 49 ff ad ad ad ad ad ad     I.......I.......
    523b:	49 ff ad ad ad ad ad ad 49 ff ad ad ad ad ad ad     I.......I.......
    524b:	49 ff ad ad ad ad ad ad 49 ff ad ad ad ad ad ad     I.......I.......
    525b:	49 ad 9b 9b 9b 9b 9b 9b 49 49 49 49 49 49 49 49     I.......IIIIIIII
    526b:	ff ff ff ff ff ff ad 49 9b ad ad ad ad ad 9b 49     .......I.......I
    527b:	9b ad ad ad ad ad 9b 49 9b ad ad ad ad ad 9b 49     .......I.......I
    528b:	9b ad ad ad ad ad 9b 49 9b ad ad ad ad ad 9b 49     .......I.......I
    529b:	9b 9b 9b 9b 9b 9b 9b 49 49 ff ad ad ad ad ad ad     .......II.......
    52ab:	49 ff ad ad ad ad ad ad 49 ff ad ad ad ad ad ad     I.......I.......
    52bb:	49 ff ad ad ad ad ad ad 49 ff ad ad ad ad ad ad     I.......I.......
    52cb:	49 ff ad ad ad ad ad ad 49 ad 9b 9b 9b 9b 9b 9b     I.......I.......
    52db:	49 49 49 49 49 49 49 49 9b ad ad ad ad ad 9b 49     IIIIIIII.......I
    52eb:	9b ad ad ad ad ad 9b 49 9b ad ad ad ad ad 9b 49     .......I.......I
    52fb:	9b ad ad ad ad ad 9b 49 9b ad ad ad ad ad 9b 49     .......I.......I
    530b:	9b ad ad ad ad ad 9b 49 9b 9b 9b 9b 9b 9b 9b 49     .......I.......I
    531b:	49 49 49 49 49 49 49 49 fe fe fe fe fe fe 00 00     IIIIIIII........
    532b:	fe fe fe fe 00 00 e8 e8 fe fe fe 00 d8 e8 f8 f8     ................
    533b:	fe fe 00 d8 e8 f8 f8 f8 fe 00 d8 e8 e8 f8 f8 f8     ................
    534b:	fe 00 d8 e8 e8 e8 f8 f8 fe 00 d8 d8 e8 e8 e8 e8     ................
    535b:	fe 00 00 d8 d8 e8 e8 e8 00 fe fe fe fe fe fe fe     ................
    536b:	e8 00 00 fe fe fe fe fe f8 e8 d8 00 fe fe fe fe     ................
    537b:	f8 f8 e8 d8 00 fe fe fe f8 f8 e8 e8 d8 00 fe fe     ................
    538b:	f8 e8 e8 e8 d8 00 fe fe e8 e8 e8 d8 d8 00 fe fe     ................
    539b:	e8 e8 d8 d8 00 00 fe fe fe 00 ff 00 d8 d8 d8 d8     ................
    53ab:	fe 00 ff d8 00 d8 d8 d8 fe fe 00 d8 d8 00 00 00     ................
    53bb:	fe fe 00 d8 e8 d8 d8 d8 fe fe fe 00 d8 e8 e8 e8     ................
    53cb:	fe fe 00 0f 00 00 00 00 fe fe 00 0f 0f 0f 00 fe     ................
    53db:	fe fe fe 00 00 00 fe fe d8 d8 d8 00 ff 00 fe fe     ................
    53eb:	d8 d8 00 d8 ff 00 00 fe 00 00 d8 d8 00 0f 00 fe     ................
    53fb:	d8 d8 e8 d8 00 0f 00 fe e8 e8 d8 00 fe 00 fe fe     ................
    540b:	00 00 00 fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    541b:	fe fe fe fe fe fe fe fe fe fe fe fe fe 00 00 00     ................
    542b:	fe fe fe 00 00 e8 e8 e8 fe fe 00 00 d8 e8 f8 f8     ................
    543b:	fe fe 00 d8 e8 f8 f8 f8 fe 00 d8 e8 e8 f8 f8 f8     ................
    544b:	fe 00 d8 d8 e8 e8 f8 f8 fe 00 00 d8 d8 e8 e8 e8     ................
    545b:	fe 00 ff 00 d8 d8 d8 d8 00 00 fe fe fe fe fe fe     ................
    546b:	e8 e8 00 00 fe fe fe fe f8 e8 d8 00 00 fe fe fe     ................
    547b:	f8 f8 e8 d8 00 fe fe fe f8 f8 e8 e8 d8 00 fe fe     ................
    548b:	f8 e8 e8 d8 d8 00 fe fe e8 e8 d8 d8 00 00 fe fe     ................
    549b:	d8 d8 d8 00 ff 00 fe fe fe fe 00 d8 00 d8 d8 d8     ................
    54ab:	fe fe 00 d8 d8 00 00 00 fe fe 00 d8 e8 d8 d8 d8     ................
    54bb:	fe fe 00 d8 e8 e8 f8 f8 fe fe fe 00 d8 e8 e8 e8     ................
    54cb:	fe fe 00 0f 00 00 00 00 fe fe 00 0f 0f 0f 00 fe     ................
    54db:	fe fe fe 00 00 00 fe fe d8 d8 00 d8 00 fe fe fe     ................
    54eb:	00 00 d8 d8 00 fe fe fe d8 d8 e8 d8 00 fe fe fe     ................
    54fb:	f8 e8 e8 d8 00 fe fe fe e8 e8 d8 00 fe fe fe fe     ................
    550b:	00 00 00 fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    551b:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe 00 00     ................
    552b:	fe fe fe fe 00 00 e8 e8 fe fe fe 00 d8 e8 f8 f8     ................
    553b:	fe fe 00 d8 e8 f8 f8 f8 fe 00 d8 d8 00 00 00 00     ................
    554b:	fe 00 d8 00 ff ff ff ff fe 00 00 ff ff 00 00 00     ................
    555b:	fe 00 00 ff 00 ff 00 6f 00 fe fe fe fe fe fe fe     .......o........
    556b:	e8 00 00 fe fe fe fe fe f8 e8 d8 00 fe fe fe fe     ................
    557b:	f8 f8 e8 d8 00 fe fe fe 00 00 00 e8 d8 00 fe fe     ................
    558b:	ff ff ff 00 e8 00 fe fe 00 00 ff ff 00 00 fe fe     ................
    559b:	00 ff 00 ff 00 00 fe fe fe 00 00 ff ff 00 00 00     ................
    55ab:	fe 00 ff 00 ff ff ff ff fe fe 00 d8 00 00 00 00     ................
    55bb:	fe fe 00 e8 d8 d8 d8 ff fe fe fe 00 e8 f8 e8 ff     ................
    55cb:	fe fe 00 0f 00 00 00 00 fe fe 00 0f 0f 0f 00 fe     ................
    55db:	fe fe fe 00 00 00 fe fe 00 00 ff ff 00 ff 00 fe     ................
    55eb:	ff ff ff 00 ff 00 00 fe 00 00 00 d8 00 0f 00 fe     ................
    55fb:	d8 d8 d8 e8 00 0f 00 fe e8 f8 e8 00 fe 00 fe fe     ................
    560b:	00 00 00 fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    561b:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe 00 00     ................
    562b:	fe fe fe fe 00 00 e8 e8 fe fe fe 00 d8 e8 f8 f8     ................
    563b:	fe fe 00 d8 e8 f8 f8 f8 fe 00 d8 d8 00 00 00 00     ................
    564b:	fe 00 d8 00 ff ff ff ff fe 00 00 ff ff 00 00 00     ................
    565b:	fe 00 00 ff 00 ff 00 0f 00 fe fe fe fe fe fe fe     ................
    566b:	e8 00 00 fe fe fe fe fe f8 e8 d8 00 fe fe fe fe     ................
    567b:	f8 f8 e8 d8 00 fe fe fe 00 00 00 d8 d8 00 fe fe     ................
    568b:	ff ff ff 00 d8 00 fe fe 00 00 ff ff 00 00 fe fe     ................
    569b:	00 ff 00 ff 00 00 fe fe fe 00 00 ff 00 ff 00 0f     ................
    56ab:	fe fe 00 ff ff 00 00 00 fe 00 d8 00 ff ff ff ff     ................
    56bb:	fe 00 00 d8 00 00 00 00 fe 00 ff 00 00 d8 d8 d8     ................
    56cb:	fe 00 00 00 00 00 00 00 fe 00 0f 0f 00 fe fe fe     ................
    56db:	fe fe 00 00 fe fe fe fe 00 ff 00 ff 00 00 fe fe     ................
    56eb:	00 00 ff ff 00 fe fe fe ff ff ff 00 d8 00 fe fe     ................
    56fb:	00 00 00 d8 00 00 fe fe d8 d8 00 00 ff 00 fe fe     ................
    570b:	00 00 00 00 00 00 fe fe fe fe 00 0f 0f 00 fe fe     ................
    571b:	fe fe fe 00 00 fe fe fe fe fe fe fe fe 00 00 00     ................
    572b:	fe fe fe fe 00 e8 e8 e8 fe fe fe fe 00 00 00 00     ................
    573b:	fe fe fe 00 ff ff ff ff fe fe fe 00 00 00 00 ff     ................
    574b:	fe fe fe 00 6f 00 ff 00 fe fe fe 00 00 00 00 ff     ....o...........
    575b:	fe fe fe fe 00 ff ff 00 00 00 00 fe fe fe fe fe     ................
    576b:	e8 d8 d8 00 fe fe fe fe e8 e8 d8 d8 00 fe fe fe     ................
    577b:	00 e8 e8 d8 00 fe fe fe ff 00 e8 d8 00 fe fe fe     ................
    578b:	ff 00 e8 d8 00 fe fe fe 00 d8 d8 d8 00 fe fe fe     ................
    579b:	d8 d8 d8 00 fe fe fe fe fe fe 00 00 ff 00 00 00     ................
    57ab:	fe fe 00 00 ff e8 00 ff fe fe fe 00 e8 e8 00 ff     ................
    57bb:	fe fe fe 00 e8 e8 00 0f fe fe fe 00 00 00 00 00     ................
    57cb:	fe fe fe 00 0f 0f 0f 00 fe fe fe fe 00 00 00 fe     ................
    57db:	fe fe fe fe fe fe fe fe 00 00 00 00 fe fe fe fe     ................
    57eb:	ff 00 d8 00 fe fe fe fe ff 00 d8 00 fe fe fe fe     ................
    57fb:	0f 00 e8 00 fe fe fe fe 00 00 00 fe fe fe fe fe     ................
    580b:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    581b:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    582b:	fe fe fe fe fe 00 00 00 fe fe fe fe 00 e8 e8 e8     ................
    583b:	fe fe fe fe 00 00 00 00 fe fe fe 00 ff ff ff ff     ................
    584b:	fe fe fe 00 00 00 00 ff fe fe fe 00 6f 00 ff 00     ............o...
    585b:	fe fe fe 00 00 00 00 ff fe fe fe fe fe fe fe fe     ................
    586b:	00 00 00 fe fe fe fe fe e8 d8 d8 00 fe fe fe fe     ................
    587b:	e8 e8 d8 d8 00 fe fe fe 00 e8 e8 d8 00 fe fe fe     ................
    588b:	ff 00 e8 d8 00 fe fe fe ff 00 e8 d8 00 fe fe fe     ................
    589b:	00 d8 e8 d8 00 fe fe fe fe fe fe fe 00 ff ff 00     ................
    58ab:	fe fe fe 00 ff 00 00 00 fe fe fe 00 ff 00 ff ff     ................
    58bb:	fe fe fe 00 e8 00 ff ff fe fe 00 0f 00 0f 0f 00     ................
    58cb:	fe fe fe 00 00 00 00 00 fe fe fe fe fe fe 00 0f     ................
    58db:	fe fe fe fe fe fe fe 00 d8 e8 d8 00 fe fe fe fe     ................
    58eb:	00 00 00 00 fe fe fe fe 00 e8 d8 00 fe fe fe fe     ................
    58fb:	00 e8 d8 00 fe fe fe fe e8 00 00 00 fe fe fe fe     ................
    590b:	00 0f 00 fe fe fe fe fe 0f 00 fe fe fe fe fe fe     ................
    591b:	00 fe fe fe fe fe fe fe fe fe fe fe 00 00 00 00     ................
    592b:	fe fe fe 00 e8 e8 e8 e8 fe fe fe 00 00 00 00 e8     ................
    593b:	fe fe 00 ff ff ff ff 00 fe fe 00 00 00 00 ff ff     ................
    594b:	fe fe 00 0f 00 ff 00 ff fe fe 00 00 00 00 ff 00     ................
    595b:	fe fe 00 ff ff ff 00 d8 00 00 fe fe fe fe fe fe     ................
    596b:	d8 d8 00 fe fe fe fe fe e8 d8 d8 00 fe fe fe fe     ................
    597b:	e8 e8 d8 00 fe fe fe fe 00 e8 d8 00 fe fe fe fe     ................
    598b:	00 e8 d8 00 fe fe fe fe d8 e8 d8 00 fe fe fe fe     ................
    599b:	d8 d8 00 00 fe fe fe fe 00 00 00 00 00 00 00 00     ................
    59ab:	00 0f 0f ff ff ff ff 00 fe 00 00 00 00 00 00 e8     ................
    59bb:	fe fe fe fe fe 00 e8 e8 fe fe fe fe fe fe 00 00     ................
    59cb:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    59db:	fe fe fe fe fe fe fe fe 00 d8 d8 00 fe fe fe fe     ................
    59eb:	e8 e8 d8 00 fe fe fe fe e8 e8 00 00 fe fe fe fe     ................
    59fb:	e8 00 0f 00 fe fe fe fe 00 0f 0f 00 fe fe fe fe     ................
    5a0b:	fe 00 00 fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    5a1b:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    5a2b:	fe fe fe fe 00 00 00 00 fe fe fe 00 e8 e8 e8 e8     ................
    5a3b:	fe fe fe 00 00 00 00 e8 fe fe 00 ff ff ff ff 00     ................
    5a4b:	fe fe 00 00 00 00 ff ff fe fe 00 0f 00 a4 00 ff     ................
    5a5b:	fe fe 00 00 00 00 ff 00 fe fe fe fe fe fe fe fe     ................
    5a6b:	00 00 fe fe fe fe fe fe d8 d8 00 fe fe fe fe fe     ................
    5a7b:	e8 d8 d8 00 fe fe fe fe e8 e8 d8 00 fe fe fe fe     ................
    5a8b:	00 e8 d8 00 fe fe fe fe 00 e8 d8 00 fe fe fe fe     ................
    5a9b:	e8 d8 e8 00 fe fe fe fe fe 00 00 00 00 d8 d8 d8     ................
	...
    5ab3:	00 0f 0f ff ff ff ff 00 fe 00 00 00 00 00 00 e8     ................
    5ac3:	fe fe fe fe fe 00 e8 e8 fe fe fe fe fe fe 00 00     ................
    5ad3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    5ae3:	00 d8 d8 00 fe fe fe fe e8 e8 d8 00 fe fe fe fe     ................
    5af3:	e8 e8 e8 00 fe fe fe fe e8 00 00 fe fe fe fe fe     ................
    5b03:	00 0f 00 fe fe fe fe fe 0f 0f 00 fe fe fe fe fe     ................
    5b13:	00 00 fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    5b23:	0a 0a 0a 0a 0a 0a 0a 0a 0a 66 14 66 66 66 66 66     .........f.fffff
    5b33:	0a 14 0a 0a 0a 0a 0a 0a 0a 66 0a 1d 66 1d 14 1d     .........f..f...
    5b43:	0a 66 0a 0a 1d 66 14 1d 0a 66 0a 1d 0a 1d 66 1d     .f...f...f....f.
    5b53:	0a 66 0a 1d 14 0a 1d 66 0a 66 0a 1d 14 1d 66 1d     .f.....f.f....f.
    5b63:	0a 0a 0a 0a 0a 0a 0a 0a 66 66 66 66 0a 66 14 0a     ........ffff.f..
    5b73:	0a 0a 0a 0a 0a 14 0a 0a 14 1d 66 1d 0a 66 14 0a     ..........f..f..
    5b83:	14 66 1d 0a 0a 66 14 0a 66 1d 0a 1d 0a 66 14 0a     .f...f..f....f..
    5b93:	1d 0a 14 1d 0a 66 14 0a 0a 1d 14 1d 0a 66 14 0a     .....f.......f..
    5ba3:	0a 66 0a 1d 14 66 1d 0a 0a 66 0a 1d 66 1d 0a 1d     .f...f...f..f...
    5bb3:	0a 66 0a 66 1d 0a 14 1d 0a 66 0a 1d 0a 1d 14 1d     .f.f.....f......
    5bc3:	0a 14 0a 0a 0a 0a 0a 0a 0a 66 14 66 66 66 66 66     .........f.fffff
    5bd3:	0a 14 0a 14 14 14 14 14 0a 0a 0a 0a 0a 0a 0a 0a     ................
    5be3:	1d 66 14 1d 0a 66 14 0a 0a 1d 66 1d 0a 66 14 0a     .f...f....f..f..
    5bf3:	14 0a 1d 66 0a 66 14 0a 14 1d 0a 1d 0a 66 14 0a     ...f.f.......f..
    5c03:	0a 0a 0a 0a 0a 14 0a 0a 66 66 66 66 14 66 14 0a     ........ffff.f..
    5c13:	14 14 14 14 0a 14 14 0a 0a 0a 0a 0a 0a 0a 0a 0a     ................
    5c23:	fe fe fe fe fe fe 00 00 fe fe fe fe 00 00 c8 c8     ................
    5c33:	fe fe fe 00 c8 c8 c8 c8 fe fe 00 c8 c8 c8 c8 c8     ................
    5c43:	00 00 00 c8 c8 c8 c8 c8 00 1e 00 00 c8 c8 c8 c8     ................
    5c53:	00 6f 00 00 00 c8 c8 c8 fe 00 00 00 00 00 00 00     .o..............
    5c63:	00 fe fe fe fe fe fe fe c8 00 00 fe fe fe fe fe     ................
    5c73:	c8 c8 c8 00 fe fe fe fe c8 c8 c8 c8 00 fe fe fe     ................
    5c83:	c8 c8 c8 c8 00 00 00 fe c8 c8 c8 00 00 1e 00 fe     ................
    5c93:	c8 c8 00 00 00 6f 00 fe 00 00 00 00 00 00 fe fe     .....o..........
    5ca3:	fe 00 ff 00 00 00 00 00 fe 00 ff 07 00 00 00 00     ................
    5cb3:	fe fe 00 07 07 00 00 00 fe fe 00 07 07 07 07 07     ................
    5cc3:	fe fe 00 00 07 07 07 07 fe fe 00 6f 00 00 00 00     ...........o....
    5cd3:	fe fe 00 6f 6f 6f 00 fe fe fe fe 00 00 00 fe fe     ...ooo..........
    5ce3:	00 00 00 00 ff ff 00 fe 00 00 00 07 ff 00 00 fe     ................
    5cf3:	00 00 07 07 00 6f 00 fe 07 07 07 07 00 6f 00 fe     .....o.......o..
    5d03:	07 07 07 00 00 00 00 fe 00 00 00 fe fe fe fe fe     ................
    5d13:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    5d23:	fe fe fe fe fe 00 00 00 fe fe fe 00 00 c8 c8 c8     ................
    5d33:	fe fe 00 c8 c8 c8 c8 c8 fe 00 00 c8 c8 c8 c8 c8     ................
    5d43:	00 07 00 00 c8 c8 c8 c8 00 17 00 00 00 c8 c8 c8     ................
    5d53:	fe 00 00 00 00 00 00 00 fe 00 ff 00 00 00 00 00     ................
    5d63:	00 00 fe fe fe fe fe fe c8 c8 00 00 fe fe fe fe     ................
    5d73:	c8 c8 c8 c8 00 fe fe fe c8 c8 c8 c8 00 00 fe fe     ................
    5d83:	c8 c8 c8 00 00 07 00 fe c8 c8 00 00 00 17 00 fe     ................
    5d93:	00 00 00 00 00 00 fe fe 00 00 00 00 ff 00 fe fe     ................
    5da3:	fe 00 00 07 00 00 00 00 fe fe 00 07 07 00 00 00     ................
    5db3:	fe fe 00 07 07 07 07 07 fe fe 00 07 07 07 07 07     ................
    5dc3:	fe fe 00 00 07 07 07 07 fe fe 00 6f 00 00 00 00     ...........o....
    5dd3:	fe fe 00 6f 6f 6f 00 fe fe fe fe 00 00 00 fe fe     ...ooo..........
    5de3:	00 00 00 07 00 00 fe fe 00 00 07 07 00 fe fe fe     ................
    5df3:	07 07 07 07 00 fe fe fe 07 07 07 07 00 fe fe fe     ................
    5e03:	07 07 07 00 00 fe fe fe 00 00 00 fe fe fe fe fe     ................
    5e13:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    5e23:	fe fe fe fe fe fe 00 00 fe fe fe fe 00 00 c8 c8     ................
    5e33:	fe fe fe 00 c8 c8 c8 c8 fe fe 00 c8 c8 c8 c8 c8     ................
    5e43:	00 00 00 c8 00 00 00 00 00 1e 00 00 00 07 07 07     ................
    5e53:	00 6f 00 1e 1e 00 00 00 fe 00 00 1e 6f ff 00 6f     .o..........o..o
    5e63:	00 fe fe fe fe fe fe fe c8 00 00 fe fe fe fe fe     ................
    5e73:	c8 c8 c8 00 fe fe fe fe c8 c8 c8 c8 00 fe fe fe     ................
    5e83:	00 00 00 c8 00 00 00 fe 07 07 00 00 00 1e 00 fe     ................
    5e93:	00 00 1e 1e 00 6f 00 fe 00 ff 6f 6f 00 00 fe fe     .....o....oo....
    5ea3:	fe 00 ff 00 6f ff 00 6f fe 00 ff 07 00 6f 6f 6f     ....o..o.....ooo
    5eb3:	fe fe 00 07 07 00 00 00 fe fe 00 07 07 ff ff ff     ................
    5ec3:	fe fe 00 00 07 07 07 07 fe fe 00 6f 00 00 00 00     ...........o....
    5ed3:	fe fe 00 6f 6f 6f 00 fe fe fe fe 00 00 00 fe fe     ...ooo..........
    5ee3:	00 ff 6f 00 ff ff 00 fe 6f 6f 00 07 ff 00 00 fe     ..o.....oo......
    5ef3:	00 00 07 07 00 6f 00 fe ff ff 07 07 00 6f 00 fe     .....o.......o..
    5f03:	07 07 07 00 00 00 00 fe 00 00 00 fe fe fe fe fe     ................
    5f13:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    5f23:	fe fe fe fe fe fe 00 00 fe fe fe fe 00 00 c8 c8     ................
    5f33:	fe fe fe 00 c8 c8 c8 c8 fe fe 00 c8 c8 c8 c8 c8     ................
    5f43:	fe 00 00 c8 00 00 00 00 00 07 00 00 00 07 07 07     ................
    5f53:	00 17 00 07 07 00 00 00 fe 00 00 07 07 ff 00 07     ................
    5f63:	00 fe fe fe fe fe fe fe c8 00 00 fe fe fe fe fe     ................
    5f73:	c8 c8 c8 00 fe fe fe fe c8 c8 c8 c8 00 fe fe fe     ................
    5f83:	00 00 00 c8 00 00 fe fe 07 07 00 00 00 07 00 fe     ................
    5f93:	00 00 07 07 00 17 00 fe 00 ff 07 07 00 00 fe fe     ................
    5fa3:	fe 00 00 07 07 ff 00 07 fe 00 17 17 17 ff 00 07     ................
    5fb3:	fe 00 17 17 17 17 17 17 fe 00 00 17 17 17 17 17     ................
    5fc3:	fe 00 ff 00 00 17 17 17 fe 00 00 00 00 00 00 00     ................
    5fd3:	fe 00 6f 6f 00 fe fe fe fe fe 00 00 00 fe fe fe     ..oo............
    5fe3:	00 ff 07 07 00 00 fe fe 00 ff 17 17 17 00 fe fe     ................
    5ff3:	17 17 17 17 17 00 fe fe 17 17 17 17 00 00 fe fe     ................
    6003:	17 17 00 00 ff 00 fe fe 00 00 00 00 00 00 fe fe     ................
    6013:	fe fe 00 6f 6f 00 fe fe fe fe fe 00 00 fe fe fe     ...oo...........
    6023:	fe fe fe fe fe 00 00 00 fe fe fe fe 00 c8 c8 c8     ................
    6033:	fe fe 00 00 c8 c8 c8 c8 fe 00 07 00 c8 c8 c8 c8     ................
    6043:	fe 00 07 07 00 c8 c8 c8 fe fe 00 00 00 00 00 00     ................
    6053:	fe fe fe 00 6f 00 ff 00 fe fe fe 00 00 6f 6f 00     ....o........oo.
    6063:	00 00 00 fe fe fe fe fe c8 c8 c8 00 fe fe fe fe     ................
    6073:	c8 c8 c8 c8 00 fe fe fe c8 c8 c8 c8 00 fe fe fe     ................
    6083:	c8 c8 c8 00 00 fe fe fe 00 00 00 00 00 fe fe fe     ................
    6093:	1e 6f 00 00 00 fe fe fe 6f 6f 00 00 00 fe fe fe     .o......oo......
    60a3:	fe fe 00 00 ff 00 00 00 fe fe 00 00 ff 07 00 ff     ................
    60b3:	fe fe fe 00 07 07 00 00 fe fe fe 00 07 07 00 6f     ...............o
    60c3:	fe fe fe 00 00 00 00 00 fe fe fe 00 6f 6f 6f 00     ............ooo.
    60d3:	fe fe fe fe 00 00 00 fe fe fe fe fe fe fe fe fe     ................
    60e3:	00 00 00 00 fe fe fe fe ff 00 07 00 fe fe fe fe     ................
    60f3:	00 00 07 00 fe fe fe fe 6f 00 07 00 fe fe fe fe     ........o.......
    6103:	00 00 00 fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    6113:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    6123:	fe fe fe fe fe fe fe fe fe fe fe fe fe 00 00 00     ................
    6133:	fe fe fe 00 00 c8 c8 c8 fe fe 00 c8 c8 c8 c8 c8     ................
    6143:	fe 00 07 00 c8 c8 c8 c8 fe 00 07 07 00 c8 c8 c8     ................
    6153:	fe fe 00 00 00 00 00 00 fe fe fe 00 6f 00 ff 00     ............o...
    6163:	fe fe fe fe fe fe fe fe 00 00 00 fe fe fe fe fe     ................
    6173:	c8 c8 c8 00 fe fe fe fe c8 c8 c8 c8 00 fe fe fe     ................
    6183:	c8 c8 c8 c8 00 fe fe fe c8 c8 c8 00 00 fe fe fe     ................
    6193:	00 00 00 00 00 fe fe fe 1e 6f 00 00 00 fe fe fe     .........o......
    61a3:	fe fe fe 00 00 6f 6f 00 fe fe fe 00 ff 00 00 00     .....oo.........
    61b3:	fe fe fe 00 ff 00 ff ff fe fe fe 00 07 00 00 ff     ................
    61c3:	fe fe 00 6f 00 6f 6f 00 fe fe fe 00 00 00 00 00     ...o.oo.........
    61d3:	fe fe fe fe fe fe 00 6f fe fe fe fe fe fe fe 00     .......o........
    61e3:	6f 6f 00 00 fe fe fe fe 00 00 00 00 fe fe fe fe     oo..............
    61f3:	00 07 07 00 fe fe fe fe 00 07 07 00 fe fe fe fe     ................
    6203:	07 00 00 00 fe fe fe fe 00 6f 00 fe fe fe fe fe     .........o......
    6213:	6f 00 fe fe fe fe fe fe 00 fe fe fe fe fe fe fe     o...............
    6223:	fe fe fe fe 00 00 00 00 fe fe fe 00 c8 c8 c8 c8     ................
    6233:	fe 00 00 c8 c8 c8 c8 c8 00 07 00 c8 c8 c8 c8 c8     ................
    6243:	00 07 07 00 c8 c8 c8 c8 fe 00 00 00 00 00 00 00     ................
    6253:	fe 00 17 00 ff 07 00 07 fe 00 17 17 17 17 00 17     ................
    6263:	00 00 fe fe fe fe fe fe c8 c8 00 fe fe fe fe fe     ................
    6273:	c8 c8 c8 00 fe fe fe fe c8 c8 c8 00 fe fe fe fe     ................
    6283:	c8 c8 00 00 fe fe fe fe 00 00 00 00 fe fe fe fe     ................
    6293:	07 00 00 00 fe fe fe fe 17 00 00 fe fe fe fe fe     ................
    62a3:	00 00 17 17 17 17 00 17 00 00 00 00 00 00 00 00     ................
    62b3:	00 6f 00 ff ff ff ff 00 fe 00 00 00 00 00 00 07     .o..............
    62c3:	fe fe fe fe fe 00 07 07 fe fe fe fe fe fe 00 00     ................
    62d3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    62e3:	00 00 00 00 fe fe fe fe 00 00 07 00 fe fe fe fe     ................
    62f3:	07 07 07 00 fe fe fe fe 07 00 00 fe fe fe fe fe     ................
    6303:	00 6f 00 fe fe fe fe fe 6f 6f 00 fe fe fe fe fe     .o......oo......
    6313:	00 00 00 fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    6323:	fe fe fe fe fe fe fe fe fe fe fe fe 00 00 00 00     ................
    6333:	fe fe fe 00 c8 c8 c8 c8 fe 00 00 c8 c8 c8 c8 c8     ................
    6343:	00 07 00 c8 c8 c8 c8 c8 00 07 07 00 c8 c8 c8 c8     ................
    6353:	fe 00 00 00 00 00 00 00 fe 00 17 00 ff 07 00 07     ................
    6363:	fe fe fe fe fe fe fe fe 00 00 fe fe fe fe fe fe     ................
    6373:	c8 c8 00 fe fe fe fe fe c8 c8 c8 00 fe fe fe fe     ................
    6383:	c8 c8 c8 00 fe fe fe fe c8 c8 00 00 fe fe fe fe     ................
    6393:	00 00 00 00 fe fe fe fe 07 00 00 00 fe fe fe fe     ................
    63a3:	fe 00 17 17 17 17 00 17 fe 00 00 00 00 00 00 00     ................
    63b3:	00 6f 00 ff ff ff ff 00 fe 00 00 00 00 00 00 07     .o..............
    63c3:	fe fe fe fe fe 00 07 07 fe fe fe fe fe fe 00 00     ................
    63d3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    63e3:	17 00 00 00 fe fe fe fe 00 00 07 00 fe fe fe fe     ................
    63f3:	07 07 07 00 fe fe fe fe 07 07 00 00 fe fe fe fe     ................
    6403:	07 00 6f 00 fe fe fe fe 00 6f 6f 00 fe fe fe fe     ..o......oo.....
    6413:	fe 00 00 fe fe fe fe fe fe fe fe fe fe fe fe fe     ................

00006423 <FrameTable>:
    6423:	00 01 02 03 00 04 05 06 07 00 05 04 07 06 01 08     ................
    6433:	09 0a 0b 00 09 08 0b 0a 01 0c 0d 0e 0f 00 0d 0c     ................
    6443:	0f 0e 01 10 11 12 13 00 11 10 13 12 01 14 15 16     ................
    6453:	17 00 18 19 1a 1b 00 1c 1d 1e 1f 00 20 21 22 23     ............ !"#
    6463:	00 15 14 17 16 01 19 18 1b 1a 01 1d 1c 1f 1e 01     ................
    6473:	21 20 23 22 01                                      ! #".

00006478 <MirrorTable>:
    6478:	00 00 00 00 01 01 01 01                             ........

00006480 <patch00>:
    6480:	00 02 01 00 07 14 00 00 16 03 00 10 01 00 00 00     ................
    6490:	00 e7 03 ff                                         ....

00006494 <patch01>:
    6494:	00 02 00 00 07 14 00 00 02 07 00 01 01 00 00 00     ................
    64a4:	00 f6 09 ff                                         ....

000064a8 <patch02>:
    64a8:	00 02 04 00 07 14 00 00 0b 04 00 07 01 00 00 03     ................
    64b8:	00 fc 02 00 f9 06 ff                                .......

000064bf <patch03>:
    64bf:	00 01 08 00 07 2c 00 00 e2 01 00 f1 01 00 f8 02     .....,..........
    64cf:	05 00 00 ff                                         ....

000064d3 <patch04>:
    64d3:	00 01 05 00 07 21 00 00 e2 01 00 f1 01 00 f8 01     .....!..........
    64e3:	05 00 00 ff                                         ....

000064e7 <patch05>:
    64e7:	00 02 01 00 07 10 00 00 08 01 00 20 03 00 10 01     ........... ....
    64f7:	00 00 00 06 00 00 00 e7 03 ff                       ..........

00006501 <patch06>:
    6501:	00 02 04 00 07 16 00 00 10 01 00 12 01 00 14 01     ................
    6511:	00 00 05 00 ff 02 00 fe 02 00 fd 02 00 fc 06 ff     ................
	...

00006522 <patch07>:
    6522:	06 ff                                               ..

00006524 <patch08>:
    6524:	00 01 02 00 07 12 00 00 f8 01 00 fb 01 05 00 00     ................
    6534:	ff                                                  .

00006535 <patch09>:
    6535:	00 01 06 00 07 14 00 00 f8 01 00 fb 01 05 00 00     ................
    6545:	ff                                                  .

00006546 <patch10>:
    6546:	00 ff                                               ..

00006548 <patch11>:
    6548:	00 ff                                               ..

0000654a <patch12>:
    654a:	00 ff                                               ..

0000654c <patch13>:
    654c:	00 ff                                               ..

0000654e <patch14>:
    654e:	00 ff                                               ..

00006550 <patch15>:
    6550:	00 02 01 00 09 c8 00 0a 37 00 07 14 00 00 12 01     ........7.......
    6560:	00 1a 02 00 10 01 00 00 00 06 00 00 00 e7 03 ff     ................

00006570 <patch16>:
    6570:	00 02 04 00 07 14 00 00 0a 02 00 07 01 00 04 01     ................
    6580:	00 00 01 00 ff 01 00 fe 01 00 fc 02 00 f9 04 ff     ................

00006590 <patch17>:
    6590:	00 02 01 00 07 14 00 00 16 03 00 10 01 00 00 00     ................
    65a0:	00 e7 03 ff                                         ....

000065a4 <patch18>:
    65a4:	00 01 0a 00 07 12 00 00 f8 01 00 fb 01 05 00 00     ................
    65b4:	ff                                                  .

000065b5 <patch19>:
    65b5:	00 01 06 00 07 12 00 00 f8 01 00 fb 01 05 00 00     ................
    65c5:	ff                                                  .

000065c6 <patch20>:
    65c6:	00 01 02 00 07 12 00 00 f8 01 00 fb 01 05 00 00     ................
    65d6:	ff                                                  .

000065d7 <patch21>:
    65d7:	00 ff                                               ..

000065d9 <patch22>:
    65d9:	00 ff                                               ..

000065db <patch23>:
    65db:	00 09 b4 00 0a 3c 00 02 01 00 07 14 00 00 0b 03     .....<..........
    65eb:	00 11 01 00 16 01 00 00 05 00 ea 03 ff              .............

000065f8 <patch24>:
    65f8:	00 02 04 00 07 0c 00 00 10 04 00 00 03 00 f5 09     ................
    6608:	ff                                                  .

00006609 <patch25>:
    6609:	00 02 04 00 07 02 01 00 04 01 00 06 01 00 08 01     ................
    6619:	00 0a 01 00 0c 04 00 00 00 06 00 00 00 f4 01 00     ................
    6629:	f6 01 00 f8 01 00 fa 01 ff                          .........

00006632 <patch26>:
    6632:	00 01 01 00 07 21 00 00 f1 01 00 f8 02 05 00 00     .....!..........
    6642:	ff                                                  .

00006643 <patch27>:
    6643:	00 01 05 00 07 21 00 00 f1 01 00 f8 02 05 00 00     .....!..........
    6653:	ff                                                  .

00006654 <patch28>:
    6654:	00 01 09 00 07 21 00 00 f1 01 00 f8 02 05 00 00     .....!..........
    6664:	ff                                                  .

00006665 <patch29>:
    6665:	00 ff                                               ..

00006667 <patch30>:
    6667:	00 02 01 00 07 14 00 00 21 04 00 00 00 06 00 00     ........!.......
    6677:	09 8c 00 0a 27 00 00 e7 03 ff                       ....'.....

00006681 <patch31>:
    6681:	00 02 01 00 07 1b 01 00 16 03 00 00 00 06 00 00     ................
    6691:	00 e7 03 ff                                         ....

00006695 <patch32>:
    6695:	00 02 01 00 07 14 00 00 16 04 00 00 00 06 00 00     ................
    66a5:	00 e7 03 ff                                         ....

000066a9 <patch33>:
    66a9:	00 01 01 00 07 21 00 00 f1 01 00 f8 02 05 00 00     .....!..........
    66b9:	ff                                                  .

000066ba <patch34>:
    66ba:	00 01 05 00 07 21 00 00 f1 01 00 f8 02 05 00 00     .....!..........
    66ca:	ff                                                  .

000066cb <patch35>:
    66cb:	00 ff                                               ..

000066cd <patch36>:
    66cd:	00 ff                                               ..

000066cf <patch37>:
    66cf:	00 ff                                               ..

000066d1 <patch38>:
    66d1:	00 ff                                               ..

000066d3 <patch39>:
    66d3:	00 ff                                               ..

000066d5 <patch40>:
    66d5:	00 02 02 00 00 0a 00 08 2d 02 00 fb 03 00 f3 00     ........-.......
    66e5:	08 28 03 08 2d 03 00 ea 03 08 28 00 00 e6 02 ff     .(..-.....(.....
	...

000066f6 <patch41>:
    66f6:	01 ff 00                                            ...

000066f9 <patches>:
    66f9:	00 00 00 80 64 00 00 00 00 00 00 00 94 64 00 00     ....d........d..
    6709:	00 00 00 00 00 a8 64 00 00 00 00 01 00 00 bf 64     ......d........d
    6719:	00 00 00 00 01 00 00 d3 64 00 00 00 00 00 00 00     ........d.......
    6729:	e7 64 00 00 00 00 00 00 00 01 65 00 00 00 00 00     .d........e.....
    6739:	00 00 22 65 00 00 00 00 01 00 00 24 65 00 00 00     .."e.......$e...
    6749:	00 01 00 00 35 65 00 00 00 00 01 00 00 46 65 00     ....5e.......Fe.
    6759:	00 00 00 01 00 00 48 65 00 00 00 00 01 00 00 4a     ......He.......J
    6769:	65 00 00 00 00 01 00 00 4c 65 00 00 00 00 01 00     e.......Le......
    6779:	00 4e 65 00 00 00 00 00 00 00 50 65 00 00 00 00     .Ne.......Pe....
    6789:	00 00 00 70 65 00 00 00 00 00 00 00 90 65 00 00     ...pe........e..
    6799:	00 00 01 00 00 a4 65 00 00 00 00 01 00 00 b5 65     ......e........e
    67a9:	00 00 00 00 01 00 00 c6 65 00 00 00 00 01 00 00     ........e.......
    67b9:	d7 65 00 00 00 00 01 00 00 d9 65 00 00 00 00 00     .e........e.....
    67c9:	00 00 db 65 00 00 00 00 00 00 00 f8 65 00 00 00     ...e........e...
    67d9:	00 00 00 00 09 66 00 00 00 00 01 00 00 32 66 00     .....f.......2f.
    67e9:	00 00 00 01 00 00 43 66 00 00 00 00 01 00 00 54     ......Cf.......T
    67f9:	66 00 00 00 00 01 00 00 65 66 00 00 00 00 00 00     f.......ef......
    6809:	00 67 66 00 00 00 00 00 00 00 81 66 00 00 00 00     .gf........f....
    6819:	00 00 00 95 66 00 00 00 00 01 00 00 a9 66 00 00     ....f........f..
    6829:	00 00 01 00 00 ba 66 00 00 00 00 01 00 00 cb 66     ......f........f
    6839:	00 00 00 00 01 00 00 cd 66 00 00 00 00 01 00 00     ........f.......
    6849:	cf 66 00 00 00 00 01 00 00 d1 66 00 00 00 00 01     .f........f.....
    6859:	00 00 d3 66 00 00 00 00 00 00 00 d5 66 00 00 00     ...f........f...
    6869:	00 01 00 00 f6 66 00 00 00 00                       .....f....

00006873 <LevelClearSong>:
    6873:	00 c3 03 00 c2 02 00 c1 01 00 c0 00 00 b0 07 5a     ...............Z
    6883:	00 07 73 00 90 51 64 00 b1 07 64 00 b2 07 7f 00     ..s..Qd...d.....
    6893:	92 21 64 00 ff 06 01 53 0d 90 40 64 07 43 64 0e     .!d....S..@d.Cd.
    68a3:	4b 64 00 92 24 64 07 90 52 64 00 92 28 64 0e 90     Kd..$d..Rd..(d..
    68b3:	47 64 07 58 64 00 92 24 64 0d 90 43 64 07 51 64     Gd.Xd..$d..Cd.Qd
    68c3:	00 92 21 64 0e 90 51 64 00 92 21 64 07 90 3e 64     ..!d..Qd..!d..>d
    68d3:	0e 4c 64 00 92 24 64 07 90 51 64 00 92 28 64 06     .Ld..$d..Qd..(d.
    68e3:	90 50 64 07 51 64 07 58 64 00 92 24 64 15 90 4a     .Pd.Qd.Xd..$d..J
    68f3:	64 00 92 26 64 07 90 4a 64 07 4b 64 00 92 32 64     d..&d..Jd.Kd..2d
    6903:	07 90 4c 64 00 92 26 64 07 90 4c 64 06 4f 64 00     ..Ld..&d..Ld.Od.
    6913:	92 32 64 07 90 4b 64 00 92 27 64 07 90 4b 64 07     .2d..Kd..'d..Kd.
    6923:	4f 64 00 92 33 64 07 90 4b 64 00 52 64 00 92 27     Od..3d..Kd.Rd..'
    6933:	64 07 90 4b 64 07 57 64 00 92 33 64 07 90 56 64     d..Kd.Wd..3d..Vd
    6943:	07 55 64 06 54 64 07 53 64 07 54 64 07 55 64 07     .Ud.Td.Sd.Td.Ud.
    6953:	56 64 00 92 21 64 04 90 54 64 03 51 64 03 4f 64     Vd..!d..Td.Qd.Od
    6963:	04 4d 64 03 48 64 04 4a 64 00 92 21 64 0a b0 07     .Md.Hd.Jd..!d...
    6973:	5a 00 07 73 00 90 42 01 00 b0 07 7f 0a 92 21 01     Z..s..B.......!.
    6983:	d5 55 ff 06 01 45 00 ff 2f 00                       .U...E../.

0000698d <AmericaSong>:
    698d:	00 c2 02 00 c1 01 00 c0 00 00 b0 07 7f 00 90 3a     ...............:
    699d:	64 00 b1 07 5a 00 b2 07 7f 00 92 1f 64 00 b3 07     d...Z.......d...
    69ad:	7f 00 ff 06 01 53 0c 90 3b 64 07 43 64 00 91 47     .....S..;d.Cd..G
    69bd:	64 00 93 04 64 0c 90 3a 64 00 91 47 64 00 93 04     d...d..:d..Gd...
    69cd:	64 07 90 3b 64 00 92 26 64 0c 90 43 64 07 3a 64     d..;d..&d..Cd.:d
    69dd:	00 91 47 64 00 93 03 64 0c 90 3b 64 08 43 64 00     ..Gd...d..;d.Cd.
    69ed:	92 1f 64 0c 90 3a 64 01 93 03 64 02 03 64 02 04     ..d..:d...d..d..
    69fd:	64 02 90 3b 64 00 91 47 64 00 92 1f 64 00 93 04     d..;d..Gd...d...
    6a0d:	64 0c 90 43 64 00 91 47 64 00 93 04 64 07 90 41     d..Cd..Gd...d..A
    6a1d:	64 00 92 21 64 0c 90 40 64 08 3f 64 00 91 47 64     d..!d..@d.?d..Gd
    6a2d:	00 92 23 64 00 93 03 64 0c 90 3e 64 07 3c 64 00     ..#d...d..>d.<d.
    6a3d:	92 24 64 13 90 3c 64 00 91 48 64 00 93 04 64 0c     .$d..<d..Hd...d.
    6a4d:	90 3e 64 00 91 48 64 00 93 04 64 07 90 3f 64 00     .>d..Hd...d..?d.
    6a5d:	92 1f 64 0c 90 40 64 08 48 64 00 91 48 64 00 93     ..d..@d.Hd..Hd..
    6a6d:	03 64 13 90 46 64 00 92 24 64 13 90 45 64 00 91     .d..Fd..$d..Ed..
    6a7d:	48 64 00 92 24 64 00 93 04 64 0c 91 48 64 00 93     Hd..$d...d..Hd..
    6a8d:	04 64 08 90 3f 64 00 92 23 64 0c 90 40 64 07 3c     .d..?d..#d..@d.<
    6a9d:	64 00 91 48 64 00 92 21 64 00 93 03 64 0c 03 64     d..Hd..!d...d..d
    6aad:	07 92 1f 64 0c 90 47 64 07 46 64 00 91 47 64 00     ...d..Gd.Fd..Gd.
    6abd:	93 04 64 0d 90 47 64 00 91 47 64 00 93 04 64 07     ..d..Gd..Gd...d.
    6acd:	90 45 64 00 92 26 64 0c 90 43 64 07 91 47 64 00     .Ed..&d..Cd..Gd.
    6add:	93 03 64 0c 90 47 64 07 46 64 00 92 1f 64 0c 90     ..d..Gd.Fd...d..
    6aed:	47 64 01 93 03 64 02 03 64 02 04 64 03 90 45 64     Gd...d..d..d..Ed
    6afd:	00 91 47 64 00 93 04 64 0c 90 43 64 00 91 47 64     ..Gd...d..Cd..Gd
    6b0d:	00 93 04 64 07 92 26 64 0c 90 45 64 07 43 64 00     ...d..&d..Ed.Cd.
    6b1d:	91 47 64 00 93 03 64 0a 03 64 02 90 45 64 08 47     .Gd...d..d..Ed.G
    6b2d:	64 00 91 48 64 00 92 24 64 00 93 04 64 13 90 48     d..Hd..$d...d..H
    6b3d:	64 13 42 64 13 43 64 14 3f 64 0c 40 64 07 3f 64     d.Bd.Cd.?d.@d.?d
    6b4d:	0c 40 64 07 3b 64 14 3c 64 13 37 64 00 92 1f 64     .@d.;d.<d.7d...d
    6b5d:	0c 90 36 64 07 3a 64 00 91 47 64 00 93 04 64 0c     ..6d.:d..Gd...d.
    6b6d:	90 3b 64 00 91 47 64 00 93 04 64 07 90 3e 64 00     .;d..Gd...d..>d.
    6b7d:	92 26 64 0d 90 3b 64 07 43 64 00 91 47 64 00 93     .&d..;d.Cd..Gd..
    6b8d:	03 64 13 90 41 64 00 92 1f 64 0c 90 37 64 01 93     .d..Ad...d..7d..
    6b9d:	03 64 02 03 64 02 04 64 02 90 40 64 00 91 47 64     .d..d..d..@d..Gd
    6bad:	00 93 04 64 0c 90 37 64 00 91 47 64 00 93 04 64     ...d..7d..Gd...d
    6bbd:	08 90 3e 64 00 92 26 64 0c 90 3f 64 07 40 64 00     ..>d..&d..?d.@d.
    6bcd:	91 47 64 00 93 03 64 0c 90 37 64 07 3c 64 00 92     .Gd...d..7d.<d..
    6bdd:	24 64 14 90 3c 64 00 91 48 64 00 93 04 64 0c 90     $d..<d..Hd...d..
    6bed:	3e 64 00 91 48 64 00 93 04 64 07 90 3f 64 00 92     >d..Hd...d..?d..
    6bfd:	1f 64 0c 90 40 64 07 48 64 00 91 48 64 00 93 03     .d..@d.Hd..Hd...
    6c0d:	64 13 90 46 64 00 92 24 64 14 90 45 64 00 91 48     d..Fd..$d..Ed..H
    6c1d:	64 00 92 24 64 00 93 04 64 0c 91 48 64 00 93 04     d..$d...d..Hd...
    6c2d:	64 07 90 43 64 00 92 26 64 13 90 40 64 00 91 48     d..Cd..&d..@d..H
    6c3d:	64 00 92 28 64 00 93 03 64 0c 03 64 08 90 45 64     d..(d...d..d..Ed
    6c4d:	00 91 48 64 00 92 29 64 00 93 03 64 13 90 45 64     ..Hd..)d...d..Ed
    6c5d:	00 91 48 64 00 92 29 64 00 93 03 64 0c 03 64 02     ..Hd..)d...d..d.
    6c6d:	92 1f 64 05 90 47 64 00 91 48 64 00 92 2b 64 00     ..d..Gd..Hd..+d.
    6c7d:	93 03 64 13 90 45 64 00 91 48 64 00 92 2b 64 00     ..d..Ed..Hd..+d.
    6c8d:	93 03 64 14 90 43 64 00 91 4c 64 00 92 2b 64 00     ..d..Cd..Ld..+d.
    6c9d:	93 03 64 0c 90 42 64 02 93 03 64 03 03 64 02 90     ..d..Bd...d..d..
    6cad:	43 64 00 91 4c 64 00 92 2b 64 00 93 03 64 0c 90     Cd..Ld..+d...d..
    6cbd:	45 64 00 93 03 64 03 92 21 64 04 91 4c 64 00 92     Ed...d..!d..Ld..
    6ccd:	2d 64 00 93 03 64 0c 90 43 64 08 40 64 00 91 4c     -d...d..Cd.@d..L
    6cdd:	64 00 92 2d 64 00 93 03 64 13 90 3e 64 00 91 4a     d..-d...d..>d..J
    6ced:	64 00 92 24 64 00 93 03 64 13 90 3e 64 00 91 4a     d..$d...d..>d..J
    6cfd:	64 00 92 24 64 00 93 03 64 0e 03 64 06 90 43 64     d..$d...d..d..Cd
    6d0d:	00 91 4c 64 00 92 1f 64 00 93 03 64 0c 90 3f 64     ..Ld...d...d..?d
    6d1d:	07 3e 64 00 91 4a 64 00 92 1f 64 00 93 03 64 13     .>d..Jd...d...d.
    6d2d:	90 3c 64 00 91 4c 64 00 92 24 64 00 93 03 64 0a     .<d..Ld..$d...d.
    6d3d:	03 64 09 90 37 64 00 91 4a 64 00 92 1f 64 00 93     .d..7d..Jd...d..
    6d4d:	03 64 14 90 48 64 00 91 48 64 00 92 30 64 00 93     .d..Hd..Hd..0d..
    6d5d:	03 64 26 92 1f 64 14 91 47 64 00 93 04 64 0c 91     .d&..d..Gd...d..
    6d6d:	47 64 00 93 04 64 07 92 26 64 13 91 47 64 00 93     Gd...d..&d..Gd..
    6d7d:	03 64 13 92 1f 64 0d 93 03 64 02 03 64 02 04 64     .d...d...d..d..d
    6d8d:	03 91 47 64 00 92 1f 64 00 93 04 64 0c 91 47 64     ..Gd...d...d..Gd
    6d9d:	00 93 04 64 07 92 21 64 13 91 47 64 00 92 23 64     ...d..!d..Gd..#d
    6dad:	00 93 03 64 14 92 24 64 13 91 48 64 00 93 04 64     ...d..$d..Hd...d
    6dbd:	0c 91 48 64 00 93 04 64 07 92 2b 64 14 91 48 64     ..Hd...d..+d..Hd
    6dcd:	00 93 03 64 13 91 48 64 00 92 30 64 13 93 04 64     ...d..Hd..0d...d
    6ddd:	0c 04 64 1b 03 64 09 ff 06 01 45 00 ff 2f 00        ..d..d....E../.

00006dec <EgyptSong>:
    6dec:	00 c3 75 00 c2 00 00 c1 06 00 c0 05 00 b0 07 7f     ..u.............
    6dfc:	00 b1 07 7f 00 07 7e 00 07 7e 00 b2 07 7e 00 07     ......~..~...~..
    6e0c:	7e 03 90 50 64 00 91 28 70 00 93 08 7f 00 ff 06     ~..Pd..(p.......
    6e1c:	01 53 09 90 51 64 09 50 64 00 93 09 7f 09 90 51     .S..Qd.Pd......Q
    6e2c:	64 00 93 09 7f 08 90 53 64 00 93 08 7f 12 90 51     d......Sd......Q
    6e3c:	64 00 91 26 70 00 93 09 7f 12 90 50 64 00 91 28     d..&p......Pd..(
    6e4c:	6d 00 93 08 7f 11 90 51 64 00 93 09 7f 12 90 50     m......Qd......P
    6e5c:	64 00 91 29 6e 00 93 08 7f 12 90 4d 64 00 93 09     d..)n......Md...
    6e6c:	7f 12 90 4c 64 00 91 28 70 00 93 08 7f 08 90 4d     ...Ld..(p......M
    6e7c:	64 09 4c 64 00 93 09 7f 09 90 4d 64 00 93 09 7f     d.Ld......Md....
    6e8c:	09 90 50 64 00 93 08 7f 12 90 4d 64 00 91 26 70     ..Pd......Md..&p
    6e9c:	00 93 09 7f 11 90 4c 64 00 91 28 6d 00 93 08 7f     ......Ld..(m....
    6eac:	12 90 4d 64 00 93 09 7f 12 90 4c 64 00 91 29 6e     ..Md......Ld..)n
    6ebc:	00 93 08 7f 11 90 4a 64 00 93 09 7f 12 90 47 64     ......Jd......Gd
    6ecc:	00 91 28 70 00 93 08 7f 09 90 48 64 09 47 64 00     ..(p......Hd.Gd.
    6edc:	93 09 7f 09 90 48 64 00 93 09 7f 08 90 4b 64 00     .....Hd......Kd.
    6eec:	93 08 7f 12 90 48 64 00 91 26 70 00 93 09 7f 12     .....Hd..&p.....
    6efc:	90 47 64 00 91 28 6d 00 93 08 7f 11 90 48 64 00     .Gd..(m......Hd.
    6f0c:	93 09 7f 12 90 47 64 00 91 29 6e 00 93 08 7f 12     .....Gd..)n.....
    6f1c:	90 45 64 00 93 09 7f 11 90 44 64 00 91 28 70 00     .Ed......Dd..(p.
    6f2c:	93 08 7f 09 90 45 64 09 44 64 00 93 09 7f 09 90     .....Ed.Dd......
    6f3c:	45 64 00 93 09 7f 09 90 44 64 00 93 08 7f 12 90     Ed......Dd......
    6f4c:	41 64 00 91 26 70 00 93 09 7f 11 90 40 64 00 91     Ad..&p......@d..
    6f5c:	28 6d 00 93 08 7f 12 09 7f 23 09 7f 12 90 50 64     (m.......#....Pd
    6f6c:	00 91 28 70 00 93 08 7f 09 90 51 64 09 50 64 00     ..(p......Qd.Pd.
    6f7c:	93 09 7f 08 90 51 64 00 93 09 7f 09 90 53 64 00     .....Qd......Sd.
    6f8c:	93 08 7f 12 90 51 64 00 91 26 70 00 93 09 7f 12     .....Qd..&p.....
    6f9c:	90 50 64 00 91 28 6d 00 93 08 7f 11 90 51 64 00     .Pd..(m......Qd.
    6fac:	93 09 7f 12 90 50 64 00 91 29 6e 00 93 08 7f 12     .....Pd..)n.....
    6fbc:	90 4d 64 00 93 09 7f 11 90 4c 64 00 91 28 70 00     .Md......Ld..(p.
    6fcc:	93 08 7f 09 90 4d 64 09 4c 64 00 93 09 7f 09 90     .....Md.Ld......
    6fdc:	4d 64 00 93 09 7f 09 90 50 64 00 93 08 7f 11 90     Md......Pd......
    6fec:	4d 64 00 91 26 70 00 93 09 7f 12 90 4c 64 00 91     Md..&p......Ld..
    6ffc:	28 6d 00 93 08 7f 12 90 4d 64 00 93 09 7f 11 90     (m......Md......
    700c:	4c 64 00 91 29 6e 00 93 08 7f 12 90 4a 64 00 93     Ld..)n......Jd..
    701c:	09 7f 12 90 47 64 00 91 28 70 00 93 08 7f 09 90     ....Gd..(p......
    702c:	48 64 09 47 64 00 93 09 7f 08 90 48 64 00 93 09     Hd.Gd......Hd...
    703c:	7f 09 90 4b 64 00 93 08 7f 12 90 48 64 00 91 26     ...Kd......Hd..&
    704c:	70 00 93 09 7f 12 90 47 64 00 91 28 6d 00 93 08     p......Gd..(m...
    705c:	7f 11 90 48 64 00 93 09 7f 12 90 47 64 00 91 29     ...Hd......Gd..)
    706c:	6e 00 93 08 7f 12 90 45 64 00 93 09 7f 11 90 44     n......Ed......D
    707c:	64 00 91 28 70 00 93 08 7f 09 90 45 64 09 44 64     d..(p......Ed.Dd
    708c:	00 93 09 7f 09 90 45 64 00 93 09 7f 09 90 44 64     ......Ed......Dd
    709c:	00 93 08 7f 11 90 41 64 00 91 26 70 00 93 09 7f     ......Ad..&p....
    70ac:	12 90 40 64 00 91 28 6d 12 93 09 7f 11 08 7f 04     ..@d..(m........
    70bc:	08 66 04 08 66 0a 09 7f 12 90 47 64 00 91 28 70     .f..f.....Gd..(p
    70cc:	00 93 08 7f 09 90 48 64 08 47 64 00 93 09 7f 09     ......Hd.Gd.....
    70dc:	90 48 64 00 93 09 7f 09 90 4b 64 00 93 08 7f 12     .Hd......Kd.....
    70ec:	90 48 64 00 91 26 70 00 93 09 7f 12 90 47 64 00     .Hd..&p......Gd.
    70fc:	91 28 6d 00 93 08 7f 11 90 48 64 00 93 09 7f 12     .(m......Hd.....
    710c:	90 47 64 00 91 29 6e 00 93 08 7f 12 90 45 64 00     .Gd..)n......Ed.
    711c:	93 09 7f 11 90 44 64 00 91 28 70 00 93 08 7f 09     .....Dd..(p.....
    712c:	90 45 64 09 44 64 00 93 09 7f 09 90 45 64 00 93     .Ed.Dd......Ed..
    713c:	09 7f 09 90 44 64 00 93 08 7f 11 90 41 64 00 91     ....Dd......Ad..
    714c:	26 70 00 93 09 7f 12 90 40 64 00 91 28 6d 00 93     &p......@d..(m..
    715c:	08 7f 12 09 7f 11 09 7f 12 09 7f 12 90 47 64 00     .............Gd.
    716c:	91 28 70 00 93 08 7f 09 90 48 64 08 47 64 00 93     .(p......Hd.Gd..
    717c:	09 7f 09 90 48 64 00 93 09 7f 09 90 4b 64 00 93     ....Hd......Kd..
    718c:	08 7f 0e 91 26 70 04 90 48 64 00 93 09 7f 11 90     ....&p..Hd......
    719c:	4b 64 00 91 28 6d 00 93 08 7f 12 90 48 64 00 93     Kd..(m......Hd..
    71ac:	09 7f 12 90 47 64 00 91 29 6e 00 93 08 7f 12 90     ....Gd..)n......
    71bc:	45 64 00 93 09 7f 11 90 44 64 00 91 28 70 09 90     Ed......Dd..(p..
    71cc:	45 64 09 44 64 09 45 64 09 44 64 11 41 64 00 91     Ed.Dd.Ed.Dd.Ad..
    71dc:	26 70 12 90 40 64 00 91 28 6d 27 93 09 66 03 09     &p..@d..(m'..f..
    71ec:	66 04 09 66 0b 08 66 0a 91 28 66 09 29 66 09 2c     f..f..f..(f.)f.,
    71fc:	66 09 2d 7f 09 2f 72 11 30 7f 12 33 7f 12 30 72     f.-../r.0..3..0r
    720c:	11 2f 66 12 30 66 12 34 72 08 35 7f 09 34 72 09     ./f.0f.4r.5..4r.
    721c:	33 72 09 30 66 12 2f 66 11 2d 66 09 2e 66 09 2d     3r.0f./f.-f..f.-
    722c:	7f 09 2c 66 09 29 66 11 27 72 12 ff 06 01 45 00     ..,f.)f.'r....E.
    723c:	ff 2f 00                                            ./.

0000723f <ChinaSong>:
    723f:	00 c3 73 00 c1 10 00 c2 11 00 c0 0f 00 b0 07 7f     ..s.............
    724f:	00 07 7f 00 93 12 64 00 ff 06 01 53 10 92 45 64     ......d....S..Ed
    725f:	00 93 13 66 04 92 46 64 04 91 3a 64 08 92 45 64     ...f..Fd..:d..Ed
    726f:	00 93 12 64 10 91 3d 64 00 93 13 66 10 92 46 64     ...d..=d...f..Fd
    727f:	00 91 36 64 00 93 12 64 08 92 46 64 00 91 36 64     ..6d...d..Fd..6d
    728f:	08 93 13 66 08 92 42 64 00 91 35 64 00 93 12 64     ...f..Bd..5d...d
    729f:	10 12 64 08 91 33 64 00 93 13 66 10 92 43 64 00     ..d..3d...f..Cd.
    72af:	91 31 64 00 93 12 64 04 92 44 64 0c 46 64 00 91     .1d...d..Dd.Fd..
    72bf:	31 64 00 93 13 66 10 92 47 64 00 91 35 64 00 93     1d...f..Gd..5d..
    72cf:	12 64 08 92 48 64 00 91 38 64 08 93 13 66 08 92     .d..Hd..8d...f..
    72df:	49 64 08 91 31 64 00 93 12 64 10 90 5c 64 08 5e     Id..1d...d..\d.^
    72ef:	64 00 91 35 64 00 93 12 64 10 90 5b 64 00 93 12     d..5d...d..[d...
    72ff:	64 08 90 5c 64 00 91 30 64 00 93 13 66 10 91 2f     d..\d..0d...f../
    730f:	64 00 93 12 64 10 92 46 64 00 93 13 66 04 92 47     d...d..Fd...f..G
    731f:	64 04 91 33 64 08 92 42 64 00 93 12 64 10 91 36     d..3d..Bd...d..6
    732f:	64 00 93 13 66 10 92 47 64 00 91 2f 64 00 93 12     d...f..Gd../d...
    733f:	64 08 92 47 64 00 91 2f 64 08 93 13 66 08 92 4b     d..Gd../d...f..K
    734f:	64 00 91 33 64 00 93 12 64 10 12 64 08 91 36 64     d..3d...d..d..6d
    735f:	00 93 13 66 10 92 49 64 00 91 36 64 00 93 12 64     ...f..Id..6d...d
    736f:	10 92 4b 64 00 93 13 66 10 92 49 64 00 91 36 64     ..Kd...f..Id..6d
    737f:	00 93 12 64 0a 92 48 64 00 91 3a 64 06 93 13 66     ...d..Hd..:d...f
    738f:	05 92 47 64 00 91 3d 64 0b 90 54 64 00 92 46 64     ..Gd..=d..Td..Fd
    739f:	00 91 36 64 00 93 12 64 04 90 55 64 0c 57 64 00     ..6d...d..Ud.Wd.
    73af:	91 36 64 00 93 13 66 08 90 55 64 00 91 3a 64 00     .6d...f..Ud..:d.
    73bf:	93 12 64 08 12 66 08 90 54 64 00 93 12 64 08 90     ..d..f..Td...d..
    73cf:	53 64 00 91 3d 64 00 93 13 66 08 90 52 64 08 4e     Sd..=d...f..Rd.N
    73df:	64 00 91 2f 64 00 93 12 64 08 13 66 08 90 52 64     d../d...d..f..Rd
    73ef:	00 92 4a 64 04 90 53 64 00 92 4b 64 04 91 33 64     ..Jd..Sd..Kd..3d
    73ff:	08 90 4e 64 00 92 47 64 00 93 12 64 08 13 66 08     ..Nd..Gd...d..f.
    740f:	91 36 64 08 90 53 64 00 92 4b 64 08 91 2f 64 00     .6d..Sd..Kd../d.
    741f:	93 12 64 08 13 66 08 90 57 64 00 92 4e 64 00 91     ..d..f..Wd..Nd..
    742f:	2f 64 00 93 13 66 08 91 33 64 00 93 13 66 08 90     /d...f..3d...f..
    743f:	5a 64 00 92 51 64 00 93 13 66 08 13 66 04 90 59     Zd..Qd...f..f..Y
    744f:	64 00 92 50 64 04 91 36 64 00 93 13 66 08 90 57     d..Pd..6d...f..W
    745f:	64 00 92 4e 64 00 93 13 66 08 90 55 64 00 91 36     d..Nd...f..Ud..6
    746f:	64 00 93 12 64 10 90 55 64 00 93 13 66 08 91 3a     d...d..Ud...f..:
    747f:	64 08 90 55 64 00 93 12 64 0c 90 54 64 04 91 3d     d..Ud...d..Td..=
    748f:	64 00 93 13 66 08 90 53 64 08 57 64 00 91 33 64     d...f..Sd.Wd..3d
    749f:	00 93 12 64 10 90 57 64 00 93 13 66 08 91 36 64     ...d..Wd...f..6d
    74af:	00 93 12 64 08 90 57 64 08 93 12 64 04 90 55 64     ...d..Wd...d..Ud
    74bf:	04 91 3a 64 00 93 13 66 08 90 52 64 08 50 64 00     ..:d...f..Rd.Pd.
    74cf:	91 31 64 00 93 12 64 08 90 50 64 08 93 13 66 08     .1d...d..Pd...f.
    74df:	90 52 64 00 91 35 64 08 93 12 64 08 90 53 64 08     .Rd..5d...d..Sd.
    74ef:	54 64 00 91 38 64 00 93 13 66 10 90 55 64 00 91     Td..8d...f..Ud..
    74ff:	3b 64 00 93 12 64 10 90 57 64 00 93 13 66 08 91     ;d...d..Wd...f..
    750f:	33 64 00 93 12 64 10 90 52 64 00 93 12 64 08 90     3d...d..Rd...d..
    751f:	50 64 00 91 34 64 00 93 13 66 10 90 4e 64 00 91     Pd..4d...f..Nd..
    752f:	36 64 00 93 12 64 10 13 66 08 91 3a 64 08 93 12     6d...d..f..:d...
    753f:	64 10 91 3d 64 00 93 13 66 10 12 64 08 91 31 64     d..=d...f..d..1d
    754f:	08 90 61 64 00 91 31 64 00 93 13 66 08 14 66 04     ..ad..1d...f..f.
    755f:	90 61 3c 04 60 5a 00 91 33 64 00 93 14 66 08 14     .a<.`Z..3d...f..
    756f:	66 04 90 60 37 04 5f 50 00 91 35 64 00 93 14 66     f..`7._P..5d...f
    757f:	0c 90 5f 32 04 50 55 00 91 36 64 00 93 14 66 02     .._2.PU..6d...f.
    758f:	90 51 64 02 93 14 66 0c 91 36 64 10 90 50 55 00     .Qd...f..6d..PU.
    759f:	91 36 64 00 93 14 66 02 90 51 64 02 93 14 66 1c     .6d...f..Qd...f.
    75af:	90 50 55 00 91 36 64 00 93 13 66 02 90 51 64 02     .PU..6d...f..Qd.
    75bf:	93 12 66 0c 90 4e 64 00 91 36 64 00 93 13 66 08     ..f..Nd..6d...f.
    75cf:	90 4c 64 00 91 3a 64 00 93 12 64 08 12 66 08 12     .Ld..:d...d..f..
    75df:	64 08 90 4e 64 00 91 3d 64 00 93 13 66 10 90 50     d..Nd..=d...f..P
    75ef:	55 00 91 36 64 00 93 12 64 02 90 51 64 0e 50 55     U..6d...d..Qd.PU
    75ff:	00 91 36 64 00 93 13 66 02 90 51 64 0e 50 55 00     ..6d...f..Qd.PU.
    760f:	91 36 64 00 93 12 64 02 90 51 64 0e 4e 64 00 93     .6d...d..Qd.Nd..
    761f:	13 66 08 90 4e 64 00 91 36 64 08 90 4c 64 00 93     .f..Nd..6d..Ld..
    762f:	12 64 08 90 48 64 00 91 36 64 08 90 48 64 00 93     .d..Hd..6d..Hd..
    763f:	13 66 08 90 47 64 00 91 36 64 00 93 12 64 08 90     .f..Gd..6d...d..
    764f:	45 64 00 91 3a 64 08 90 42 64 00 93 12 64 08 90     Ed..:d..Bd...d..
    765f:	42 64 00 91 3d 64 00 93 13 66 08 90 42 64 08 4e     Bd..=d...f..Bd.N
    766f:	64 00 91 2f 64 00 93 12 64 05 90 47 64 05 4e 64     d../d...d..Gd.Nd
    767f:	06 47 64 00 91 2f 64 00 93 13 66 05 90 4e 64 05     .Gd../d...f..Nd.
    768f:	47 64 03 4e 64 03 57 64 00 91 2f 64 00 93 12 64     Gd.Nd.Wd../d...d
    769f:	08 90 57 64 08 93 13 66 08 90 57 64 08 57 64 00     ..Wd...f..Wd.Wd.
    76af:	91 2f 64 00 93 12 64 08 90 53 64 08 53 64 00 91     ./d...d..Sd.Sd..
    76bf:	2f 64 00 93 13 66 08 91 33 64 08 90 5a 64 00 93     /d...f..3d..Zd..
    76cf:	12 66 08 90 5a 64 00 93 12 64 08 90 57 64 00 91     .f..Zd...d..Wd..
    76df:	36 64 00 93 13 66 08 90 53 64 08 4e 64 00 91 32     6d...f..Sd.Nd..2
    76ef:	64 00 93 12 64 10 91 32 64 00 93 14 66 08 14 66     d...d..2d...f..f
    76ff:	08 90 51 64 00 91 36 64 00 93 14 66 08 14 66 08     ..Qd..6d...f..f.
    770f:	90 53 64 00 91 39 64 08 34 64 08 93 12 64 08 91     .Sd..9d.4d...d..
    771f:	34 64 08 90 52 64 00 93 13 66 08 91 34 64 00 93     4d..Rd...f..4d..
    772f:	12 64 08 90 58 64 00 91 38 64 08 93 12 64 08 90     .d..Xd..8d...d..
    773f:	59 64 00 91 3b 64 00 93 13 66 02 90 5a 64 0e 91     Yd..;d...f..Zd..
    774f:	36 64 00 93 12 64 10 90 59 64 00 91 36 64 00 93     6d...d..Yd..6d..
    775f:	13 66 02 90 5a 64 0e 91 36 64 00 93 12 64 10 90     .f..Zd..6d...d..
    776f:	59 64 00 93 13 66 02 90 5a 64 06 59 64 00 91 35     Yd...f..Zd.Yd..5
    777f:	64 08 93 12 64 08 91 35 64 08 90 55 64 00 93 13     d...d..5d..Ud...
    778f:	66 08 91 35 64 00 93 12 64 08 90 52 64 00 91 3a     f..5d...d..Rd..:
    779f:	64 00 93 12 66 08 12 64 08 90 5c 64 00 91 3d 64     d...f..d..\d..=d
    77af:	00 93 13 66 02 90 5d 64 06 5c 64 02 5d 64 06 5c     ...f..]d.\d.]d.\
    77bf:	64 00 91 33 64 00 93 12 64 02 90 5d 64 06 5c 64     d..3d...d..]d.\d
    77cf:	02 5d 64 06 5c 64 00 91 33 64 00 93 13 66 02 90     .]d.\d..3d...f..
    77df:	5d 64 06 5c 64 08 5d 64 00 91 33 64 00 93 12 64     ]d.\d.]d..3d...d
    77ef:	08 90 5d 64 08 93 13 66 08 91 33 64 08 90 5d 64     ..]d...f..3d..]d
    77ff:	00 93 12 64 08 90 5d 64 00 91 33 64 08 90 5a 64     ...d..]d..3d..Zd
    780f:	00 93 13 66 08 90 58 64 00 5a 64 00 91 33 64 00     ...f..Xd.Zd..3d.
    781f:	93 12 64 08 90 58 64 00 91 36 64 08 90 54 64 00     ..d..Xd..6d..Td.
    782f:	93 12 64 08 90 54 64 00 91 3a 64 00 93 13 66 08     ..d..Td..:d...f.
    783f:	90 53 64 08 51 64 00 91 32 64 00 93 12 64 10 90     .Sd.Qd..2d...d..
    784f:	55 64 00 91 32 64 00 93 13 66 08 90 55 64 08 55     Ud..2d...f..Ud.U
    785f:	64 00 91 32 64 00 93 12 64 08 90 55 64 08 53 64     d..2d...d..Ud.Sd
    786f:	00 93 13 66 08 90 53 64 00 91 32 64 08 90 58 64     ...f..Sd..2d..Xd
    787f:	00 93 12 64 08 91 32 64 08 90 55 64 08 55 64 00     ...d..2d..Ud.Ud.
    788f:	91 32 64 00 93 12 64 08 90 53 64 00 91 36 64 08     .2d...d..Sd..6d.
    789f:	90 55 64 00 93 12 64 08 91 39 64 00 93 13 66 10     .Ud...d..9d...f.
    78af:	91 31 64 00 93 12 64 08 90 49 64 00 93 13 66 08     .1d...d..Id...f.
    78bf:	90 4e 64 00 91 31 64 08 90 50 64 08 50 64 00 91     .Nd..1d..Pd.Pd..
    78cf:	36 64 00 93 12 64 08 90 55 64 00 91 38 64 00 93     6d...d..Ud..8d..
    78df:	13 66 08 90 5a 64 08 5c 64 08 61 64 00 5c 64 00     .f..Zd.\d.ad.\d.
    78ef:	91 37 64 00 93 12 64 08 90 61 64 00 91 37 64 00     .7d...d..ad..7d.
    78ff:	93 14 66 08 14 66 08 14 66 08 90 61 64 00 91 38     ..f..f..f..ad..8
    790f:	64 08 90 58 64 00 91 31 64 00 93 14 66 08 91 33     d..Xd..1d...f..3
    791f:	64 00 93 14 66 08 91 35 64 00 93 14 66 08 ff 06     d...f..5d...f...
    792f:	01 45 00 ff 2f 00                                   .E../.

00007935 <SouthPoleSong>:
    7935:	00 c1 18 00 c0 17 00 c2 19 00 c3 73 06 93 1a 6c     ...........s...l
    7945:	00 b3 07 7f 00 b2 07 7f 00 92 38 6c 00 b0 07 7f     ..........8l....
    7955:	00 b1 07 7f 00 91 20 6e 00 ff 06 01 53 0c 93 1c     ...... n....S...
    7965:	6c 0d 1b 6c 00 91 24 6e 0c 93 1c 6c 00 91 27 6e     l..l..$n...l..'n
    7975:	0d 93 1a 6c 00 91 25 6e 06 25 6e 07 93 1c 6c 00     ...l..%n.%n...l.
    7985:	91 25 6e 0c 93 1b 6c 00 91 29 6e 0d 93 1a 6c 00     .%n...l..)n...l.
    7995:	91 2c 6e 0c b3 07 7f 00 93 1a 6c 00 91 20 6e 0d     .,n.......l.. n.
    79a5:	93 1c 6c 0c 1b 6c 00 91 24 6e 0d 93 1c 6c 00 91     ..l..l..$n...l..
    79b5:	27 6e 0c 93 1a 6c 00 91 25 6e 07 25 6e 06 93 1c     'n...l..%n.%n...
    79c5:	6c 00 91 1d 6e 0c 93 1b 6c 00 92 36 6c 00 91 1e     l...n...l..6l...
    79d5:	6e 0d 93 1a 6c 00 91 1f 6e 0d b3 07 7f 00 93 1a     n...l...n.......
    79e5:	6c 00 92 38 6c 00 91 20 6e 0c 93 1c 6c 0d 1b 6c     l..8l.. n...l..l
    79f5:	00 91 24 6e 0c 93 1c 6c 00 91 27 6e 0d 93 1a 6c     ..$n...l..'n...l
    7a05:	00 91 25 6e 06 25 6e 06 93 1c 6c 00 91 25 6e 0d     ..%n.%n...l..%n.
    7a15:	93 1b 6c 00 91 29 6e 0c 93 1a 6c 00 91 2c 6e 0d     ..l..)n...l..,n.
    7a25:	93 1a 6c 00 91 20 6e 0c 93 1c 6c 00 91 20 6e 0d     ..l.. n...l.. n.
    7a35:	93 1b 6c 00 91 24 6e 0d 93 1a 6c 00 91 27 6e 06     ..l..$n...l..'n.
    7a45:	93 1a 6c 06 1b 6c 00 91 25 6e 06 25 6e 07 93 1a     ..l..l..%n.%n...
    7a55:	6c 00 91 29 6e 0c 93 1b 6c 00 91 2a 6e 0d 93 1a     l..)n...l..*n...
    7a65:	6c 00 92 36 6c 00 91 2b 6e 0c 93 1a 6c 00 b3 07     l..6l..+n...l...
    7a75:	7f 00 92 38 6c 00 91 20 6e 0d 93 1c 6c 0c 1b 6c     ...8l.. n...l..l
    7a85:	00 91 24 6e 0d 93 1c 6c 00 91 27 6e 0c 93 1a 6c     ..$n...l..'n...l
    7a95:	00 91 25 6e 07 25 6e 06 93 1c 6c 00 91 25 6e 0d     ..%n.%n...l..%n.
    7aa5:	93 1b 6c 00 91 29 6e 0c 93 1a 6c 00 91 2c 6e 0d     ..l..)n...l..,n.
    7ab5:	b3 07 7f 00 93 1a 6c 00 91 20 6e 0c 93 1c 6c 0d     ......l.. n...l.
    7ac5:	1b 6c 00 91 24 6e 0c 93 1c 6c 00 91 27 6e 0d 93     .l..$n...l..'n..
    7ad5:	1a 6c 00 91 25 6e 06 25 6e 06 93 1c 6c 00 91 1d     .l..%n.%n...l...
    7ae5:	6e 0d 93 1b 6c 00 92 36 6c 00 91 1e 6e 0c 93 1a     n...l..6l...n...
    7af5:	6c 00 91 1f 6e 0d b3 07 7f 00 93 1a 6c 00 92 38     l...n.......l..8
    7b05:	6c 00 91 20 6e 0d 93 1c 6c 0c 1b 6c 00 91 24 6e     l.. n...l..l..$n
    7b15:	0d 93 1c 6c 00 91 27 6e 0c 93 1a 6c 00 91 25 6e     ...l..'n...l..%n
    7b25:	06 25 6e 07 93 1c 6c 00 91 25 6e 0c 93 1b 6c 00     .%n...l..%n...l.
    7b35:	91 29 6e 0d 93 1a 6c 00 91 2c 6e 0c 93 1a 6c 00     .)n...l..,n...l.
    7b45:	91 20 6e 0d 93 1c 6c 00 91 20 6e 0c 93 1b 6c 00     . n...l.. n...l.
    7b55:	91 24 6e 0d 93 1a 6c 00 91 27 6e 06 93 1a 6c 07     .$n...l..'n...l.
    7b65:	1b 6c 00 91 25 6e 06 25 6e 06 93 1a 6c 00 91 29     .l..%n.%n...l..)
    7b75:	6e 0d 93 1b 6c 00 91 2a 6e 0c 93 1a 6c 00 92 36     n...l..*n...l..6
    7b85:	6c 00 91 2b 6e 0d 93 1a 6c 00 b3 07 7f 00 92 38     l..+n...l......8
    7b95:	6c 00 90 48 6e 00 91 20 6e 0c 93 1c 6c 0d 1b 6c     l..Hn.. n...l..l
    7ba5:	00 90 48 6e 00 91 24 6e 0c 93 1c 6c 00 91 27 6e     ..Hn..$n...l..'n
    7bb5:	0d 93 1a 6c 00 90 46 6e 00 91 25 6e 06 25 6e 07     ...l..Fn..%n.%n.
    7bc5:	93 1c 6c 00 90 46 6e 00 91 25 6e 0c 93 1b 6c 00     ..l..Fn..%n...l.
    7bd5:	91 29 6e 0d 93 1a 6c 00 90 46 6e 00 91 2c 6e 0c     .)n...l..Fn..,n.
    7be5:	b3 07 7f 00 93 1a 6c 00 90 48 6e 00 91 20 6e 0d     ......l..Hn.. n.
    7bf5:	93 1c 6c 0c 1b 6c 00 90 48 6e 00 91 24 6e 0d 93     ..l..l..Hn..$n..
    7c05:	1c 6c 00 91 27 6e 0c 93 1a 6c 00 90 49 6e 00 91     .l..'n...l..In..
    7c15:	25 6e 07 25 6e 06 93 1c 6c 00 90 49 6e 00 91 1d     %n.%n...l..In...
    7c25:	6e 0c 93 1b 6c 00 91 1e 6e 0d 93 1a 6c 00 92 36     n...l...n...l..6
    7c35:	6c 00 90 49 6e 00 91 1f 6e 0d b3 07 7f 00 93 1a     l..In...n.......
    7c45:	6c 00 92 38 6c 00 90 48 6e 00 91 20 6e 0c 93 1c     l..8l..Hn.. n...
    7c55:	6c 0d 1b 6c 00 90 48 6e 00 91 24 6e 0c 93 1c 6c     l..l..Hn..$n...l
    7c65:	00 91 27 6e 0d 93 1a 6c 00 90 46 6e 00 91 25 6e     ..'n...l..Fn..%n
    7c75:	06 25 6e 06 93 1c 6c 00 90 46 6e 00 91 25 6e 0d     .%n...l..Fn..%n.
    7c85:	93 1b 6c 00 91 29 6e 0c 93 1a 6c 00 90 46 6e 00     ..l..)n...l..Fn.
    7c95:	91 2c 6e 0d 93 1a 6c 00 90 48 6e 00 91 20 6e 0c     .,n...l..Hn.. n.
    7ca5:	93 1c 6c 00 91 20 6e 0d 93 1b 6c 00 90 48 6e 00     ..l.. n...l..Hn.
    7cb5:	91 24 6e 0d 93 1a 6c 00 91 27 6e 06 93 1a 6c 06     .$n...l..'n...l.
    7cc5:	1b 6c 00 90 49 6e 00 91 25 6e 06 90 49 6e 00 91     .l..In..%n..In..
    7cd5:	25 6e 07 93 1a 6c 00 90 49 6e 00 91 29 6e 06 90     %n...l..In..)n..
    7ce5:	49 6e 06 93 1b 6c 00 90 49 6e 00 91 2a 6e 0d 93     In...l..In..*n..
    7cf5:	1a 6c 00 92 36 6c 00 90 4b 6e 00 91 2b 6e 0c 93     .l..6l..Kn..+n..
    7d05:	1a 6c 00 b3 07 7f 00 92 38 6c 00 90 48 6e 00 91     .l......8l..Hn..
    7d15:	20 6e 0d 93 1c 6c 0c 1b 6c 00 90 48 6e 00 91 24      n...l..l..Hn..$
    7d25:	6e 0d 93 1c 6c 00 91 27 6e 0c 93 1a 6c 00 90 46     n...l..'n...l..F
    7d35:	6e 00 91 25 6e 07 25 6e 06 93 1c 6c 00 90 46 6e     n..%n.%n...l..Fn
    7d45:	00 91 25 6e 0d 93 1b 6c 00 91 29 6e 0c 93 1a 6c     ..%n...l..)n...l
    7d55:	00 90 46 6e 00 91 2c 6e 0d b3 07 7f 00 93 1a 6c     ..Fn..,n.......l
    7d65:	00 90 48 6e 00 91 20 6e 0c 93 1c 6c 0d 1b 6c 00     ..Hn.. n...l..l.
    7d75:	90 48 6e 00 91 24 6e 0c 93 1c 6c 00 91 27 6e 0d     .Hn..$n...l..'n.
    7d85:	93 1a 6c 00 90 49 6e 00 91 25 6e 06 25 6e 06 93     ..l..In..%n.%n..
    7d95:	1c 6c 00 90 49 6e 00 91 1d 6e 0d 93 1b 6c 00 91     .l..In...n...l..
    7da5:	1e 6e 0c 93 1a 6c 00 92 36 6c 00 90 49 6e 00 91     .n...l..6l..In..
    7db5:	1f 6e 0d b3 07 7f 00 93 1a 6c 00 92 38 6c 00 90     .n.......l..8l..
    7dc5:	48 6e 00 91 20 6e 0d 93 1c 6c 0c 1b 6c 00 90 48     Hn.. n...l..l..H
    7dd5:	6e 00 91 24 6e 0d 93 1c 6c 00 91 27 6e 0c 93 1a     n..$n...l..'n...
    7de5:	6c 00 90 46 6e 00 91 25 6e 06 25 6e 07 93 1c 6c     l..Fn..%n.%n...l
    7df5:	00 90 46 6e 00 91 25 6e 0c 93 1b 6c 00 91 29 6e     ..Fn..%n...l..)n
    7e05:	0d 93 1a 6c 00 90 46 6e 00 91 2c 6e 0c 93 1a 6c     ...l..Fn..,n...l
    7e15:	00 90 48 6e 00 91 20 6e 0d 93 1c 6c 00 91 20 6e     ..Hn.. n...l.. n
    7e25:	0c 93 1b 6c 00 90 48 6e 00 91 24 6e 0d 93 1a 6c     ...l..Hn..$n...l
    7e35:	00 91 27 6e 06 93 1a 6c 07 1b 6c 00 90 49 6e 00     ..'n...l..l..In.
    7e45:	91 25 6e 06 90 49 6e 00 91 25 6e 06 93 1a 6c 00     .%n..In..%n...l.
    7e55:	90 49 6e 00 91 29 6e 06 90 49 6e 07 93 1b 6c 00     .In..)n..In...l.
    7e65:	90 49 6e 00 91 2a 6e 0c 93 1a 6c 00 92 36 6c 00     .In..*n...l..6l.
    7e75:	90 4b 6e 00 91 2b 6e 0d b3 07 7f 00 07 7f 00 07     .Kn..+n.........
    7e85:	7f 00 07 7f 00 07 7f 00 07 7f 00 07 7f 00 07 7f     ................
    7e95:	00 07 7f 00 07 7f 00 07 7f 00 07 7f 00 07 7f 00     ................
    7ea5:	07 7f 00 07 7f 00 07 7f 00 ff 06 01 45 00 ff 2f     ............E../
	...

00007eb6 <JapanSong>:
    7eb6:	00 c2 20 00 c1 1f 00 c3 73 00 c0 1e 00 93 22 64     .. .....s....."d
    7ec6:	00 91 29 64 00 ff 06 01 53 0b 93 22 64 0b 21 64     ..)d....S.."d.!d
    7ed6:	0c 22 64 00 91 29 64 0b 93 22 64 00 91 2c 64 0b     ."d..)d.."d..,d.
    7ee6:	93 22 64 0c 21 64 0b 22 64 00 91 2c 64 0b 93 22     ."d.!d."d..,d.."
    7ef6:	64 00 91 2e 64 0c 93 22 64 0b 21 64 0c 22 64 00     d...d.."d.!d."d.
    7f06:	91 2e 64 0b 93 22 64 00 91 30 64 0b 93 22 64 00     ..d.."d..0d.."d.
    7f16:	91 2e 64 06 93 22 64 06 22 64 00 91 2c 64 0b 93     ..d.."d."d..,d..
    7f26:	21 64 00 91 27 64 0b 93 22 64 00 91 29 64 0c 93     !d..'d.."d..)d..
    7f36:	22 64 0b 21 64 0b 22 64 00 91 29 64 0c 93 22 64     "d.!d."d..)d.."d
    7f46:	00 91 2c 64 0b 93 22 64 0c 21 64 0b 22 64 00 91     ..,d.."d.!d."d..
    7f56:	2c 64 0b 93 22 64 00 91 2e 64 0c 93 22 64 0b 21     ,d.."d...d.."d.!
    7f66:	64 0b 22 64 00 91 2e 64 0c 93 22 64 00 91 30 64     d."d...d.."d..0d
    7f76:	0b 2e 64 0c 93 22 64 00 91 2c 64 0b 93 22 64 00     ..d.."d..,d.."d.
    7f86:	91 27 64 0b 93 22 64 00 91 29 64 0c 93 22 64 0b     .'d.."d..)d.."d.
    7f96:	21 64 0b 22 64 00 91 29 64 0c 93 22 64 00 91 2c     !d."d..)d.."d..,
    7fa6:	64 0b 93 22 64 0b 21 64 0c 22 64 00 91 2c 64 0b     d.."d.!d."d..,d.
    7fb6:	93 22 64 00 91 2e 64 0c 93 22 64 0b 21 64 0b 22     ."d...d.."d.!d."
    7fc6:	64 00 91 2e 64 0c 93 22 64 00 91 30 64 0b 93 22     d...d.."d..0d.."
    7fd6:	64 00 91 2e 64 0b 93 22 66 00 91 2c 64 0c 93 21     d...d.."f..,d..!
    7fe6:	64 00 91 27 64 0b 90 4b 64 00 93 22 64 00 91 29     d..'d..Kd.."d..)
    7ff6:	64 0b 90 4d 64 00 93 22 64 0c 90 4b 64 00 93 21     d..Md.."d..Kd..!
    8006:	64 0b 90 48 64 00 93 22 64 00 91 29 64 0c 90 4b     d..Hd.."d..)d..K
    8016:	64 00 93 22 64 00 91 2c 64 0b 90 4d 64 00 93 22     d.."d..,d..Md.."
    8026:	64 0b 21 64 0c 90 4b 64 00 93 22 64 00 91 2c 64     d.!d..Kd.."d..,d
    8036:	0b 93 22 64 00 91 2e 64 0b 90 4d 64 00 93 22 64     .."d...d..Md.."d
    8046:	0c 90 4b 64 00 93 21 64 0b 90 48 64 00 93 22 64     ..Kd..!d..Hd.."d
    8056:	00 91 2e 64 0c 90 4b 64 00 93 22 64 00 91 30 64     ...d..Kd.."d..0d
    8066:	0b 90 4d 64 00 93 22 64 00 91 2e 64 0b 90 4b 64     ..Md.."d...d..Kd
    8076:	00 93 22 64 00 91 2c 64 06 93 22 64 06 90 46 64     .."d..,d.."d..Fd
    8086:	00 93 21 64 00 91 27 64 0b 90 48 64 00 93 22 64     ..!d..'d..Hd.."d
    8096:	00 91 29 64 0b 90 48 64 00 93 22 64 0c 21 64 0b     ..)d..Hd.."d.!d.
    80a6:	22 64 00 91 29 64 0b 93 22 64 00 91 2c 64 0c 93     "d..)d.."d..,d..
    80b6:	22 64 0b 21 64 0c 22 64 00 91 2c 64 0b 93 22 64     "d.!d."d..,d.."d
    80c6:	00 91 2e 64 0b 93 22 64 0c 21 64 0b 22 64 00 91     ...d.."d.!d."d..
    80d6:	2e 64 0b 93 22 64 00 91 30 64 0c 93 22 64 00 91     .d.."d..0d.."d..
    80e6:	2e 64 0b 93 21 64 00 91 2c 64 0c 93 22 64 00 91     .d..!d..,d.."d..
    80f6:	27 64 0b 90 4b 64 00 93 22 64 00 91 29 64 0b 90     'd..Kd.."d..)d..
    8106:	4d 64 00 93 22 64 0c 90 4b 64 00 93 21 64 0b 90     Md.."d..Kd..!d..
    8116:	48 64 00 93 22 64 00 91 29 64 0b 90 4b 64 00 93     Hd.."d..)d..Kd..
    8126:	22 64 00 91 2c 64 0c 90 4d 64 00 93 22 64 0b 21     "d..,d..Md.."d.!
    8136:	64 0b 90 4b 64 00 93 22 64 00 91 2c 64 0c 93 22     d..Kd.."d..,d.."
    8146:	64 00 91 2e 64 0b 90 4d 64 00 93 22 64 0c 90 4b     d...d..Md.."d..K
    8156:	64 00 93 21 64 0b 90 48 64 00 93 22 64 00 91 2e     d..!d..Hd.."d...
    8166:	64 0b 90 4b 64 00 93 22 64 00 91 30 64 0c 90 4d     d..Kd.."d..0d..M
    8176:	64 00 93 22 64 00 91 2e 64 0b 90 4b 64 00 93 21     d.."d...d..Kd..!
    8186:	64 00 91 2c 64 0b 90 46 64 00 93 22 64 00 91 27     d..,d..Fd.."d..'
    8196:	64 0c 90 48 64 00 93 22 64 00 91 29 64 0b 93 22     d..Hd.."d..)d.."
    81a6:	64 0b 21 64 0c 22 64 00 91 29 64 0b 93 22 64 00     d.!d."d..)d.."d.
    81b6:	91 2c 64 0c 93 22 64 0b 21 64 0b 22 64 00 91 2c     .,d.."d.!d."d..,
    81c6:	64 0c 93 22 64 00 91 2e 64 0b 93 22 64 0b 21 64     d.."d...d.."d.!d
    81d6:	0c 22 64 00 91 2e 64 0b 93 22 64 00 91 30 64 06     ."d...d.."d..0d.
    81e6:	93 22 64 06 90 48 64 00 93 22 66 00 91 2e 64 0b     ."d..Hd.."f...d.
    81f6:	90 4b 64 00 93 21 66 00 91 2c 64 0b 90 4d 64 00     .Kd..!f..,d..Md.
    8206:	93 22 64 00 91 27 64 0c 90 50 64 00 93 22 64 00     ."d..'d..Pd.."d.
    8216:	91 29 64 0b 93 22 64 0b 90 4d 64 00 93 21 64 0c     .)d.."d..Md..!d.
    8226:	90 4b 64 00 93 22 64 00 91 29 64 0b 90 4d 64 00     .Kd.."d..)d..Md.
    8236:	93 22 64 00 91 2c 64 0b 93 22 64 0c 90 4b 64 00     ."d..,d.."d..Kd.
    8246:	93 21 64 0b 90 48 64 00 93 22 64 00 91 2c 64 0c     .!d..Hd.."d..,d.
    8256:	90 46 64 00 93 22 64 00 91 2e 64 0b 90 48 64 00     .Fd.."d...d..Hd.
    8266:	93 22 64 0b 90 44 64 00 93 21 64 0c 90 41 64 00     ."d..Dd..!d..Ad.
    8276:	93 22 64 00 91 2e 64 0b 90 46 64 00 93 22 64 00     ."d...d..Fd.."d.
    8286:	91 30 64 0b 90 48 64 00 93 22 64 00 91 2e 64 0c     .0d..Hd.."d...d.
    8296:	90 44 64 00 93 21 64 00 91 2c 64 0b 90 41 64 00     .Dd..!d..,d..Ad.
    82a6:	93 22 64 00 91 27 64 0c 90 46 64 00 93 22 64 00     ."d..'d..Fd.."d.
    82b6:	91 29 64 0b 90 48 64 00 93 22 64 0b 21 64 0c 22     .)d..Hd.."d.!d."
    82c6:	64 00 91 29 64 0b 93 22 64 00 91 2c 64 0b 93 22     d..)d.."d..,d.."
    82d6:	64 0c 21 64 0b 22 64 00 91 2c 64 0b 93 22 64 00     d.!d."d..,d.."d.
    82e6:	91 2e 64 0c 93 22 64 0b 21 64 0c 22 64 00 91 2e     ..d.."d.!d."d...
    82f6:	64 0b 93 22 64 00 91 30 64 0b 90 41 64 00 93 22     d.."d..0d..Ad.."
    8306:	64 00 91 2e 64 0c 90 44 64 00 93 21 64 00 91 2c     d...d..Dd..!d..,
    8316:	64 0b 90 46 64 00 93 22 64 00 91 27 64 0b 90 48     d..Fd.."d..'d..H
    8326:	64 00 93 22 64 00 91 29 64 0c 93 22 64 0b 90 46     d.."d..)d.."d..F
    8336:	64 00 93 21 64 0b 90 44 64 00 93 22 64 00 91 29     d..!d..Dd.."d..)
    8346:	64 0c 90 46 64 00 93 22 64 00 91 2c 64 0b 93 22     d..Fd.."d..,d.."
    8356:	64 0c 90 44 64 00 93 21 64 0b 90 41 64 00 93 22     d..Dd..!d..Ad.."
    8366:	64 00 91 2c 64 0b 90 44 64 00 93 22 64 00 91 2e     d..,d..Dd.."d...
    8376:	64 0c 93 22 64 0b 90 41 64 00 93 21 64 0b 90 3f     d.."d..Ad..!d..?
    8386:	64 00 93 22 64 00 91 2e 64 0c 90 41 64 00 93 22     d.."d...d..Ad.."
    8396:	64 00 91 30 64 05 93 22 64 06 90 44 64 00 93 22     d..0d.."d..Dd.."
    83a6:	64 00 91 2e 64 06 93 22 64 06 90 46 64 00 93 21     d...d.."d..Fd..!
    83b6:	64 00 91 2c 64 0b 90 44 64 00 93 22 64 00 91 27     d..,d..Dd.."d..'
    83c6:	64 0b 29 64 22 29 64 0c 2c 64 22 2c 64 0b 2e 64     d.)d")d.,d",d..d
    83d6:	22 93 22 64 00 91 2e 64 0c 93 22 64 00 91 30 64     "."d...d.."d..0d
    83e6:	05 93 22 64 06 22 64 00 91 2e 64 06 93 22 64 05     .."d."d...d.."d.
    83f6:	21 64 00 91 2c 64 0c 93 22 64 00 91 27 64 0b ff     !d..,d.."d..'d..
    8406:	06 01 45 00 ff 2f 00                                ..E../.

0000840d <Maps>:
	...
    8429:	55 05 00 00 00 00 00 00 25 05 00 00 00 00 00 00     U.......%.......
    8439:	15 55 55 00 00 00 00 55 35 31 52 00 00 00 00 25     .UU....U51R....%
    8449:	31 56 55 00 00 00 00 55 55 53 00 00 00 00 00 00     1VU....UUS......
    8459:	50 52 00 00 00 00 00 00 50 55 00 00 00 00 00 00     PR......PU......
	...
    8495:	00 00 00 50 55 55 00 00 00 00 00 50 16 51 00 00     ...PUU.....P.Q..
    84a5:	00 00 00 50 31 53 50 55 00 00 00 50 31 51 50 52     ...P1SPU...P1QPR
    84b5:	00 00 00 50 55 51 55 52 00 00 00 00 55 11 11 52     ...PUQUR....U..R
    84c5:	00 00 00 00 15 11 15 51 00 00 00 00 15 11 55 55     .......Q......UU
    84d5:	00 00 00 00 55 55 05 00 00 00 00 00 00 00 00 00     ....UU..........
	...
    8509:	00 55 55 55 05 00 00 00 00 15 11 11 55 05 00 00     .UUU........U...
    8519:	50 35 55 15 11 05 00 00 50 61 31 11 13 05 00 00     P5U.....Pa1.....
    8529:	50 21 52 31 51 05 00 00 50 25 52 11 51 00 00 00     P!R1Q...P%R.Q...
    8539:	00 55 55 55 55 00 00 00 00 00 00 00 00 00 00 00     .UUUU...........
	...
    8579:	00 00 00 55 55 00 00 00 00 00 50 15 51 00 00 00     ...UU.....P.Q...
    8589:	00 00 50 36 51 00 00 00 00 00 50 35 51 05 00 00     ..P6Q.....P5Q...
    8599:	00 00 50 15 13 05 00 00 00 00 50 32 11 05 00 00     ..P.......P2....
    85a9:	00 00 50 22 24 05 00 00 00 00 50 55 55 05 00 00     ..P"$.....PUU...
	...
    85e9:	00 00 00 50 55 55 00 00 00 00 00 50 16 55 05 00     ...PUU.....P.U..
    85f9:	00 00 00 50 31 11 05 00 00 00 00 55 15 15 55 00     ...P1......U..U.
    8609:	00 00 00 25 15 15 51 00 00 00 00 25 13 51 51 00     ...%..Q....%.QQ.
    8619:	00 00 00 25 11 31 51 00 00 00 00 55 55 55 55 00     ...%.1Q....UUUU.
	...
    8655:	50 55 55 55 00 00 00 55 55 11 11 51 00 00 00 15     PUUU...UU..Q....
    8665:	11 52 55 51 00 00 00 15 15 15 11 51 05 00 00 15     .RUQ.......Q....
    8675:	15 13 53 12 05 00 00 15 15 41 11 15 05 00 00 15     ..S......A......
    8685:	52 13 13 15 05 00 00 55 11 11 15 15 55 05 00 50     R......U....U..P
    8695:	51 55 12 11 61 05 00 50 11 11 51 15 11 05 00 50     QU..a..P..Q....P
    86a5:	55 55 55 55 55 05 00 00 00 00 00 00 00 00 00 00     UUUUU...........
	...
    86cd:	00 50 55 55 55 00 00 00 00 55 11 15 56 00 00 00     .PUUU....U..V...
    86dd:	00 15 11 15 51 00 00 00 00 35 31 31 51 00 00 00     ....Q....511Q...
    86ed:	00 15 53 15 51 00 00 00 55 15 13 15 55 00 00 00     ..S.Q...U...U...
    86fd:	25 22 22 11 05 00 00 00 55 55 55 55 05 00 00 00     %"".....UUUU....
	...
    873d:	00 00 50 55 55 05 00 00 00 50 55 11 11 05 00 00     ..PUU....PU.....
    874d:	00 55 12 53 15 55 00 00 00 25 32 31 11 56 00 00     .U.S.U...%21.V..
    875d:	00 25 12 13 13 55 00 00 00 55 55 55 11 05 00 00     .%...U...UUU....
    876d:	00 00 00 50 55 05 00 00 00 00 00 00 00 00 00 00     ...PU...........
	...
    87a5:	00 00 50 55 55 55 55 00 00 00 50 11 55 11 51 00     ..PUUUU...P.U.Q.
    87b5:	00 00 50 11 31 11 51 00 00 00 50 13 55 15 53 00     ..P.1.Q...P.U.S.
    87c5:	00 00 50 51 22 52 51 00 00 00 55 51 22 52 51 05     ..PQ"RQ...UQ"RQ.
    87d5:	00 00 15 13 31 11 13 05 00 00 15 11 11 15 16 05     ....1...........
    87e5:	00 00 55 55 55 55 55 05 00 00 00 00 00 00 00 00     ..UUUUU.........
	...
    8821:	50 55 55 05 00 00 00 00 50 11 11 05 00 00 00 50     PUU.....P......P
    8831:	55 33 13 05 00 00 00 50 16 23 12 05 00 00 00 50     U3.....P.#.....P
    8841:	31 22 52 05 00 00 00 50 55 15 51 00 00 00 00 00     1"R....PU.Q.....
    8851:	00 55 55 00 00 00 00 00 00 00 00 00 00 00 00 00     .UU.............
	...
    8875:	00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    8899:	50 55 05 50 55 55 00 00 55 11 05 50 11 51 00 00     PU.PUU..U..P.Q..
    88a9:	15 13 55 55 13 51 00 00 15 31 22 22 31 51 00 00     ..UU.Q...1""1Q..
    88b9:	55 11 11 15 16 55 00 00 50 55 55 55 55 05 00 00     U....U..PUUUU...
	...
    88e5:	00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    8901:	00 00 50 55 55 00 00 00 00 50 55 11 56 00 00 00     ..PUU....PU.V...
    8911:	00 50 11 23 51 05 00 00 00 50 11 32 12 05 00 00     .P.#Q....P.2....
    8921:	00 50 55 41 13 05 00 00 00 00 50 11 51 05 00 00     .PUA......P.Q...
    8931:	00 00 50 55 55 05 00 00 00 00 00 00 00 00 00 00     ..PUU...........
	...
    8959:	01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    8971:	00 00 00 50 55 05 00 00 00 00 00 50 22 05 00 00     ...PU......P"...
    8981:	00 00 00 55 21 55 00 00 00 00 00 15 31 52 00 00     ...U!U......1R..
    8991:	00 00 50 15 13 51 05 00 00 00 50 11 35 13 05 00     ..P..Q....P.5...
    89a1:	00 00 50 11 16 11 05 00 00 00 50 55 55 55 05 00     ..P.......PUUU..
	...
    89c9:	00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    89e1:	00 00 00 50 55 55 55 05 00 00 00 50 11 15 11 05     ...PUUU....P....
    89f1:	00 00 00 50 31 22 13 05 00 00 00 50 36 42 51 05     ...P1".....P6BQ.
    8a01:	00 00 00 50 31 22 13 05 00 00 00 50 11 15 11 05     ...P1".....P....
    8a11:	00 00 00 50 55 55 55 05 00 00 00 00 00 00 00 00     ...PUUU.........
	...
    8a39:	00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    8a49:	00 00 00 00 00 55 55 55 00 00 00 00 00 15 11 51     .....UUU.......Q
    8a59:	55 00 00 00 00 15 13 11 51 00 00 00 55 15 13 55     U.......Q...U..U
    8a69:	51 00 00 00 25 22 31 11 51 00 00 00 25 22 53 13     Q...%"1.Q...%"S.
    8a79:	55 00 00 00 55 55 51 31 51 00 00 00 00 50 11 16     U...UUQ1Q....P..
    8a89:	51 00 00 00 00 50 55 55 55 00 00 00 00 00 00 00     Q....PUUU.......
	...
    8aa9:	00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    8ac5:	00 50 55 55 05 00 00 00 00 50 11 11 05 00 00 00     .PUU.....P......
    8ad5:	00 50 31 33 55 00 00 00 00 50 11 25 52 55 00 00     .P13U....P.%RU..
    8ae5:	00 50 15 21 32 51 00 00 00 00 15 16 11 51 00 00     .P.!2Q.......Q..
    8af5:	00 00 55 55 55 55 00 00 00 00 00 00 00 00 00 00     ..UUUU..........
	...
    8b1d:	01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    8b2d:	00 00 00 55 55 55 55 00 00 00 00 15 11 25 51 00     ...UUUU......%Q.
    8b3d:	00 00 50 15 31 22 52 00 00 00 50 11 13 45 52 00     ..P.1"R...P..ER.
    8b4d:	00 00 55 51 35 15 55 00 00 00 15 11 13 31 51 00     ..UQ5.U......1Q.
    8b5d:	00 00 15 11 15 11 51 00 00 00 55 55 55 65 51 00     ......Q...UUUeQ.
    8b6d:	00 00 00 00 00 55 55 00 00 00 00 00 00 00 00 00     .....UU.........
	...
    8b8d:	00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    8ba5:	00 00 00 50 55 55 55 00 00 00 00 50 22 22 51 00     ...PUUU....P""Q.
    8bb5:	00 00 00 55 25 22 53 55 00 00 00 15 31 35 31 51     ...U%"SU....151Q
    8bc5:	00 00 00 15 33 11 35 51 00 00 00 15 11 51 11 51     ....3.5Q.....Q.Q
    8bd5:	00 00 00 55 55 61 51 55 00 00 00 00 50 55 55 05     ...UUaQU....PUU.
	...
    8bfd:	00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    8c19:	00 55 55 55 05 00 00 00 00 25 32 22 05 00 00 00     .UUU.....%2"....
    8c29:	00 25 52 22 05 00 00 00 00 15 33 13 05 00 00 00     .%R"......3.....
    8c39:	00 15 31 11 05 00 00 00 00 15 33 13 05 00 00 00     ..1.......3.....
    8c49:	00 15 51 16 05 00 00 00 00 55 55 55 05 00 00 00     ..Q......UUU....
	...
    8c6d:	00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    8c89:	00 00 50 55 55 05 00 00 00 00 50 21 22 05 00 00     ..PUU.....P!"...
    8c99:	00 55 55 22 22 05 00 00 00 15 51 55 13 55 05 00     .UU"".....QU.U..
    8ca9:	00 15 13 13 31 13 05 00 00 65 31 31 11 11 05 00     ....1....e11....
    8cb9:	00 15 11 55 15 11 05 00 00 55 55 05 55 55 05 00     ...U.....UU.UU..
	...
    8ce1:	02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    8cf1:	00 00 50 55 55 55 05 00 00 00 50 11 11 11 05 00     ..PUUU....P.....
    8d01:	00 00 50 51 33 11 05 00 00 00 50 21 22 15 05 00     ..PQ3.....P!"...
    8d11:	00 00 50 25 22 13 55 00 00 00 00 15 55 31 51 00     ..P%".U.....U1Q.
    8d21:	00 00 00 35 11 13 51 00 00 00 00 15 51 11 56 00     ...5..Q.....Q.V.
    8d31:	00 00 00 55 55 55 55 00 00 00 00 00 00 00 00 00     ...UUUU.........
	...
    8d51:	00 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    8d6d:	55 55 05 00 00 00 00 55 15 11 55 55 00 00 00 15     UU.....U..UU....
    8d7d:	11 13 13 51 00 00 00 15 13 11 13 56 00 00 00 55     ...Q.......V...U
    8d8d:	35 53 55 55 00 00 00 00 15 21 52 00 00 00 00 00     5SUU.....!R.....
    8d9d:	25 22 52 00 00 00 00 00 55 55 55 00 00 00 00 00     %"R.....UUU.....
	...
    8dc1:	00 00 02 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    8dd1:	00 00 00 50 55 55 05 00 55 55 05 50 11 11 55 05     ...PUU..UU.P..U.
    8de1:	15 21 05 50 11 13 13 05 25 22 05 50 51 11 13 55     .!.P....%".PQ..U
    8df1:	15 21 05 50 11 33 13 11 13 26 05 50 55 11 13 31     .!.P.3...&.PU..1
    8e01:	15 21 05 00 50 11 53 13 25 22 05 00 50 15 11 11     .!..P.S.%"..P...
    8e11:	15 21 05 00 00 55 55 55 55 55 05 00 00 00 00 00     .!...UUUUU......
	...
    8e31:	00 00 00 02 00 00 00 00 00 00 00 00 00 00 00 00     ................
    8e41:	00 00 00 00 00 00 00 50 55 55 05 00 00 50 55 55     .......PUU...PUU
    8e51:	12 11 05 00 00 50 11 25 52 15 05 00 00 50 11 23     .....P.%R....P.#
    8e61:	12 11 05 00 00 50 11 15 52 51 05 00 00 55 15 55     .....P..RQ...U.U
    8e71:	53 11 05 00 00 15 13 11 31 13 05 00 00 15 35 15     S.......1.....5.
    8e81:	51 11 05 00 00 65 11 55 55 55 05 00 00 55 55 05     Q....e.UUU...UU.
	...
    8ea5:	02 00 00 00 00 00 00 00 00 00 00 00 50 55 55 55     ............PUUU
    8eb5:	05 55 55 55 55 56 11 22 05 15 11 11 31 11 11 22     .UUUUV."....1.."
    8ec5:	05 15 13 35 51 53 11 22 05 55 51 15 11 51 55 22     ...5QS.".UQ..QU"
    8ed5:	05 50 31 31 55 51 50 55 05 50 51 11 15 51 00 00     .P11UQPU.PQ..Q..
    8ee5:	00 55 51 11 11 51 00 00 00 15 31 11 51 05 00 00     .UQ..Q....1.Q...
    8ef5:	00 15 51 35 51 00 00 00 00 15 51 15 51 00 00 00     ..Q5Q.....Q.Q...
    8f05:	00 55 55 55 55 00 00 00 00 00 00 00 00 00 00 00     .UUUU...........
    8f15:	00 02 00 00 00 50 55 55 55 05 00 00 00 50 11 11     .....PUUU....P..
    8f25:	11 05 00 00 00 50 11 13 13 05 55 55 55 55 31 31     .....P....UUUU11
    8f35:	11 05 25 22 11 55 55 51 15 05 22 22 11 11 11 51     ..%".UUQ..""...Q
    8f45:	15 05 25 22 11 55 31 53 15 05 55 55 55 55 31 11     ..%".U1S..UUUU1.
    8f55:	61 05 00 00 50 55 51 55 15 05 00 00 50 31 31 11     a...PUQU....P11.
    8f65:	11 05 00 00 50 11 13 55 55 05 00 00 50 15 11 05     ....P..UU...P...
    8f75:	00 00 00 00 00 55 55 05 00 00 00 00 00 00 00 00     .....UU.........
    8f85:	00 00 02 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    8f95:	00 00 00 00 00 00 50 55 55 00 00 00 55 55 50 11     ......PUU...UUP.
    8fa5:	51 05 00 00 15 51 55 51 11 05 00 00 15 13 22 22     Q....QUQ......""
    8fb5:	15 55 00 00 15 51 25 42 12 51 00 00 15 11 31 55     .U...Q%B.Q....1U
    8fc5:	53 51 00 00 15 53 13 11 13 51 00 00 55 61 51 55     SQ...S...Q..UaQU
    8fd5:	53 51 00 00 50 55 55 51 11 51 00 00 00 00 00 50     SQ..PUUQ.Q.....P
    8fe5:	55 55 00 00 00 00 00 00 00 00 00 00 00 00 00 00     UU..............
    8ff5:	00 00 00 02 00 00 55 55 00 00 00 00 55 55 15 51     ......UU....UU.Q
    9005:	00 00 00 00 15 31 31 51 50 55 55 05 15 11 13 51     .....11QPUU....Q
    9015:	50 24 24 04 55 31 31 51 55 42 42 02 50 13 13 51     P$$.U11QUBB.P..Q
    9025:	11 24 24 04 50 36 31 11 11 42 42 05 50 13 13 51     .$$.P61..BB.P..Q
    9035:	11 24 24 04 55 31 31 51 55 42 42 02 15 11 13 51     .$$.U11QUBB....Q
    9045:	50 24 24 04 15 31 31 51 50 55 55 05 55 55 15 51     P$$..11QPUU.UU.Q
    9055:	00 00 00 00 00 00 15 51 00 00 00 00 00 00 55 55     .......Q......UU
    9065:	00 00 00 00 02 00 00 00 55 55 55 55 05 00 00 00     ........UUUU....
    9075:	15 11 11 11 05 00 00 00 35 31 33 11 05 00 00 00     ........513.....
    9085:	15 11 15 13 05 00 00 00 15 11 63 13 05 00 00 55     ..........c....U
    9095:	35 31 51 51 05 00 00 15 11 53 53 51 00 55 55 15     51QQ.....SSQ.UU.
    90a5:	15 51 11 51 00 25 22 11 15 53 51 55 00 25 22 22     .Q.Q.%"..SQU.%""
    90b5:	11 51 51 00 00 25 22 22 15 53 51 00 00 55 55 55     .QQ..%"".SQ..UUU
    90c5:	55 11 51 00 00 00 00 00 50 55 55 00 00 00 00 00     U.Q.....PUU.....
    90d5:	00 00 00 00 00 02 00 00 00 00 00 00 00 00 50 55     ..............PU
    90e5:	55 05 55 55 05 00 55 56 11 55 15 11 55 00 15 11     U.UU..UV.U..U...
    90f5:	31 11 15 13 51 00 15 31 11 15 11 31 51 00 55 15     1...Q..1...1Q.U.
    9105:	55 55 55 11 51 00 55 15 55 11 55 53 55 00 15 13     UUU.Q.U.U.USU...
    9115:	51 55 15 22 05 00 15 13 13 13 21 22 05 00 15 11     QU."......!"....
    9125:	51 55 25 22 05 00 15 33 51 00 25 22 05 00 15 51     QU%"...3Q.%"...Q
    9135:	55 00 55 55 05 00 55 55 00 00 00 00 00 00 00 00     U.UU..UU........
    9145:	00 00 00 00 00 00 03 00 00 50 55 55 00 00 00 00     .........PUU....
    9155:	50 55 11 51 00 00 00 00 50 11 51 51 00 00 00 50     PU.Q....P.QQ...P
    9165:	55 11 13 51 55 55 05 50 11 35 15 51 11 11 05 50     U..QUU.P.5.Q...P
    9175:	13 13 55 11 31 11 05 55 11 15 11 31 33 55 05 15     ..U.1..U...13U..
    9185:	11 51 55 13 11 05 00 15 53 33 22 52 55 05 00 15     .QU.....S3"RU...
    9195:	11 51 22 22 05 00 00 15 15 16 25 22 05 00 00 15     .Q""......%"....
    91a5:	11 11 23 22 05 00 00 55 11 15 11 11 05 00 00 50     ..#"...U.......P
    91b5:	55 55 55 55 05 00 00 03 00 00 00 00 00 00 00 00     UUUU............
    91c5:	00 50 55 55 00 00 00 00 00 50 11 51 00 00 00 00     .PUU.....P.Q....
    91d5:	00 50 13 51 00 00 00 00 00 50 11 51 55 00 00 00     .P.Q.....P.QU...
    91e5:	50 55 11 53 55 00 00 00 50 11 13 31 51 00 00 00     PU.SU...P..1Q...
    91f5:	55 51 51 55 51 55 55 05 11 51 51 55 51 15 21 02     UQQUQUU..QQUQ.!.
    9205:	31 11 13 11 11 61 21 02 55 15 55 55 51 11 21 02     1....a!.U.UUQ.!.
    9215:	00 15 11 11 51 55 55 05 00 55 55 55 55 00 00 00     ....QUU..UUUU...
	...
    922d:	03 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    923d:	00 00 55 55 05 00 00 00 00 00 15 11 55 55 55 55     ..UU........UUUU
    924d:	05 00 15 13 13 11 11 11 05 55 55 15 31 51 33 11     .........UU.1Q3.
    925d:	05 15 11 15 55 11 11 55 05 25 22 11 51 15 31 05     ....U..U.%".Q.1.
    926d:	00 25 22 35 13 31 11 05 00 25 22 15 61 15 51 05     .%"5.1...%".a.Q.
    927d:	00 55 55 55 55 55 55 00 00 00 00 00 00 00 00 00     .UUUUUU.........
	...
    929d:	00 03 00 00 55 55 05 00 00 00 55 55 15 11 55 55     ....UU....UU..UU
    92ad:	55 00 15 11 11 15 51 15 51 05 15 15 33 11 31 11     U.....Q.Q...3.1.
    92bd:	11 05 15 51 11 51 15 15 15 05 15 13 15 55 11 31     ...Q.Q.......U.1
    92cd:	11 05 15 11 31 31 11 51 51 05 55 31 51 11 35 55     ....11.QQ.U1Q.5U
    92dd:	51 00 50 55 11 15 15 15 53 00 00 50 31 11 16 22     Q.PU....S..P1.."
    92ed:	52 00 00 50 31 55 53 22 52 00 00 50 15 11 22 22     R..P1US"R..P..""
    92fd:	55 00 00 00 55 15 22 52 05 00 00 00 00 55 55 55     U...U."R.....UUU
    930d:	00 00 03 00 00 00 00 00 00 00 00 00 50 55 55 05     ............PUU.
    931d:	00 00 00 00 50 11 11 55 00 00 00 00 50 31 31 51     ....P..U....P11Q
    932d:	05 00 00 55 55 51 53 11 55 55 00 15 13 11 31 11     ...UUQS.UU....1.
    933d:	15 51 05 15 11 31 51 31 22 22 02 55 15 15 55 55     .Q...1Q1"".U..UU
    934d:	22 22 02 50 15 35 31 11 22 55 05 50 11 15 11 53     "".P.51."U.P...S
    935d:	11 05 00 50 36 11 13 51 55 05 00 50 11 55 55 55     ...P6..QU..P.UUU
    936d:	00 00 00 50 55 05 00 00 00 00 00 00 00 00 00 00     ...PU...........
    937d:	00 00 00 03 00 00 00 50 55 55 55 05 00 00 00 50     .......PUUU....P
    938d:	11 11 11 05 00 00 00 50 11 13 13 05 55 55 55 55     .......P....UUUU
    939d:	31 31 11 05 25 22 11 55 55 51 15 05 22 22 11 11     11..%".UUQ..""..
    93ad:	11 51 15 05 25 22 11 55 31 53 15 05 55 55 55 55     .Q..%".U1S..UUUU
    93bd:	31 11 61 05 00 00 50 55 51 55 15 05 00 00 50 31     1.a...PUQU....P1
    93cd:	31 11 11 05 00 00 50 11 13 55 55 05 00 00 50 15     1.....P..UU...P.
    93dd:	11 05 00 00 00 00 00 55 55 05 00 00 00 00 00 00     .......UU.......
    93ed:	00 00 00 00 03 00 00 00 00 00 00 00 00 00 55 55     ..............UU
    93fd:	55 00 55 05 00 00 25 12 51 50 65 55 00 00 25 12     U.U...%.QPeU..%.
    940d:	51 55 11 51 00 00 25 12 11 11 33 51 00 00 25 12     QU.Q..%...3Q..%.
    941d:	51 51 31 51 00 00 25 52 55 51 31 51 00 00 55 55     QQ1Q..%RUQ1Q..UU
    942d:	31 51 13 51 00 00 00 50 11 53 31 51 00 00 00 50     1Q.Q...P.S1Q...P
    943d:	31 11 13 51 00 00 00 50 11 55 11 51 00 00 00 50     1..Q...P.U.Q...P
    944d:	55 55 55 55 00 00 00 00 00 00 00 00 00 00 00 00     UUUU............
    945d:	00 00 00 00 00 03 00 00 00 00 00 00 00 00 00 00     ................
	...
    9479:	00 00 00 50 55 55 55 05 00 00 00 50 22 22 22 05     ...PUUU....P""".
    9489:	00 00 00 50 11 13 15 55 00 00 00 50 31 51 31 51     ...P...U...P1Q1Q
    9499:	00 00 00 50 35 31 31 51 00 00 00 00 15 61 11 51     ...P511Q.....a.Q
    94a9:	00 00 00 00 55 55 55 55 00 00 00 00 00 00 00 00     ....UUUU........
	...
    94d1:	00 00 03 00 00 00 00 00 00 00 00 00 50 55 55 55     ............PUUU
    94e1:	00 00 00 00 50 11 11 51 55 55 05 00 50 11 53 11     ....P..QUU..P.S.
    94f1:	11 11 05 55 55 13 31 11 35 13 05 15 11 31 13 13     ...UU.1.5....1..
    9501:	11 13 05 15 53 11 55 51 55 51 05 15 56 35 31 11     ....S.UQUQ..V51.
    9511:	13 51 00 15 11 11 13 31 31 51 00 55 55 55 55 55     .Q.....11Q.UUUUU
    9521:	33 51 00 00 25 22 22 22 22 55 00 00 25 22 22 22     3Q..%""""U..%"""
    9531:	22 05 00 00 55 55 55 55 55 05 00 00 00 00 00 00     "...UUUUU.......
    9541:	00 00 00 03 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    955d:	00 00 00 55 55 05 00 00 00 00 00 15 16 05 00 00     ...UU...........
    956d:	00 00 00 35 33 05 00 00 00 50 55 15 11 05 00 00     ...53....PU.....
    957d:	00 50 11 21 35 55 00 00 00 50 31 32 12 52 00 00     .P.!5U...P12.R..
    958d:	00 50 11 25 25 55 00 00 00 50 55 55 55 05 00 00     .P.%%U...PUUU...
	...
    95b5:	04 00 00 00 00 00 00 00 00 50 55 55 55 05 00 00     .........PUUU...
    95c5:	00 50 11 11 11 05 00 00 00 50 11 13 11 55 55 05     .P.......P...UU.
    95d5:	00 50 55 15 11 13 11 05 00 50 11 55 53 31 11 05     .PU......P.US1..
    95e5:	00 50 11 11 56 51 51 55 05 55 51 15 13 13 33 11     .P..VQQU.UQ...3.
    95f5:	01 15 11 15 51 11 51 11 01 15 11 55 55 55 55 55     ....Q.Q....UUUUU
    9605:	05 25 22 52 00 00 00 00 00 25 22 52 00 00 00 00     .%"R.....%"R....
    9615:	00 55 55 55 00 00 00 00 00 00 00 00 00 00 00 00     .UUU............
    9625:	00 04 00 55 55 05 00 00 00 00 55 15 11 55 00 00     ...UU.....U..U..
    9635:	00 00 15 11 11 51 00 00 00 00 15 33 51 53 55 55     .....Q.....3QSUU
    9645:	55 05 55 51 13 13 13 15 11 05 25 22 52 11 31 11     U.UQ......%"R.1.
    9655:	11 05 25 22 62 15 51 55 53 05 25 22 32 15 11 13     ..%"b.QUS.%"2...
    9665:	13 05 25 22 32 31 15 11 11 05 55 55 15 11 15 53     ..%"21....UU...S
    9675:	53 05 00 00 55 55 15 11 13 05 00 00 00 00 55 15     S...UU........U.
    9685:	11 05 00 00 00 00 00 55 55 05 00 00 00 00 00 00     .......UU.......
    9695:	00 00 04 00 00 00 00 00 00 00 00 50 55 55 50 55     ...........PUUPU
    96a5:	55 05 00 50 11 51 55 11 11 05 00 55 31 31 51 13     U..P.QU....U11Q.
    96b5:	35 05 00 15 31 61 31 11 13 55 00 15 15 51 51 22     5...1a1..U...QQ"
    96c5:	22 05 00 15 51 15 13 25 55 52 00 55 11 13 11 21     "...Q..%UR.U...!
    96d5:	22 52 00 50 31 13 35 25 22 52 00 50 11 51 11 51     "R.P1.5%"R.P.Q.Q
    96e5:	13 55 00 50 55 55 31 11 11 05 00 00 00 50 55 15     .U.PUU1......PU.
    96f5:	51 05 00 00 00 00 00 55 55 00 00 00 00 00 00 00     Q......UU.......
    9705:	00 00 00 04 00 00 00 00 00 00 00 00 50 55 55 55     ............PUUU
    9715:	55 55 05 00 50 22 12 15 11 11 05 00 50 22 11 15     UU..P"......P"..
    9725:	55 11 05 00 50 22 11 11 51 11 05 00 50 22 11 15     U...P"..Q...P"..
    9735:	53 15 05 00 50 22 12 35 31 11 05 00 50 55 55 15     S...P".51...PUU.
    9745:	31 13 05 00 00 55 11 13 33 11 05 00 00 65 31 33     1....U..3....e13
    9755:	11 15 05 00 00 55 31 51 15 11 05 00 00 50 11 11     .....U1Q.....P..
    9765:	11 11 05 00 00 50 55 55 55 55 05 00 00 00 00 00     .....PUUUU......
    9775:	00 00 00 00 04 00 55 55 55 55 00 00 00 00 15 11     ......UUUU......
    9785:	15 51 55 00 00 55 15 15 13 31 51 55 00 15 11 51     .QU..U...1QU...Q
    9795:	33 51 11 51 00 15 55 53 11 16 31 51 00 15 11 31     3Q.Q..US..1Q...1
    97a5:	53 55 13 55 00 15 11 53 51 15 51 05 00 15 35 51     SU.U...SQ.Q...5Q
    97b5:	21 22 55 00 00 15 13 25 22 22 05 00 00 55 11 22     !"U....%""...U."
    97c5:	22 52 05 00 00 50 31 15 55 55 00 00 00 50 15 11     "R...P1.UU...P..
    97d5:	05 00 00 00 00 00 55 55 05 00 00 00 00 00 00 00     ......UU........
    97e5:	00 00 00 00 00 04 00 00 00 00 55 55 55 05 00 00     ..........UUU...
    97f5:	55 55 15 11 11 05 50 55 15 13 13 13 13 05 50 11     UU....PU......P.
    9805:	15 31 51 55 11 05 50 11 11 16 11 51 13 05 50 51     .1QU..P....Q..PQ
    9815:	55 51 55 11 11 05 50 51 22 22 52 31 13 05 50 51     UQU...PQ""R1..PQ
    9825:	22 22 52 11 53 05 55 53 22 22 32 11 51 00 15 11     ""R.S.US""2.Q...
    9835:	51 15 15 51 55 00 15 13 13 11 33 51 00 00 55 11     Q..QU.....3Q..U.
    9845:	55 55 15 51 00 00 50 55 05 00 55 55 00 00 00 00     UU.Q..PU..UU....
    9855:	00 00 00 00 00 00 04 50 55 55 00 00 00 00 00 55     .......PUU.....U
    9865:	11 51 05 00 00 00 00 15 11 11 55 55 05 00 00 15     .Q........UU....
    9875:	15 11 31 11 05 00 00 15 51 31 51 15 05 00 00 55     ..1.....Q1Q....U
    9885:	31 53 22 12 05 00 00 50 55 11 22 12 05 00 00 00     1S"....PU.".....
    9895:	50 55 25 52 55 55 00 55 55 55 22 52 15 51 00 15     PU%RUU.UUU"R.Q..
    98a5:	51 55 31 16 35 51 00 15 13 15 11 15 11 51 00 15     QU1.5Q.......Q..
    98b5:	31 11 35 11 13 55 00 55 11 11 13 51 55 05 00 50     1.5..U.U...QU..P
    98c5:	55 55 11 55 00 00 00 04 00 00 00 00 00 00 00 00     UU.U............
	...
    98dd:	00 55 55 55 55 05 00 00 00 15 11 11 11 05 00 00     .UUUU...........
    98ed:	00 15 31 31 31 05 00 00 00 55 51 53 15 05 00 00     ..111....UQS....
    98fd:	00 50 21 12 22 55 00 00 00 50 25 12 22 51 00 00     .P!."U...P%."Q..
    990d:	00 00 15 55 53 51 05 00 00 00 35 31 31 11 05 00     ...USQ....511...
    991d:	00 00 15 11 11 61 05 00 00 00 55 55 55 55 05 00     .....a....UUUU..
	...
    993d:	04 55 55 05 00 00 50 55 05 65 11 55 55 55 55 11     .UU...PU.e.UUUU.
    994d:	05 55 31 11 11 11 31 11 05 50 51 51 11 55 55 11     .U1...1..PQQ.UU.
    995d:	05 50 11 13 11 55 55 53 05 50 13 55 51 31 31 51     .P...UUS.P.UQ11Q
    996d:	00 55 31 11 53 11 11 51 00 15 11 15 11 11 51 51     .U1.S..Q......QQ
    997d:	00 15 11 55 55 35 55 55 00 55 55 15 11 15 11 05     ...UU5UU.UU.....
    998d:	00 00 00 25 22 11 13 05 00 00 00 25 22 52 11 05     ...%"......%"R..
    999d:	00 00 00 25 22 52 55 05 00 00 00 55 55 55 00 00     ...%"RU....UUU..
    99ad:	00 04 55 55 55 55 55 05 00 00 15 11 55 22 22 55     ..UUUUU.....U""U
    99bd:	55 05 15 31 11 22 52 15 11 05 55 35 13 22 55 15     U..1."R...U5."U.
    99cd:	15 05 00 15 55 22 52 35 11 05 00 15 15 11 55 15     ....U"R5......U.
    99dd:	51 05 50 15 15 13 31 31 51 00 50 11 15 15 15 11     Q.P...11Q.P.....
    99ed:	51 00 50 11 11 15 13 35 51 00 50 31 13 15 53 11     Q.P....5Q.P1..S.
    99fd:	55 00 50 55 51 15 51 51 05 00 00 50 16 11 11 51     U.PUQ.QQ...P...Q
    9a0d:	00 00 00 50 55 55 55 55 00 00 00 00 00 00 00 00     ...PUUUU........
	...

00009a1f <Demos>:
    9a1f:	3a 74 c1 00 11 5f 75 29 37 f2 37 a4 0a a0 b5 f0     :t..._u)7.7.....
    9a2f:	55 97 72 23 7f a3 0a ca 5c 75 29 37 f2 03 11 7f     U.r#....\u)7....
    9a3f:	3d 08 aa 15 f0 5f ea 0f aa 65 73 7c cd a8 fe a0     =...._...es|....
    9a4f:	5a 36 ff 8f a9 0a ff 9d ea 0f aa 05 11 77 97 3e     Z6...........w.>
    9a5f:	98 83 05 70 65 73 00 11 17 5f 97 a2 c9 9f fe 83     ...pes..._......
    9a6f:	a0 05 5f 97 a2 00 11 aa 80 c8 5b 57 a6 0a 08 f0     .._.......[W....
    9a7f:	f3 5f 9a 26 f4 77 65 aa 80 00 5f d7 e9 c0 77 65     ._.&.we..._...we
    9a8f:	aa f0 3c 17 9a 5a ff fc 3d aa 00 11 95 a5 88 9d     ..<..Z..=.......
    9a9f:	0e 33 58 75 fa 0f 28 56 36 80 15 fc 0f 76 2a 56     .3Xu..(V6....v*V
    9aaf:	00 11 6a ea f4 a8 ff 83 5a a7 8c f7 97 8c 2a 11     ..j.....Z.....*.
    9abf:	22 5a 83 5c a9 f2 37 dc 3d aa 09 29 30 3f 5f 05     "Z.\..7.=..)0?_.
    9acf:	a0 a9 59 fd df a3 a2 35 72 2a 30 58 05 fc f3 55     ..Y....5r*0X...U
    9adf:	a9 a9 f2 37 3f 80 aa 58 05 fc 7f 95 9a 2a df 00     ...7?..X.....*..
    9aef:	11 fd 3c 68 99 f2 83 05 7f 62 00 11 a3 9a ca af     ..<h.....b......
    9aff:	60 f6 3d df a3 fe 83 c6 97 3a dc 29 11 69 ca f3     `.=......:.).i..
    9b0f:	a5 f5 a4 80 36 11 c2 43 69 3d 50 3d a6 02 7f 6a     ....6..Ci=P=...j
    9b1f:	3d 8c 09 5d 0d 00 11 2d dc e3 7c 5a 3d 22 7c a6     =..]...-..|Z="|.
    9b2f:	0a 67 af 35 32 11 0a c2 d6 08 fc 7d a9 fe 83 a2     .g.52......}....
    9b3f:	56 a7 0c 7c 62 75 32 c2 27 d6 e9 f0 f1 97 aa 57     V..|bu2.'......W
    9b4f:	0f a3 62 7f f5 98 30 2a 11 88 f0 d7 09 68 73 5d     ..b...0*.....hs]
    9b5f:	c2 f5 98 a4 f2 8a f0 17 a8 3d 07 11 8c 30 98 a2     .........=...0..
    9b6f:	fd 73 56 97 00 54 29 50 3d 80 a2 fd ab 36 7f 95     .sV..T)P=....6..
    9b7f:	02 f2 56 37 a4 a0 d6 df 63 02 32 11 a2 f4 08 63     ..V7....c.2....c
    9b8f:	f5 64 3d 0f fa a5 29 08 fc 89 56 0f 63 65 2a 6c     .d=...)...V.ce*l
    9b9f:	3d 50 d7 f3 a0 5f 9a c2 50 a6 c8 4d d7 33 a3 97     =P..._..P..M.3..
    9baf:	29 0c 11 03 a0 fe 95 0c 6a d6 d0 37 24 69 d6 20     ).......j..7$i. 
    9bbf:	7f 53 09 a3 26 37 5f 42 89 d6 00 11 70 df c3 e8     .S..&7_B....p...
    9bcf:	95 72 03 63 a5 6a 3d 29 fc 37 8c d5 3d aa a2 d6     .r.c.j=).7..=...
    9bdf:	93 c2 7f 03 d5 40 f5 98 50 aa 89 fc 37 00 11 08     .....@..P...7...
    9bef:	8a 0a 1f 5a 0f 9f d8 5f 5d 0a 63 69 02 f5 f3 a9     ...Z..._].ci....
    9bff:	26 00 11 2a 68 5d f6 08 c2 55 36 60 01 da 73 d9     &..*h]...U6`..s.
    9c0f:	0b 7c 8f 8a 55 c0 27 96 0d 11 6a ca ff 5c 81 6a     .|..U.'...j..\.j
    9c1f:	aa f5 0f f2 df 40 a9 56 82 fc cf 85 6a a5 22 7f     .....@.V....j.".
    9c2f:	23 ff 0d a9 2a 96 35 f2 37 f2 73 a1 2a 1a a0 59     #...*.5.7.s.*..Y
    9c3f:	ff ff cf a9 2a 58 aa c0 5f a0 59 ff ff f3 89 85     ....*X.._.Y.....
    9c4f:	a6 26 03 a2 59 ff ff 37 63 92 a6 a6 0c a0 59 ff     .&..Y..7c.....Y.
    9c5f:	ff 37 72 aa 82 a2 cd 75 29 ff 7f 43 aa 82 1a 5a     .7r....u)..C...Z
    9c6f:	ff ff 0f 11 0f 3f 40 95 5a 0a ff 0d 50 a9 20 5c     .....?@.Z...P. \
    9c7f:	05 6c f5 83 68 a5 f5 00 f2 56 3f f0 75 09 a9 5a     .l..h....V?.u..Z
    9c8f:	0a 5b 0f 3f f0 75 aa 5a 0a ff 0d 94 0a c2 55 5a     .[.?.u.Z......UZ
    9c9f:	4f 0a ff 0d 00 11 95 c2 ff 73 a1 aa aa 56 95 35     O........s...V.5
    9caf:	00 20 ff ff cf 85 6a a9 8c 9a f2 ff ff 73 aa 96     . ....j......s..
    9cbf:	9a 35 c0 a8 29 ff ff df c8 a9 96 5a 3d 03 29 fc     .5..)......Z=.).
    9ccf:	cf a9 aa 9a f5 0d 94 0a fc ff bf 6a 95 59 09 00     ...........j.Y..
    9cdf:	94 0a fc ff 37 72 6a a9 a9 d5 f3 25 00 94 0a fc     ....7rj....%....
    9cef:	ff 0f 11 2a d4 0f 00 9a fc 55 a5 82 d6 8c aa 2a     ...*.....U.....*
    9cff:	f6 ff 57 bd 25 00 a3 aa fa ff 57 a5 dc 00 a3 aa     ..W.%.....W.....
    9d0f:	c9 f8 f7 3f 0c 5f 55 aa 58 5d 02 30 aa 8a fd ff     ...?._U.X].0....
    9d1f:	c3 60 55 00 fc 55 a5 8a d5 25 00 a3 aa fe ff 03     .`U..U...%......
    9d2f:	68 2d 7c 55 00 fc 55 a5 8a d5 25 00 a3 6a 32 7e     h-|U..U...%..j2~
    9d3f:	ff 83 32 57 05 c0 5f 55 aa 58 5d 02 30 aa 62 ff     ..2W.._U.X].0.b.
    9d4f:	7f fd a5 9a 00 a3 aa ff 3f c0 5f 8a 55 c0 5f a5     ........?._.U._.
    9d5f:	fa 5f aa 02 a3 9a 8c f7 3f fc 28 56 05 fc 55 aa     ._......?.(V..U.
    9d6f:	ff a5 2a 30 aa 02 11 22 f0 3f 7c 97 fe a5 f4 a0     ..*0...".?|.....
    9d7f:	83 68 a9 66 0d f2 af 56 3d 43 7a 29 20 6f fd fd     .h.f...V=Cz) o..
    9d8f:	f0 a5 2a 6a 3d 29 7c d3 ff a5 00 11 f7 fc df bd     ..*j=)|.........
    9d9f:	22 5c 1c c2 57 81 a4 aa a6 fc ff df 40 a9 aa 60     "\..W.......@..`
    9daf:	67 ca ff ff 5c a8 aa 2a cf d9 ff df 90 aa 0a 80     g...\..*........
    9dbf:	55 f6 ff cf a9 aa 00 6a ca 3f 57 d9 ff 37 72 aa     U......j.?W..7r.
    9dcf:	0a a0 f6 5c d9 ff 73 aa 0a 68 d9 ff ff aa 0a a8     ...\..s..h......
    9ddf:	f6 73 d9 ff 8d 9c aa aa 80 fc 73 95 fd df 90 aa     .s........s.....
    9def:	a6 09 80 fc 73 95 fd cf a9 6a a6 35 20 ff ff ab     ....s....j.5 ...
    9dff:	5a 8a d6 20 ff 7f 23 a7 5a 26 5a 03 f2 ff 73 aa     Z.. ..#.Z&Z...s.
    9e0f:	65 5d 02 20 ff af 5a d6 80 fc 8d 9c 5a a9 7d 03     e]. ..Z.....Z.}.
    9e1f:	c8 3f 11 8a 56 8d 5a fd a4 02 5f a7 aa 18 ff f0     .?..V.Z..._.....
    9e2f:	c0 27 56 75 aa 62 fc f0 23 7c 62 55 a7 aa ff 33     .'Vu.b..#|bU...3
    9e3f:	20 7c 62 55 a7 9a 8c fe f0 f0 a7 58 75 aa 18 0f      |bU.......Xu...
    9e4f:	0f 0c 56 55 a7 2a 0f 0f c0 57 a7 58 75 6a 32 fa     ..VU.*...W.Xuj2.
    9e5f:	f0 00 fc 7f a5 2a 56 75 6a 32 0e 0f ff 57 5a a5     .....*Vuj2...WZ.
    9e6f:	00 30 62 55 a7 62 ff f5 00 50 0f a8 62 55 a7 ca     .0bU.b...P..bU..
    9e7f:	f0 00 fc 17 5f aa 62 55 a7 03 5a 01 0f ff a0 62     ...._.bU..Z....b
    9e8f:	55 75 2a f0 00 ff 77 aa 62 55 a7 00 11 7d 56 a5     Uu*...w.bU...}V.
    9e9f:	dc 50 5a 23 7c 27 70 ff cf 85 aa 6a 8d fc 3f 17     .PZ#|'p....j..?.
    9eaf:	aa aa f6 8d fc ff 9c aa 9a 5a 83 fc ff f3 89 05     .........Z......
    9ebf:	c3 83 56 9d 18 03 2a 9a 56 97 f2 ff 73 c0 23 56     ..V...*.V...s.#V
    9ecf:	a0 a2 69 75 ff 33 00 76 55 aa 8a c0 f3 3d 57 a0     ..iu.3.vU....=W.
    9edf:	a2 29 da 5c 75 29 ff ff aa 8a c0 83 9d 58 75 29     .).\u).......Xu)
    9eef:	ff bf aa 2a 37 80 dc 83 9d 58 65 ff 0f 11 f7 ab     ...*7....Xe.....
    9eff:	88 0a 7f 65 7f c3 58 8a b0 75 0f 0c 20 c2 57 55     ...e..X..u.. .WU
    9f0f:	9d 09 03 80 a2 fd c2 57 55 d9 00 2a 20 f7 83 66     .......WU..* ..f
    9f1f:	2f 7c 55 95 35 72 a9 08 68 f6 c2 57 f6 37 a4 08     /|U.5r..h..W.7..
    9f2f:	08 58 65 2f 7c 65 7f 33 00 2a 8a 55 f6 c2 57 f6     .Xe/|e.3.*.U..W.
    9f3f:	f7 00 c0 af d6 4f 2a 7c a7 83 56 05 3c 62 15 c0     .....O*|..V.<b..
    9f4f:	73 7c aa a9 02 7f 55 fc 08 9f 58 a7 18 11 6a a9     s|....U...X...j.
    9f5f:	0a ff ff cf a9 aa 2a 30 58 05 5a fd ff 7f 23 a7     ......*0X.Z...#.
    9f6f:	2a a0 62 05 5a fd ff 3f a7 2a a0 c2 99 d5 3f a0     *.b.Z..?.*....?.
    9f7f:	62 05 5a fd ff ff aa aa 2a da ff ff df c8 a9 02     b.Z.....*.......
    9f8f:	0a a0 55 05 5a fd ff 3f 11 4a 8f a8 62 f1 7f c9     ..U.Z..?.J..b...
    9f9f:	a8 58 fc 00 da 5c 75 c9 a8 62 ff f0 28 da 5c 75     .X...\u..b..(.\u
    9faf:	c9 a8 68 73 f1 f7 c3 33 aa 2a da 5c 75 c9 a8 d8     ..hs...3.*.\u...
    9fbf:	7f 3f 48 3f a8 2a da 5c 75 c9 a8 68 73 0f 7f cf     .?H?.*.\u..hs...
    9fcf:	a8 2a da 5c 75 c9 a8 fe f7 37 c0 a8 2a da 5c 75     .*.\u....7..*.\u
    9fdf:	c9 a8 7f ff 83 f0 89 d5 a9 9a 8c 02 11 65 cf f0     .............e..
    9fef:	a4 02 54 29 c8 73 05 5a fd 3d d8 89 9d 0e 5a 36     ..T).s.Z.=....Z6
    9fff:	20 a0 30 83 a6 5a f5 ff 73 05 5a fd 3d d8 89 9d      .0..Z..s.Z.=...
    a00f:	0e 5a a0 fe a5 22 50 dd 0f 02 0a 33 68 aa 55 ff     .Z..."P....3h.U.
    a01f:	3f 57 a0 d5 df 83 9d d8 e9 20 a0 6a f5 ff 3d d8     ?W....... .j..=.
    a02f:	89 9d 20 a0 aa 36 d7 25 20 ff 73 05 5a fd 3d 58     .. ..6.% .s.Z.=X
    a03f:	28 a0 0a 33 68 15 a0 5a f5 ff 73 05 5a fd 3d d8     (..3h..Z..s.Z.=.
    a04f:	89 21 a0 0a a0 cd 15 a0 5a f5 ff 73 05 5a fd 3d     .!......Z..s.Z.=
    a05f:	d8 89 02 aa aa 70 f6 ff 73 05 5a fd 73 2a c0 83     .....p..s.Z.s*..
    a06f:	aa 83 56 01 aa 75 f7 3f 57 a0 d5 bf 02 d0 83 fe     ..V..u.?W.......
    a07f:	97 3a 68 9d d5 33 94 29 00 fc 97 3a 68 55 c0 5f     .:h..3.)...:hU._
    a08f:	99 2a a0 d6 fd 2f c0 5f 99 2a 30 57 a0 d5 2f 00     .*.../._.*0W../.
    a09f:	a8 83 56 01 aa 75 f7 3f 57 a0 d5 03 11 0c f0 7f     ..V..u.?W.......
    a0af:	3f 67 8f aa 70 f6 bf 2a aa 02 5f a0 d5 3f 67 3f     ?g..p..*.._..?g?
    a0bf:	67 a3 82 88 05 5a fd 73 f6 af a2 2a cc 85 d6 3f     g....Z.s...*...?
    a0cf:	67 df 83 9d a9 fe 83 a2 26 ff 7d a9 a6 c0 80 d6     g.......&.}.....
    a0df:	3f 67 2f 6a 56 cf 3f 83 29 6a d6 ff aa 02 9a f2     ?g/jV.?.)j......
    a0ef:	ff 73 f6 73 2a 6a d6 d7 c8 ab 02 5a 65 0d 80 fc     .s.s*j.....Ze...
    a0ff:	3f 67 bf a2 aa 6d d5 03 c8 3f 67 2f 6a d6 97 3a     ?g...m...?g/j..:
    a10f:	80 56 d6 00 c8 ff 73 36 11 2a d4 0f 00 9a fc 55     .V....s6.*.....U
    a11f:	a5 82 d6 8c aa 2a f6 ff 57 bd 25 00 a3 aa fa ff     .....*..W.%.....
    a12f:	57 a5 dc 00 a3 aa c9 f8 f7 3f 0c 5f 55 aa 58 5d     W........?._U.X]
    a13f:	02 30 aa 8a fd ff c3 60 55 00 fc 55 a5 8a d5 25     .0.....`U..U...%
    a14f:	00 a3 aa fe ff 03 68 2d 7c 55 00 fc 55 a5 8a d5     ......h-|U..U...
    a15f:	25 00 a3 6a 32 7e ff 83 32 57 05 c0 5f 55 aa 58     %..j2~..2W.._U.X
    a16f:	5d 02 30 aa 62 ff 7f fd a5 9a 00 a3 aa ff 3f c0     ].0.b.........?.
    a17f:	5f 8a 55 c0 5f a5 fa 5f aa 02 a3 9a 8c f7 3f fc     _.U._.._......?.
    a18f:	28 56 05 fc 55 aa ff a5 2a 30 aa 02 11 5d 5e c6     (V..U...*0...]^.
    a19f:	60 0c a6 aa 62 f1 ff 7f 29 3d a8 aa 26 fc fd d7     `...b...)=..&...
    a1af:	8c aa 8a c5 ff 7f 95 02 a3 aa 62 ff 7f d5 c0 a8     ..........b.....
    a1bf:	aa c9 f8 fd 7f 55 29 00 a3 aa 09 df 7f 55 0a 50     .....U)......U.P
    a1cf:	f5 00 a8 8a fd 57 29 37 50 f5 00 a8 ea 7f 95 d6     .....W)7P.......
    a1df:	20 37 50 f5 00 a8 26 e3 fd 57 d5 00 8c aa 0a 11      7P...&..W......
    a1ef:	02 a3 57 3d 26 50 df a3 29 30 5f a0 a9 cd f3 65     ..W=&P..)0_....e
    a1ff:	29 08 bf 5a 23 9f 95 20 37 72 d5 a3 09 5c cf a7     )..Z#.. 7r...\..
    a20f:	26 00 11 c2 cf f0 f7 7f 59 5a 9d aa ca ff 03 5f     &.......YZ....._
    a21f:	0e 5a 9d aa f2 3f 8f 58 a7 aa fe 3f f0 30 a8 8a     .Z...?.X...?.0..
    a22f:	5a d6 a8 d6 fd 7c 3f 77 62 9d aa fc 83 8a f6 3f     Z....|?wb......?
    a23f:	77 62 a7 aa ff 83 aa 2a c2 7f 81 6a dd ff 3f 77     wb.....*...j..?w
    a24f:	62 9d 2a 3f f0 30 a8 8a 5a 15 a8 d6 fd ff 73 27     b.*?.0..Z.....s'
    a25f:	76 aa fe 03 0f 83 6a ea 83 5a 15 a8 d6 fd ff 73     v.....j..Z.....s
    a26f:	27 d6 a9 3c f0 c0 a8 a6 0a 7f a7 3e a8 55 81 6a     '..<.......>.U.j
    a27f:	dd ff 3f 77 62 a7 fa 03 0f a0 d6 2b fc 55 d6 00     ..?wb......+.U..
    a28f:	8c 6a aa f0 77 ea 83 5a 15 a8 d6 fd ff 73 27 d6     .j..w..Z.....s'.
    a29f:	29 03 0f 2a da bf c2 5f 65 0d c0 a8 a6 0a 7f a7     )..*..._e.......
    a2af:	3e a8 55 81 6a dd ff 3f 77 62 a7 3e f0 a0 5a f6     >.U.j..?wb.>..Z.
    a2bf:	73 27 d6 09 e0 0f aa 65 cf 75 3a f0 00 76 2a 56     s'.....e.u:..v*V
    a2cf:	f6 73 05 a8 2a 3c 57 f6 5c 01 0a 80 96 3d 57 f6     .s..*<W.\....=W.
    a2df:	5c 27 a0 a0 aa 65 ff ff 73 81 0a 80 6a 5d a5 02     \'...e..s...j]..
    a2ef:	ff 73 65 cf 05 11 d6 97 3e 68 01 7c 85 d6 2b 6a     .se.....>h.|..+j
    a2ff:	cd ab 7c c3 97 ca 3c 68 65 a3 36 cf 23 16 11 50     ..|...<he.6.#..P
    a30f:	d6 d0 f7 a8 26 a3 62 55 f6 80 f0 df ff f7 a8 aa     ....&.bU........
    a31f:	26 a3 62 55 36 00 ff 3d 8c 82 d6 65 7f 8f 6a 32     &.bU6..=...e..j2
    a32f:	2a 56 9d 18 0c ff 20 5c 65 7f 8f 6a 32 2a 56 d9     *V.... \e..j2*V.
    a33f:	83 f0 df 03 62 05 5f 69 32 2a 56 05 f0 0f a0 f6     ....b._i2*V.....
    a34f:	5c 05 5f 69 32 2a 56 d9 00 ff f0 7f 8a 05 5a 7d     \._i2*V.......Z}
    a35f:	8f 6a 32 2a 56 27 c6 f0 df 3f 8c 2a 56 f0 95 26     .j2*V'...?.*V..&
    a36f:	a3 62 15 11 d6 3d aa c2 9f dd a3 0a 08 f2 7c 56     .b...=........|V
    a37f:	9d 0a c0 5c 65 3d 2a 0f 62 f1 a5 df f5 0c a2 df     ...\e=*.b.......
    a38f:	65 0a a2 f0 d5 99 30 0e 7c 68 d5 f5 0c a2 83 56     e.....0.|h.....V
    a39f:	d6 a3 cc df a3 3a 68 d5 e9 f7 c0 a8 83 56 9d 09     .....:h......V..
    a3af:	5f cf f7 a8 80 6a 5d 0f 8c 3a 68 d5 99 0c fc df     _....j]..:h.....
    a3bf:	f3 a9 9a 8c 3a 68 d5 79 cf 7f 8f aa 80 6a 5d 0f     ....:h.y.....j].
    a3cf:	8c 3a 68 55 e7 cf 57 c3 a8 80 6a 5d 0f 8c 3a 68     .:hU..W...j]..:h
    a3df:	55 f7 fc 4f aa f0 f3 a9 9a 8c 3a 68 d5 f5 fc d5     U..O......:h....
    a3ef:	3d 02 a4 0a 3f 9f aa c9 a8 83 56 fc 57 5f dd 00     =...?.....V.W_..
    a3ff:	a4 0a 3f 9f aa c9 a8 83 16 11 97 fd 7f 93 25 83     ..?...........%.
    a40f:	f6 a5 22 dd 03 2a da ff 2b 00 5f 0e 5a 36 60 5d     .."..*..+._.Z6`]
    a41f:	29 c2 73 05 6a dd af 96 fd 0d 29 c2 37 02 aa 82     ).s.j.....).7...
    a42f:	96 75 ff 5c d9 df 90 22 a8 5a 4f 0a ff 2f c2 5f     .u.\...".ZO../._
    a43f:	a9 66 22 ff bf aa 8a f0 ff 73 05 2a a6 c2 87 d6     .f"......s.*....
    a44f:	ff 73 a1 a2 98 fd 3f 07 11 d7 ff 20 c2 6b bd c2     .s....?.... .k..
    a45f:	67 dd 03 00 a8 d6 25 a3 2a 16 ff c3 7f 55 95 22     g.....%.*....U."
    a46f:	02 a3 6a c2 df 5f 67 02 a3 8a c5 3f fc 57 a9 09     ..j.._g....?.W..
    a47f:	a3 2a f6 ff 55 5d aa 02 3f fc 57 29 c2 98 30 aa     .*..U]..?.W)..0.
    a48f:	c9 f8 fd f5 a7 26 30 aa 09 df 5f d5 30 9a 30 2a     .....&0..._.0.0*
    a49f:	16 ff 75 55 2a 94 02 ff 0d a3 09 a3 8a fd 57 d9     ..uU*.........W.
    a4af:	6b fd 00 a3 09 a3 ea ff f5 97 9a 00 a3 26 e3 7d     k............&.}
    a4bf:	95 da d6 83 dc 00 a3 26 dc 57 65 09 f2 0d 30 aa     .......&.We...0.
    a4cf:	00 11 5a 65 0f 82 9a 02 0f df 55 5d ca 8f 02 20     ..Ze......U]... 
    a4df:	5a 87 5a 3d 2f 08 df 55 5d ca f3 cc a8 fe 65 2a     Z.Z=/..U].....e*
    a4ef:	28 08 df 55 5d ca 8d bc 02 8f 99 82 f0 5d d5 a5     (..U]........]..
    a4ff:	dc c8 82 9a f2 2f 08 df 55 5d ca 8d 00 3c 58 27     ...../..U]...<X'
    a50f:	56 65 03 f0 0f 8a 75 62 55 a6 30 a8 f0 87 5a ff     Ve....ubU.0...Z.
    a51f:	82 f0 5d 15 68 59 cf 56 8a bc f5 a0 30 68 d6 02     ..].hY.V....0h..
    a52f:	7f 99 bd 30 58 d9 00 3f ff 8f a9 f0 9d 2a 56 01     ...0X..?.....*V.
    a53f:	11 ff 55 aa ff 95 30 6a 2d fc 95 30 7a 29 30 9a     ..U...0j-..0z)0.
    a54f:	96 fd 2f fc 95 30 7a 29 8c 5e a9 26 f2 0d 54 3f     ../..0z).^.&..T?
    a55f:	80 a0 5a 95 dd c8 0d f5 c3 0f 1c 9f 68 f5 30 7a     ..Z.........h.0z
    a56f:	a5 0a 0a ff 15 7c a5 8a c5 97 aa 26 f2 4d 3f fc     .....|.....&.M?.
    a57f:	8f 83 d6 a9 97 02 63 f2 f5 c0 75 aa 97 c2 a0 dd     ......c...u.....
    a58f:	0f a0 5a f0 df 0f d6 29 d6 a9 97 02 fd 00 aa 75     ..Z....).......u
    a59f:	fd c0 c3 60 d5 29 d6 a9 97 02 fd c0 03 a8 3d 57     ...`.)........=W
    a5af:	9d 62 9d 7a 29 fc 00 8a fc 73 d5 29 d6 a9 0f a0     .b.z)....s.)....
    a5bf:	2a f7 60 27 16 c8 ff 73 d5 29 d6 29 11 68 0d 20     *.`'...s.).).h. 
    a5cf:	a7 c2 5c 68 3d 77 09 57 97 09 30 28 28 e3 5d fd     ..\h=w.W..0((.].
    a5df:	80 9a c2 d9 5c 68 3d 20 a2 cd d9 a8 75 8b f0 d7     ....\h= ....u...
    a5ef:	97 42 8a f0 df 95 c2 5c 20 da 9c cd f1 57 56 f7     .B.....\ ....WV.
    a5ff:	a9 09 c8 0d 65 5a 37 80 dc 74 3f d8 69 2a 7c a7     ....eZ7..t?.i*|.
    a60f:	09 c8 55 aa f2 fd a0 d9 37 d0 83 26 99 2a 9c cd     ..U.....7..&.*..
    a61f:	d9 7f 03 00 11 08 a2 2a f0 05 5a dd e3 df 95 42     .......*..Z....B
    a62f:	3d a0 22 f0 57 56 3d e0 95 02 a3 57 a9 d0 fd 63     =.".WV=....W...c
    a63f:	02 95 72 43 0f 02 a8 3d 57 80 aa fd 73 01 11 57     ..rC...=W...s..W
    a64f:	d7 f7 5f 5f a2 8a c5 3f a0 02 d5 f3 0f 0c a6 6a     ..__...?.......j
    a65f:	59 3d ff c0 58 a5 9c ca 55 3d 26 20 5c 75 2a 16     Y=..X...U=& \u*.
    a66f:	3f a0 02 83 55 f6 73 75 aa d8 3f a0 a2 c2 6b fd     ?...U.su..?...k.
    a67f:	30 58 65 3f 57 a7 29 5c 3c a0 a2 5a 23 bf c2 5f     0Xe?W.)\<..Z#.._
    a68f:	f6 73 75 9a c2 d9 1c 03 2a a0 5a 97 72 23 bf c2     .su.....*.Z.r#..
    a69f:	5f f6 73 75 9a c2 d9 3c a0 02 0a 62 55 97 72 23     _.su...<...bU.r#
    a6af:	bf c2 5f f6 73 75 2a f6 03 2a 00 2a 56 75 29 37     .._.su*..*.*Vu)7
    a6bf:	f2 2b fc 65 3f 57 a7 a2 cd 3d c0 0f 0c 56 a0 aa     .+.e?W...=...V..
    a6cf:	2a 56 75 29 37 f2 2b fc 65 3f 57 a7 fa 03 fc c0     *Vu)7.+.e?W.....
    a6df:	a8 aa 2a 56 75 29 37 f2 2b fc 65 3f 57 a7 3e 00     ..*Vu)7.+.e?W.>.
    a6ef:	df c0 a8 aa 2a 56 75 29 37 f2 2b fc 65 3f 57 a7     ....*Vu)7.+.e?W.
    a6ff:	00 11 3f 00 00 aa 68 ff 37 f2 59 69 a5 00 54 f5     ..?...h.7.Yi..T.
    a70f:	c0 80 8a f6 3f 97 0d aa 3d 77 55 95 0a 03 5b 59     ....?...=wU...[Y
    a71f:	3f 00 80 f0 89 9d 57 5f 0e aa 95 f5 03 00 20 57     ?.....W_...... W
    a72f:	55 35 02 5f 26 00 c8 55 df 0f a6 5e 0a 00 55 ff     U5._&..U...^..U.
    a73f:	a7 a8 f5 8c 5e 0a 80 68 56 65 03 00 7f 57 5a 0e     ....^..hVe...WZ.
    a74f:	3c 88 66 95 35 00 8c 68 ff 66 55 0f 3c 88 b6 56     <.f.5..h.fU.<..V
    a75f:	f5 f0 55 a9 30 26 00 8c 68 ff 69 55 0f ff cf 0c     ..U.0&..h.iU....
    a76f:	5a 9d ea a5 00 55 57 0f c3 a8 5e 0a 00 11           Z....UW...^...

0000a77d <strIntro1>:
    a77d:	55 5a 45 42 4f 58 00                                UZEBOX.

0000a784 <strEnd1>:
    a784:	57 4f 57 34 34 33 33 33 59 4f 55 33 44 49 44 33     WOW44333YOU3DID3
    a794:	49 54 34 34 00                                      IT44.

0000a799 <strEnd2>:
    a799:	49 46 33 59 4f 55 33 44 49 44 33 4e 4f 54 33 55     IF3YOU3DID3NOT3U
    a7a9:	53 45 33 45 4d 55 5a 45 00                          SE3EMUZE.

0000a7b2 <strEnd3>:
    a7b2:	54 48 45 4e 33 47 52 45 41 54 33 4a 4f 42 34 34     THEN3GREAT3JOB44
    a7c2:	34 00                                               4.

0000a7c4 <strEnd4>:
    a7c4:	59 4f 55 33 41 52 45 33 4c 49 4b 45 4c 59 33 54     YOU3ARE3LIKELY3T
    a7d4:	48 45 33 4f 4e 4c 59 00                             HE3ONLY.

0000a7dc <strEnd5>:
    a7dc:	50 45 52 53 4f 4e 33 54 4f 33 45 56 45 52 33 53     PERSON3TO3EVER3S
    a7ec:	45 45 33 54 48 49 53 34 00                          EE3THIS4.

0000a7f5 <strEnd6>:
    a7f5:	43 4f 4e 53 49 44 45 52 33 59 4f 55 52 53 45 4c     CONSIDER3YOURSEL
    a805:	46 33 54 48 45 33 42 45 53 54 00                    F3THE3BEST.

0000a810 <strEnd7>:
    a810:	53 4f 4b 4f 42 41 4e 33 57 4f 52 4c 44 33 50 4c     SOKOBAN3WORLD3PL
    a820:	41 59 45 52 33 45 56 45 52 34 00                    AYER3EVER4.

0000a82b <strEnd8>:
    a82b:	54 48 41 4e 4b 53 33 46 4f 52 33 50 4c 41 59 49     THANKS3FOR3PLAYI
    a83b:	4e 47 33 41 4c 4c 33 54 48 45 00                    NG3ALL3THE.

0000a846 <strEnd9>:
    a846:	57 41 59 33 54 48 52 4f 55 47 48 34 33 53 45 52     WAY3THROUGH43SER
    a856:	49 4f 55 53 4c 59 33 54 48 41 4e 4b 53 00           IOUSLY3THANKS.

0000a864 <strEnd10>:
    a864:	53 4f 52 52 59 33 46 4f 52 33 54 48 45 33 4c 41     SORRY3FOR3THE3LA
    a874:	4d 45 33 45 4e 44 49 4e 47 00                       ME3ENDING.

0000a87e <strEnd11>:
    a87e:	49 33 41 4d 33 4a 55 53 54 33 4f 55 54 33 4f 46     I3AM3JUST3OUT3OF
    a88e:	33 54 49 4d 45 33 4e 4f 57 00                       3TIME3NOW.

0000a898 <strEnd12>:
    a898:	43 52 45 41 54 45 44 33 42 59 33 4c 45 45 33 57     CREATED3BY3LEE3W
    a8a8:	45 42 45 52 00                                      EBER.

0000a8ad <__c.3832>:
    a8ad:	35 44 45 4d 4f 35 00                                5DEMO5.

0000a8b4 <__c.3821>:
    a8b4:	35 44 45 4d 4f 35 00                                5DEMO5.

0000a8bb <__c.3324>:
    a8bb:	53 54 41 47 45 33 33 33 33 4a 41 50 41 4e 00        STAGE3333JAPAN.

0000a8ca <__c.3322>:
    a8ca:	53 54 41 47 45 33 33 33 33 53 4f 55 54 48 50 4f     STAGE3333SOUTHPO
    a8da:	4c 45 00                                            LE.

0000a8dd <__c.3320>:
    a8dd:	53 54 41 47 45 33 33 33 33 43 48 49 4e 41 00        STAGE3333CHINA.

0000a8ec <__c.3318>:
    a8ec:	53 54 41 47 45 33 33 33 33 45 47 59 50 54 00        STAGE3333EGYPT.

0000a8fb <__c.3316>:
    a8fb:	53 54 41 47 45 33 33 33 33 41 4d 45 52 49 43 41     STAGE3333AMERICA
	...

0000a90c <__c.3314>:
    a90c:	36 00                                               6.

0000a90e <__c.3312>:
    a90e:	35 00                                               5.

0000a910 <__c.3310>:
    a910:	36 00                                               6.

0000a912 <__c.3308>:
    a912:	35 00                                               5.

0000a914 <__c.3306>:
    a914:	36 00                                               6.

0000a916 <__c.3304>:
    a916:	35 00                                               5.

0000a918 <__c.3302>:
    a918:	36 00                                               6.

0000a91a <__c.3300>:
    a91a:	35 00                                               5.

0000a91c <__c.3256>:
    a91c:	53 54 41 47 45 33 33 33 33 43 4c 45 41 52 45 44     STAGE3333CLEARED
	...

0000a92d <__c.3247>:
    a92d:	50 55 53 48 45 53 35 00                             PUSHES5.

0000a935 <__c.3245>:
    a935:	4d 4f 56 45 53 33 35 00                             MOVES35.

0000a93d <__c.3243>:
    a93d:	43 50 55 33 42 45 53 54 00                          CPU3BEST.

0000a946 <__c.3241>:
    a946:	4f 4b 34 34 00                                      OK44.

0000a94b <__c.3239>:
    a94b:	47 52 45 41 54 34 34 34 00                          GREAT444.

0000a954 <__c.3237>:
    a954:	35 00                                               5.

0000a956 <__c.3235>:
    a956:	50 55 53 48 45 53 00                                PUSHES.

0000a95d <__c.3233>:
    a95d:	35 00                                               5.

0000a95f <__c.3231>:
    a95f:	4d 4f 56 45 53 00                                   MOVES.

0000a965 <__c.3163>:
    a965:	4f 46 46 00                                         OFF.

0000a969 <__c.3153>:
    a969:	51 55 49 54 00                                      QUIT.

0000a96e <__c.3151>:
    a96e:	47 46 58 00                                         GFX.

0000a972 <__c.3149>:
    a972:	42 47 4d 00                                         BGM.

0000a976 <__c.3147>:
    a976:	53 4f 4c 56 45 00                                   SOLVE.

0000a97c <__c.3145>:
    a97c:	47 49 56 45 55 50 00                                GIVEUP.

0000a983 <__c.3143>:
    a983:	52 45 54 52 59 00                                   RETRY.

0000a989 <__c.3141>:
    a989:	42 41 43 4b 00                                      BACK.

0000a98e <__c.3055>:
    a98e:	43 4f 4e 54 49 4e 55 45 00                          CONTINUE.

0000a997 <__c.3053>:
    a997:	4e 45 57 33 47 41 4d 45 00                          NEW3GAME.

0000a9a0 <__ctors_end>:
    a9a0:	11 24       	eor	r1, r1
    a9a2:	1f be       	out	0x3f, r1	; 63
    a9a4:	cf ef       	ldi	r28, 0xFF	; 255
    a9a6:	d0 e1       	ldi	r29, 0x10	; 16
    a9a8:	de bf       	out	0x3e, r29	; 62
    a9aa:	cd bf       	out	0x3d, r28	; 61

0000a9ac <wdt_init>:
void Initialize(void) __attribute__((naked)) __attribute__((section(".init8")));


void wdt_init(void)
{
    MCUSR = 0;
    a9ac:	14 be       	out	0x34, r1	; 52
    wdt_disable();
    a9ae:	88 e1       	ldi	r24, 0x18	; 24
    a9b0:	0f b6       	in	r0, 0x3f	; 63
    a9b2:	f8 94       	cli
    a9b4:	80 93 60 00 	sts	0x0060, r24
    a9b8:	10 92 60 00 	sts	0x0060, r1
    a9bc:	0f be       	out	0x3f, r0	; 63

0000a9be <__do_copy_data>:
    a9be:	11 e0       	ldi	r17, 0x01	; 1
    a9c0:	a0 e0       	ldi	r26, 0x00	; 0
    a9c2:	b1 e0       	ldi	r27, 0x01	; 1
    a9c4:	ee ed       	ldi	r30, 0xDE	; 222
    a9c6:	fe ee       	ldi	r31, 0xEE	; 238
    a9c8:	02 c0       	rjmp	.+4      	; 0xa9ce <.do_copy_data_start>

0000a9ca <.do_copy_data_loop>:
    a9ca:	05 90       	lpm	r0, Z+
    a9cc:	0d 92       	st	X+, r0

0000a9ce <.do_copy_data_start>:
    a9ce:	a2 30       	cpi	r26, 0x02	; 2
    a9d0:	b1 07       	cpc	r27, r17
    a9d2:	d9 f7       	brne	.-10     	; 0xa9ca <.do_copy_data_loop>

0000a9d4 <__do_clear_bss>:
    a9d4:	1d e0       	ldi	r17, 0x0D	; 13
    a9d6:	a0 e2       	ldi	r26, 0x20	; 32
    a9d8:	b1 e0       	ldi	r27, 0x01	; 1
    a9da:	01 c0       	rjmp	.+2      	; 0xa9de <.do_clear_bss_start>

0000a9dc <.do_clear_bss_loop>:
    a9dc:	1d 92       	st	X+, r1

0000a9de <.do_clear_bss_start>:
    a9de:	a8 39       	cpi	r26, 0x98	; 152
    a9e0:	b1 07       	cpc	r27, r17
    a9e2:	e1 f7       	brne	.-8      	; 0xa9dc <.do_clear_bss_loop>

0000a9e4 <Initialize>:
	io_set(OCR1BL,0x4f),		//lo8(0x36e-31) eq pulse pulse restore
	io_set(OCR1BH,0x03)			//hi8(0x36e-31)	
};


void Initialize(void){
    a9e4:	0e 94 5a 59 	call	0xb2b4	; 0xb2b4 <isEepromFormatted>
    a9e8:	88 23       	and	r24, r24
    a9ea:	11 f4       	brne	.+4      	; 0xa9f0 <Initialize+0xc>
    a9ec:	0e 94 2a 5a 	call	0xb454	; 0xb454 <FormatEeprom>
	int i;

	if(!isEepromFormatted()) FormatEeprom();

	cli();
    a9f0:	f8 94       	cli
		mix_bank=0;
	#endif
	
	#if MIXER_CHAN4_TYPE == 0
		//initialize LFSR		
		tr4_barrel_lo=1;
    a9f2:	91 e0       	ldi	r25, 0x01	; 1
    a9f4:	90 93 d6 0c 	sts	0x0CD6, r25
		tr4_barrel_hi=1;		
    a9f8:	90 93 d7 0c 	sts	0x0CD7, r25
		tr4_params=0b00000001; //15 bits no divider (1)
    a9fc:	90 93 d5 0c 	sts	0x0CD5, r25
		snesMouseEnabled=false;
	#endif

	//silence all sound channels
	for(i=0;i<CHANNELS;i++){
		mixer.channels.all[i].volume=0;
    aa00:	10 92 c2 0c 	sts	0x0CC2, r1
    aa04:	10 92 c8 0c 	sts	0x0CC8, r1
    aa08:	10 92 ce 0c 	sts	0x0CCE, r1
    aa0c:	10 92 d4 0c 	sts	0x0CD4, r1
    aa10:	10 92 da 0c 	sts	0x0CDA, r1
	}
	
	//set sync parameters. starts at odd field, in pre-eq pulses, line 1, vsync flag cleared
	sync_phase=0;
    aa14:	10 92 a0 0c 	sts	0x0CA0, r1
	sync_flags=0;
    aa18:	10 92 a2 0c 	sts	0x0CA2, r1
	sync_pulse=SYNC_PRE_EQ_PULSES+SYNC_EQ_PULSES+SYNC_POST_EQ_PULSES;
    aa1c:	82 e1       	ldi	r24, 0x12	; 18
    aa1e:	80 93 a1 0c 	sts	0x0CA1, r24

	//set rendering parameters
	render_lines_count_tmp=FRAME_LINES;
    aa22:	80 ee       	ldi	r24, 0xE0	; 224
    aa24:	80 93 aa 0c 	sts	0x0CAA, r24
	render_lines_count=FRAME_LINES;
    aa28:	80 93 a8 0c 	sts	0x0CA8, r24
	first_render_line_tmp=FIRST_RENDER_LINE;
    aa2c:	84 e1       	ldi	r24, 0x14	; 20
    aa2e:	80 93 a9 0c 	sts	0x0CA9, r24
	first_render_line=FIRST_RENDER_LINE;
    aa32:	80 93 a7 0c 	sts	0x0CA7, r24

//	joypad1_status_hi=0;
//	joypad2_status_hi=0;
	sound_enabled=1;
    aa36:	90 93 c1 0c 	sts	0x0CC1, r25

	InitializeVideoMode();
    aa3a:	0e 94 98 62 	call	0xc530	; 0xc530 <InitializeVideoMode>
    aa3e:	20 e9       	ldi	r18, 0x90	; 144
    aa40:	30 e0       	ldi	r19, 0x00	; 0
	
	//Initialize I/O registers
	u16 val;
	u8 *ptr;
	for(u8 j=0;j<(sizeof(io_table)>>1);j++){
		val=pgm_read_word(&io_table[j]);
    aa42:	f9 01       	movw	r30, r18
    aa44:	85 91       	lpm	r24, Z+
    aa46:	94 91       	lpm	r25, Z+
		ptr=(u8*)(val&0xff);
		*ptr=val>>8;	
    aa48:	fc 01       	movw	r30, r24
    aa4a:	f0 70       	andi	r31, 0x00	; 0
    aa4c:	90 83       	st	Z, r25
    aa4e:	2e 5f       	subi	r18, 0xFE	; 254
    aa50:	3f 4f       	sbci	r19, 0xFF	; 255
	InitializeVideoMode();
	
	//Initialize I/O registers
	u16 val;
	u8 *ptr;
	for(u8 j=0;j<(sizeof(io_table)>>1);j++){
    aa52:	80 e0       	ldi	r24, 0x00	; 0
    aa54:	2e 3b       	cpi	r18, 0xBE	; 190
    aa56:	38 07       	cpc	r19, r24
    aa58:	a1 f7       	brne	.-24     	; 0xaa42 <Initialize+0x5e>
		val=pgm_read_word(&io_table[j]);
		ptr=(u8*)(val&0xff);
		*ptr=val>>8;	
	}

	sei();
    aa5a:	78 94       	sei
	
	DisplayLogo();
    aa5c:	0e 94 97 62 	call	0xc52e	; 0xc52e <DisplayLogo>
    aa60:	0e 94 f8 76 	call	0xedf0	; 0xedf0 <main>
    aa64:	0c 94 6d 77 	jmp	0xeeda	; 0xeeda <_exit>

0000aa68 <__bad_interrupt>:
    aa68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000aa6c <sub_video_mode3>:
	; Mode 3 with NO scrolling
	;***************************************************	
	sub_video_mode3:

		;wait cycles to align with next hsync
		WAIT r16,36
    aa6c:	0c e0       	ldi	r16, 0x0C	; 12
    aa6e:	0a 95       	dec	r16
    aa70:	f1 f7       	brne	.-4      	; 0xaa6e <sub_video_mode3+0x2>

		;Set ramtiles indexes in VRAM 
		ldi ZL,lo8(ram_tiles_restore);
    aa72:	e8 e3       	ldi	r30, 0x38	; 56
		ldi ZH,hi8(ram_tiles_restore);
    aa74:	fc e0       	ldi	r31, 0x0C	; 12

		ldi YL,lo8(vram)
    aa76:	c0 e2       	ldi	r28, 0x20	; 32
		ldi YH,hi8(vram)
    aa78:	d1 e0       	ldi	r29, 0x01	; 1

		lds r18,free_tile_index
    aa7a:	20 91 69 0d 	lds	r18, 0x0D69


		clr r16
    aa7e:	00 27       	eor	r16, r16

0000aa80 <upd_loop>:
	upd_loop:	
		ldd XL,Z+0
    aa80:	a0 81       	ld	r26, Z
		ldd XH,Z+1
    aa82:	b1 81       	ldd	r27, Z+1	; 0x01
	
		add XL,YL
    aa84:	ac 0f       	add	r26, r28
		adc XH,YH
    aa86:	bd 1f       	adc	r27, r29

		ld r17,X	;currbgtile
    aa88:	1c 91       	ld	r17, X
		std Z+2,r17
    aa8a:	12 83       	std	Z+2, r17	; 0x02

		cp r16,r18
    aa8c:	02 17       	cp	r16, r18
		brsh noov
    aa8e:	08 f4       	brcc	.+2      	; 0xaa92 <noov>
		mov r17,r16
    aa90:	10 2f       	mov	r17, r16

0000aa92 <noov>:
	noov:
		st X,r17
    aa92:	1c 93       	st	X, r17
	
		adiw ZL,3 ;sizeof(ram_tiles_restore)
    aa94:	33 96       	adiw	r30, 0x03	; 3

		inc r16
    aa96:	03 95       	inc	r16
		cpi r16,RAM_TILES_COUNT
    aa98:	0e 31       	cpi	r16, 0x1E	; 30
		brlo upd_loop ;23
    aa9a:	90 f3       	brcs	.-28     	; 0xaa80 <upd_loop>


	#if RAM_TILES_COUNT == 0 
		ldi r16,60-RAM_TILES_COUNT 
	#else
		ldi r16,61-RAM_TILES_COUNT 
    aa9c:	0f e1       	ldi	r16, 0x1F	; 31

0000aa9e <wait_loop>:
	#endif

	wait_loop:
	
		ldi r17,6
    aa9e:	16 e0       	ldi	r17, 0x06	; 6
		dec r17
    aaa0:	1a 95       	dec	r17
		brne .-4
    aaa2:	f1 f7       	brne	.-4      	; 0xaaa0 <wait_loop+0x2>

		dec r16
    aaa4:	0a 95       	dec	r16
		brne wait_loop
    aaa6:	d9 f7       	brne	.-10     	; 0xaa9e <wait_loop>

		lds r2,overlay_tile_table
    aaa8:	20 90 9e 0c 	lds	r2, 0x0C9E
		lds r3,overlay_tile_table+1
    aaac:	30 90 9f 0c 	lds	r3, 0x0C9F
		lds r16,tile_table_lo 
    aab0:	00 91 9a 0c 	lds	r16, 0x0C9A
		lds r17,tile_table_hi
    aab4:	10 91 9b 0c 	lds	r17, 0x0C9B
		movw r12,r16
    aab8:	68 01       	movw	r12, r16
		movw r6,r16
    aaba:	38 01       	movw	r6, r16

		ldi r24,SCREEN_TILES_V
    aabc:	8c e1       	ldi	r24, 0x1C	; 28
		ldi YL,lo8(vram)
    aabe:	c0 e2       	ldi	r28, 0x20	; 32
		ldi YH,hi8(vram)
    aac0:	d1 e0       	ldi	r29, 0x01	; 1
		movw r8,YL	
    aac2:	4e 01       	movw	r8, r28
		clr r0
    aac4:	00 24       	eor	r0, r0

		;load values for overlay if it's activated (overlay_height>0)
		lds r19,overlay_height	
    aac6:	30 91 9d 0c 	lds	r19, 0x0C9D
		cpi r19,0
    aaca:	30 30       	cpi	r19, 0x00	; 0
		
		breq .+2
    aacc:	09 f0       	breq	.+2      	; 0xaad0 <wait_loop+0x32>
		ldi YL,lo8(overlay_vram)
    aace:	c8 e6       	ldi	r28, 0x68	; 104
		
		breq .+2
    aad0:	09 f0       	breq	.+2      	; 0xaad4 <wait_loop+0x36>
		ldi YH,hi8(overlay_vram)
    aad2:	d4 e0       	ldi	r29, 0x04	; 4
		
		breq .+2
    aad4:	09 f0       	breq	.+2      	; 0xaad8 <wait_loop+0x3a>
		mov r24,r19
    aad6:	83 2f       	mov	r24, r19

		breq .+2
    aad8:	09 f0       	breq	.+2      	; 0xaadc <wait_loop+0x3e>
		movw r12,r2
    aada:	61 01       	movw	r12, r2


		ldi r16,SCREEN_TILES_V*TILE_HEIGHT; total scanlines to draw (28*8)
    aadc:	00 ee       	ldi	r16, 0xE0	; 224
		mov r10,r16
    aade:	a0 2e       	mov	r10, r16
		clr r22
    aae0:	66 27       	eor	r22, r22
		ldi r23,TILE_WIDTH ;tile width in pixels
    aae2:	78 e0       	ldi	r23, 0x08	; 8

0000aae4 <next_tile_line>:
	;r12:r13= Main tile table or overlay tile table if overlay_height>0
	;r24	= vertical tiles to draw before reloading vram adress (for overlay)
	;Y      = vram or overlay_ram if overlay_height>0
	;
	next_tile_line:	
		rcall hsync_pulse
    aae4:	7d d2       	rcall	.+1274   	; 0xafe0 <hsync_pulse>

		WAIT r19,250 - AUDIO_OUT_HSYNC_CYCLES + CENTER_ADJUSTMENT + FILL_DELAY
    aae6:	3c e0       	ldi	r19, 0x0C	; 12
    aae8:	3a 95       	dec	r19
    aaea:	f1 f7       	brne	.-4      	; 0xaae8 <next_tile_line+0x4>
    aaec:	00 00       	nop
    aaee:	00 00       	nop

		;***draw line***
		call render_tile_line
    aaf0:	0e 94 a9 55 	call	0xab52	; 0xab52 <render_tile_line>

		WAIT r19,47 + FILL_DELAY - CENTER_ADJUSTMENT	
    aaf4:	3f e0       	ldi	r19, 0x0F	; 15
    aaf6:	3a 95       	dec	r19
    aaf8:	f1 f7       	brne	.-4      	; 0xaaf6 <next_tile_line+0x12>
    aafa:	00 00       	nop
    aafc:	00 00       	nop

		dec r10
    aafe:	aa 94       	dec	r10
		breq frame_end
    ab00:	a9 f0       	breq	.+42     	; 0xab2c <frame_end>
	
		inc r22
    ab02:	63 95       	inc	r22
		lpm ;3 nop
    ab04:	c8 95       	lpm

		cpi r22,TILE_HEIGHT ;last char line? 1
    ab06:	68 30       	cpi	r22, 0x08	; 8
		breq next_tile_row 
    ab08:	31 f0       	breq	.+12     	; 0xab16 <next_tile_row>
	
		;wait to align with next_tile_row instructions (+1 cycle for the breq)
		WAIT r19,11
    ab0a:	33 e0       	ldi	r19, 0x03	; 3
    ab0c:	3a 95       	dec	r19
    ab0e:	f1 f7       	brne	.-4      	; 0xab0c <next_tile_line+0x28>
    ab10:	00 00       	nop
    ab12:	00 00       	nop
		
		rjmp next_tile_line	
    ab14:	e7 cf       	rjmp	.-50     	; 0xaae4 <next_tile_line>

0000ab16 <next_tile_row>:

	next_tile_row:
		clr r22		;current char line			;1	
    ab16:	66 27       	eor	r22, r22

		clr r0
    ab18:	00 24       	eor	r0, r0
		ldi r19,VRAM_TILES_H
    ab1a:	3e e1       	ldi	r19, 0x1E	; 30
		add YL,r19
    ab1c:	c3 0f       	add	r28, r19
		adc YH,r0
    ab1e:	d0 1d       	adc	r29, r0

		dec r24		;overlay done?
    ab20:	8a 95       	dec	r24
		brne .+2
    ab22:	09 f4       	brne	.+2      	; 0xab26 <next_tile_row+0x10>
		movw YL,r8	;main vram
    ab24:	e4 01       	movw	r28, r8
		brne .+2
    ab26:	09 f4       	brne	.+2      	; 0xab2a <next_tile_row+0x14>
		movw r12,r6	;main tile table
    ab28:	63 01       	movw	r12, r6

	
		rjmp next_tile_line
    ab2a:	dc cf       	rjmp	.-72     	; 0xaae4 <next_tile_line>

0000ab2c <frame_end>:

	frame_end:

		WAIT r19,18
    ab2c:	36 e0       	ldi	r19, 0x06	; 6
    ab2e:	3a 95       	dec	r19
    ab30:	f1 f7       	brne	.-4      	; 0xab2e <frame_end+0x2>

		rcall hsync_pulse ;145
    ab32:	56 d2       	rcall	.+1196   	; 0xafe0 <hsync_pulse>
	
		clr r1
    ab34:	11 24       	eor	r1, r1
		call RestoreBackground
    ab36:	0e 94 80 62 	call	0xc500	; 0xc500 <RestoreBackground>

		;set vsync flag & flip field
		lds ZL,sync_flags
    ab3a:	e0 91 a2 0c 	lds	r30, 0x0CA2
		ldi r20,SYNC_FLAG_FIELD
    ab3e:	42 e0       	ldi	r20, 0x02	; 2
		ori ZL,SYNC_FLAG_VSYNC
    ab40:	e1 60       	ori	r30, 0x01	; 1
		eor ZL,r20
    ab42:	e4 27       	eor	r30, r20
		sts sync_flags,ZL
    ab44:	e0 93 a2 0c 	sts	0x0CA2, r30

		;clear any pending timer int
		ldi ZL,(1<<OCF1A)
    ab48:	e2 e0       	ldi	r30, 0x02	; 2
		sts _SFR_MEM_ADDR(TIFR1),ZL
    ab4a:	e0 93 36 00 	sts	0x0036, r30



		clr r1
    ab4e:	11 24       	eor	r1, r1


		ret
    ab50:	08 95       	ret

0000ab52 <render_tile_line>:
	;*************************************************
	render_tile_line:

		;load first tile and determine if its a ROM or RAM tile

		movw XL,YL
    ab52:	de 01       	movw	r26, r28

		mul r22,r23
    ab54:	67 9f       	mul	r22, r23

		movw r16,r12 ;current tile table (main or overlay)
    ab56:	86 01       	movw	r16, r12
		subi r16,lo8(RAM_TILES_COUNT*TILE_HEIGHT*TILE_WIDTH)
    ab58:	00 58       	subi	r16, 0x80	; 128
		sbci r17,hi8(RAM_TILES_COUNT*TILE_HEIGHT*TILE_WIDTH)
    ab5a:	17 40       	sbci	r17, 0x07	; 7

		add r16,r0
    ab5c:	00 0d       	add	r16, r0
		adc r17,r1
    ab5e:	11 1d       	adc	r17, r1
		movw r2,r16			;rom tiles
    ab60:	18 01       	movw	r2, r16

		ldi r16,lo8(ram_tiles)
    ab62:	08 eb       	ldi	r16, 0xB8	; 184
		ldi r17,hi8(ram_tiles)
    ab64:	14 e0       	ldi	r17, 0x04	; 4
		add r16,r0
    ab66:	00 0d       	add	r16, r0
		adc r17,r1
    ab68:	11 1d       	adc	r17, r1
		movw r4,r16			;ram tiles
    ab6a:	28 01       	movw	r4, r16

		ldi r19,TILE_HEIGHT*TILE_WIDTH
    ab6c:	30 e4       	ldi	r19, 0x40	; 64
		ldi r17,SCREEN_TILES_H
    ab6e:	1e e1       	ldi	r17, 0x1E	; 30

	    ld r18,X+     	;load next tile # from VRAM
    ab70:	2d 91       	ld	r18, X+

		mul r18,r19 	;tile*width*height
    ab72:	23 9f       	mul	r18, r19
		movw r20,r2		;rom tiles
    ab74:	a1 01       	movw	r20, r2
		
		cpi r18,RAM_TILES_COUNT
    ab76:	2e 31       	cpi	r18, 0x1E	; 30
		brcc .+2
    ab78:	08 f4       	brcc	.+2      	; 0xab7c <render_tile_line+0x2a>
		movw r20,r4		;ram tiles
    ab7a:	a2 01       	movw	r20, r4

	    add r0,r20    ;add title table address +row offset
    ab7c:	04 0e       	add	r0, r20
	    adc r1,r21
    ab7e:	15 1e       	adc	r1, r21

		movw ZL,r0
    ab80:	f0 01       	movw	r30, r0
		
		cpi r18,RAM_TILES_COUNT
    ab82:	2e 31       	cpi	r18, 0x1E	; 30
		brcs ramloop
    ab84:	f0 f0       	brcs	.+60     	; 0xabc2 <ramloop>

0000ab86 <romloop>:
	

	romloop:
	    lpm r16,Z+
    ab86:	05 91       	lpm	r16, Z+
	    out _SFR_IO_ADDR(DATA_PORT),r16        ;pixel 1
    ab88:	08 b9       	out	0x08, r16	; 8
	    ld r18,X+     ;load next tile # from VRAM
    ab8a:	2d 91       	ld	r18, X+


	    lpm r16,Z+
    ab8c:	05 91       	lpm	r16, Z+
	    out _SFR_IO_ADDR(DATA_PORT),r16        ;pixel 2
    ab8e:	08 b9       	out	0x08, r16	; 8
		mul r18,r19 ;tile*width*height
    ab90:	23 9f       	mul	r18, r19


	    lpm r16,Z+
    ab92:	05 91       	lpm	r16, Z+
	    out _SFR_IO_ADDR(DATA_PORT),r16        ;pixel 3
    ab94:	08 b9       	out	0x08, r16	; 8
		cpi r18,RAM_TILES_COUNT		;is tile in RAM or ROM? (RAM tiles have indexes<RAM_TILES_COUNT)
    ab96:	2e 31       	cpi	r18, 0x1E	; 30
		nop
    ab98:	00 00       	nop

	    lpm r16,Z+
    ab9a:	05 91       	lpm	r16, Z+
	    out _SFR_IO_ADDR(DATA_PORT),r16        ;pixel 4
    ab9c:	08 b9       	out	0x08, r16	; 8
		brsh .+2		;skip in next tile is in ROM	
    ab9e:	08 f4       	brcc	.+2      	; 0xaba2 <romloop+0x1c>
		movw r20,r4 	;load RAM title table address +row offset	
    aba0:	a2 01       	movw	r20, r4
   
	    lpm r16,Z+
    aba2:	05 91       	lpm	r16, Z+
	    out _SFR_IO_ADDR(DATA_PORT),r16        ;pixel 5
    aba4:	08 b9       	out	0x08, r16	; 8
		add r0,r20		;add title table address +row offset lsb
    aba6:	04 0e       	add	r0, r20
	    adc r1,r21		;add title table address +row offset msb
    aba8:	15 1e       	adc	r1, r21

	    lpm r16,Z+
    abaa:	05 91       	lpm	r16, Z+
	    out _SFR_IO_ADDR(DATA_PORT),r16        ;pixel 6
    abac:	08 b9       	out	0x08, r16	; 8
		
		cpi r18,RAM_TILES_COUNT	
    abae:	2e 31       	cpi	r18, 0x1E	; 30
		dec r17			;decrement tiles to draw on line
    abb0:	1a 95       	dec	r17
   
	    lpm r16,Z+
    abb2:	05 91       	lpm	r16, Z+
	    out _SFR_IO_ADDR(DATA_PORT),r16        ;pixel 7   
    abb4:	08 b9       	out	0x08, r16	; 8
	    lpm r16,Z+
    abb6:	05 91       	lpm	r16, Z+

		breq end	
    abb8:	31 f1       	breq	.+76     	; 0xac06 <end>
	    movw ZL,r0   	;copy next tile adress
    abba:	f0 01       	movw	r30, r0

	    out _SFR_IO_ADDR(DATA_PORT),r16        ;pixel 8   
    abbc:	08 b9       	out	0x08, r16	; 8
	    brcc romloop
    abbe:	18 f7       	brcc	.-58     	; 0xab86 <romloop>
	
		rjmp .
    abc0:	00 c0       	rjmp	.+0      	; 0xabc2 <ramloop>

0000abc2 <ramloop>:

	ramloop:

	    ld r16,Z+
    abc2:	01 91       	ld	r16, Z+
	    out _SFR_IO_ADDR(DATA_PORT),r16        ;pixel 1
    abc4:	08 b9       	out	0x08, r16	; 8
	    ld r18,X+     ;load next tile # from VRAM
    abc6:	2d 91       	ld	r18, X+

	    ld r16,Z+ 
    abc8:	01 91       	ld	r16, Z+
		nop   
    abca:	00 00       	nop
		out _SFR_IO_ADDR(DATA_PORT),r16 		;pixel 2
    abcc:	08 b9       	out	0x08, r16	; 8
		mul r18,r19 ;tile*width*height
    abce:	23 9f       	mul	r18, r19


	    ld r16,Z+
    abd0:	01 91       	ld	r16, Z+
		nop
    abd2:	00 00       	nop
		out _SFR_IO_ADDR(DATA_PORT),r16         ;pixel 3
    abd4:	08 b9       	out	0x08, r16	; 8
		cpi r18,RAM_TILES_COUNT
    abd6:	2e 31       	cpi	r18, 0x1E	; 30
   		rjmp .
    abd8:	00 c0       	rjmp	.+0      	; 0xabda <ramloop+0x18>

	    ld r16,Z+
    abda:	01 91       	ld	r16, Z+
		out _SFR_IO_ADDR(DATA_PORT),r16        ;pixel 4
    abdc:	08 b9       	out	0x08, r16	; 8
		brcs .+2 
    abde:	08 f0       	brcs	.+2      	; 0xabe2 <ramloop+0x20>
		movw r20,r2 	;ROM title table address +row offset	
    abe0:	a1 01       	movw	r20, r2
   
   
	    ld r16,Z+
    abe2:	01 91       	ld	r16, Z+
	    add r0,r20    ;add title table address +row offset
    abe4:	04 0e       	add	r0, r20
		out _SFR_IO_ADDR(DATA_PORT),r16       ;pixel 5
    abe6:	08 b9       	out	0x08, r16	; 8
	    adc r1,r21
    abe8:	15 1e       	adc	r1, r21
		rjmp .
    abea:	00 c0       	rjmp	.+0      	; 0xabec <ramloop+0x2a>
    
		ld r16,Z+		
    abec:	01 91       	ld	r16, Z+
		out _SFR_IO_ADDR(DATA_PORT),r16       ;pixel 6
    abee:	08 b9       	out	0x08, r16	; 8
		cpi r18,RAM_TILES_COUNT
    abf0:	2e 31       	cpi	r18, 0x1E	; 30
		rjmp .  
    abf2:	00 c0       	rjmp	.+0      	; 0xabf4 <ramloop+0x32>

	    ld r16,Z+	
    abf4:	01 91       	ld	r16, Z+
		out _SFR_IO_ADDR(DATA_PORT),r16      ;pixel 7   
    abf6:	08 b9       	out	0x08, r16	; 8
	    ld r16,Z+
    abf8:	01 91       	ld	r16, Z+

	    dec r17
    abfa:	1a 95       	dec	r17
	    breq end
    abfc:	21 f0       	breq	.+8      	; 0xac06 <end>
	
		movw ZL,r0
    abfe:	f0 01       	movw	r30, r0
		out _SFR_IO_ADDR(DATA_PORT),r16        ;pixel 8   
    ac00:	08 b9       	out	0x08, r16	; 8
	
	    brcc romloop
    ac02:	08 f6       	brcc	.-126    	; 0xab86 <romloop>
		rjmp ramloop
    ac04:	de cf       	rjmp	.-68     	; 0xabc2 <ramloop>

0000ac06 <end>:
	
	end:
		out _SFR_IO_ADDR(DATA_PORT),r16  	;pixel 8
    ac06:	08 b9       	out	0x08, r16	; 8
		clr r16	
    ac08:	00 27       	eor	r16, r16
		lpm	
    ac0a:	c8 95       	lpm
		nop
    ac0c:	00 00       	nop
		out _SFR_IO_ADDR(DATA_PORT),r16        
    ac0e:	08 b9       	out	0x08, r16	; 8

		ret
    ac10:	08 95       	ret

0000ac12 <CopyTileToRam>:
		px=pgm_read_byte(src++);
		*dest++=px;
	}
*/

	ldi r18,TILE_HEIGHT*TILE_WIDTH
    ac12:	20 e4       	ldi	r18, 0x40	; 64

	;compute source adress
	lds ZL,tile_table_lo
    ac14:	e0 91 9a 0c 	lds	r30, 0x0C9A
	lds ZH,tile_table_hi
    ac18:	f0 91 9b 0c 	lds	r31, 0x0C9B
	;andi r24,0x7f
	subi r24,RAM_TILES_COUNT
    ac1c:	8e 51       	subi	r24, 0x1E	; 30
	mul r24,r18
    ac1e:	82 9f       	mul	r24, r18
	add ZL,r0
    ac20:	e0 0d       	add	r30, r0
	adc ZH,r1
    ac22:	f1 1d       	adc	r31, r1

	;compute destination adress
	ldi XL,lo8(ram_tiles)
    ac24:	a8 eb       	ldi	r26, 0xB8	; 184
	ldi XH,hi8(ram_tiles)
    ac26:	b4 e0       	ldi	r27, 0x04	; 4
	mul r22,r18
    ac28:	62 9f       	mul	r22, r18
	add XL,r0
    ac2a:	a0 0d       	add	r26, r0
	adc XH,r1
    ac2c:	b1 1d       	adc	r27, r1

	clr r0
    ac2e:	00 24       	eor	r0, r0
	;copy data (fastest possible)
.rept TILE_HEIGHT*TILE_WIDTH
	lpm r0,Z+	
	st X+,r0
.endr
    ac30:	05 90       	lpm	r0, Z+
    ac32:	0d 92       	st	X+, r0
    ac34:	05 90       	lpm	r0, Z+
    ac36:	0d 92       	st	X+, r0
    ac38:	05 90       	lpm	r0, Z+
    ac3a:	0d 92       	st	X+, r0
    ac3c:	05 90       	lpm	r0, Z+
    ac3e:	0d 92       	st	X+, r0
    ac40:	05 90       	lpm	r0, Z+
    ac42:	0d 92       	st	X+, r0
    ac44:	05 90       	lpm	r0, Z+
    ac46:	0d 92       	st	X+, r0
    ac48:	05 90       	lpm	r0, Z+
    ac4a:	0d 92       	st	X+, r0
    ac4c:	05 90       	lpm	r0, Z+
    ac4e:	0d 92       	st	X+, r0
    ac50:	05 90       	lpm	r0, Z+
    ac52:	0d 92       	st	X+, r0
    ac54:	05 90       	lpm	r0, Z+
    ac56:	0d 92       	st	X+, r0
    ac58:	05 90       	lpm	r0, Z+
    ac5a:	0d 92       	st	X+, r0
    ac5c:	05 90       	lpm	r0, Z+
    ac5e:	0d 92       	st	X+, r0
    ac60:	05 90       	lpm	r0, Z+
    ac62:	0d 92       	st	X+, r0
    ac64:	05 90       	lpm	r0, Z+
    ac66:	0d 92       	st	X+, r0
    ac68:	05 90       	lpm	r0, Z+
    ac6a:	0d 92       	st	X+, r0
    ac6c:	05 90       	lpm	r0, Z+
    ac6e:	0d 92       	st	X+, r0
    ac70:	05 90       	lpm	r0, Z+
    ac72:	0d 92       	st	X+, r0
    ac74:	05 90       	lpm	r0, Z+
    ac76:	0d 92       	st	X+, r0
    ac78:	05 90       	lpm	r0, Z+
    ac7a:	0d 92       	st	X+, r0
    ac7c:	05 90       	lpm	r0, Z+
    ac7e:	0d 92       	st	X+, r0
    ac80:	05 90       	lpm	r0, Z+
    ac82:	0d 92       	st	X+, r0
    ac84:	05 90       	lpm	r0, Z+
    ac86:	0d 92       	st	X+, r0
    ac88:	05 90       	lpm	r0, Z+
    ac8a:	0d 92       	st	X+, r0
    ac8c:	05 90       	lpm	r0, Z+
    ac8e:	0d 92       	st	X+, r0
    ac90:	05 90       	lpm	r0, Z+
    ac92:	0d 92       	st	X+, r0
    ac94:	05 90       	lpm	r0, Z+
    ac96:	0d 92       	st	X+, r0
    ac98:	05 90       	lpm	r0, Z+
    ac9a:	0d 92       	st	X+, r0
    ac9c:	05 90       	lpm	r0, Z+
    ac9e:	0d 92       	st	X+, r0
    aca0:	05 90       	lpm	r0, Z+
    aca2:	0d 92       	st	X+, r0
    aca4:	05 90       	lpm	r0, Z+
    aca6:	0d 92       	st	X+, r0
    aca8:	05 90       	lpm	r0, Z+
    acaa:	0d 92       	st	X+, r0
    acac:	05 90       	lpm	r0, Z+
    acae:	0d 92       	st	X+, r0
    acb0:	05 90       	lpm	r0, Z+
    acb2:	0d 92       	st	X+, r0
    acb4:	05 90       	lpm	r0, Z+
    acb6:	0d 92       	st	X+, r0
    acb8:	05 90       	lpm	r0, Z+
    acba:	0d 92       	st	X+, r0
    acbc:	05 90       	lpm	r0, Z+
    acbe:	0d 92       	st	X+, r0
    acc0:	05 90       	lpm	r0, Z+
    acc2:	0d 92       	st	X+, r0
    acc4:	05 90       	lpm	r0, Z+
    acc6:	0d 92       	st	X+, r0
    acc8:	05 90       	lpm	r0, Z+
    acca:	0d 92       	st	X+, r0
    accc:	05 90       	lpm	r0, Z+
    acce:	0d 92       	st	X+, r0
    acd0:	05 90       	lpm	r0, Z+
    acd2:	0d 92       	st	X+, r0
    acd4:	05 90       	lpm	r0, Z+
    acd6:	0d 92       	st	X+, r0
    acd8:	05 90       	lpm	r0, Z+
    acda:	0d 92       	st	X+, r0
    acdc:	05 90       	lpm	r0, Z+
    acde:	0d 92       	st	X+, r0
    ace0:	05 90       	lpm	r0, Z+
    ace2:	0d 92       	st	X+, r0
    ace4:	05 90       	lpm	r0, Z+
    ace6:	0d 92       	st	X+, r0
    ace8:	05 90       	lpm	r0, Z+
    acea:	0d 92       	st	X+, r0
    acec:	05 90       	lpm	r0, Z+
    acee:	0d 92       	st	X+, r0
    acf0:	05 90       	lpm	r0, Z+
    acf2:	0d 92       	st	X+, r0
    acf4:	05 90       	lpm	r0, Z+
    acf6:	0d 92       	st	X+, r0
    acf8:	05 90       	lpm	r0, Z+
    acfa:	0d 92       	st	X+, r0
    acfc:	05 90       	lpm	r0, Z+
    acfe:	0d 92       	st	X+, r0
    ad00:	05 90       	lpm	r0, Z+
    ad02:	0d 92       	st	X+, r0
    ad04:	05 90       	lpm	r0, Z+
    ad06:	0d 92       	st	X+, r0
    ad08:	05 90       	lpm	r0, Z+
    ad0a:	0d 92       	st	X+, r0
    ad0c:	05 90       	lpm	r0, Z+
    ad0e:	0d 92       	st	X+, r0
    ad10:	05 90       	lpm	r0, Z+
    ad12:	0d 92       	st	X+, r0
    ad14:	05 90       	lpm	r0, Z+
    ad16:	0d 92       	st	X+, r0
    ad18:	05 90       	lpm	r0, Z+
    ad1a:	0d 92       	st	X+, r0
    ad1c:	05 90       	lpm	r0, Z+
    ad1e:	0d 92       	st	X+, r0
    ad20:	05 90       	lpm	r0, Z+
    ad22:	0d 92       	st	X+, r0
    ad24:	05 90       	lpm	r0, Z+
    ad26:	0d 92       	st	X+, r0
    ad28:	05 90       	lpm	r0, Z+
    ad2a:	0d 92       	st	X+, r0
    ad2c:	05 90       	lpm	r0, Z+
    ad2e:	0d 92       	st	X+, r0


	clr r1
    ad30:	11 24       	eor	r1, r1
	ret
    ad32:	08 95       	ret

0000ad34 <BlitSprite>:
; r22=RAM tile index (bt)
; r21:r20=Y:X
; r19:r18=DY:DX
;************************************
BlitSprite:
	push r16
    ad34:	0f 93       	push	r16
	push r17
    ad36:	1f 93       	push	r17
	push YL
    ad38:	cf 93       	push	r28
	push YH
    ad3a:	df 93       	push	r29

	;src=sprites_tiletable_lo+(sprites[i].tileIndex*TILE_HEIGHT*TILE_WIDTH)
	ldi r25,SPRITE_STRUCT_SIZE
    ad3c:	94 e0       	ldi	r25, 0x04	; 4
	mul r24,r25
    ad3e:	89 9f       	mul	r24, r25

	ldi ZL,lo8(sprites)	
    ad40:	e8 e6       	ldi	r30, 0x68	; 104
	ldi ZH,hi8(sprites)	
    ad42:	f4 e0       	ldi	r31, 0x04	; 4
	add ZL,r0
    ad44:	e0 0d       	add	r30, r0
	adc ZH,r1
    ad46:	f1 1d       	adc	r31, r1

	ldd r16,Z+sprFlags
    ad48:	03 81       	ldd	r16, Z+3	; 0x03

	;8x16 multiply
	ldd r24,Z+sprTileIndex
    ad4a:	82 81       	ldd	r24, Z+2	; 0x02
	ldi r30,TILE_WIDTH*TILE_HEIGHT
    ad4c:	e0 e4       	ldi	r30, 0x40	; 64
	mul r24,r30
    ad4e:	8e 9f       	mul	r24, r30
	movw r26,r0
    ad50:	d0 01       	movw	r26, r0
	
	;get tile bank addr
	ldi r25,4*2
    ad52:	98 e0       	ldi	r25, 0x08	; 8
	mul r16,r25
    ad54:	09 9f       	mul	r16, r25
	ldi YL,lo8(sprites_tile_banks)	
    ad56:	c2 e9       	ldi	r28, 0x92	; 146
	ldi YH,hi8(sprites_tile_banks)	
    ad58:	dc e0       	ldi	r29, 0x0C	; 12
	clr r0
    ad5a:	00 24       	eor	r0, r0
	add YL,r1
    ad5c:	c1 0d       	add	r28, r1
	adc YH,r0		
    ad5e:	d0 1d       	adc	r29, r0
	ldd ZL,Y+0
    ad60:	e8 81       	ld	r30, Y
	ldd ZH,Y+1
    ad62:	f9 81       	ldd	r31, Y+1	; 0x01
	add ZL,r26	;tile data src
    ad64:	ea 0f       	add	r30, r26
	adc ZH,r27
    ad66:	fb 1f       	adc	r31, r27
	
	;dest=ram_tiles+(bt*TILE_HEIGHT*TILE_WIDTH)
	ldi XL,lo8(ram_tiles)	
    ad68:	a8 eb       	ldi	r26, 0xB8	; 184
	ldi XH,hi8(ram_tiles)
    ad6a:	b4 e0       	ldi	r27, 0x04	; 4
	ldi r25,TILE_WIDTH*TILE_HEIGHT
    ad6c:	90 e4       	ldi	r25, 0x40	; 64
	mul r22,r25
    ad6e:	69 9f       	mul	r22, r25
	add XL,r0
    ad70:	a0 0d       	add	r26, r0
	adc XH,r1
    ad72:	b1 1d       	adc	r27, r1
			srcXdiff=destXdiff;
			src+=destXdiff;
		}
	}
	*/
	clr r1
    ad74:	11 24       	eor	r1, r1
	clr YH		;hi8(srcXdiff)
    ad76:	dd 27       	eor	r29, r29

	cpi r20,0	
    ad78:	40 30       	cpi	r20, 0x00	; 0
	brne x_2nd_tile
    ad7a:	51 f4       	brne	.+20     	; 0xad90 <x_2nd_tile>
	
	add XL,r18	;dest+=dx
    ad7c:	a2 0f       	add	r26, r18
	adc XH,r1
    ad7e:	b1 1d       	adc	r27, r1
	mov r24,r18	;destXdiff=dx
    ad80:	82 2f       	mov	r24, r18
	mov YL,r18	;srcXdiff=dx
    ad82:	c2 2f       	mov	r28, r18

	sbrs r16,SPRITE_FLIP_X_BIT
    ad84:	00 ff       	sbrs	r16, 0
	rjmp x_check_end
    ad86:	11 c0       	rjmp	.+34     	; 0xadaa <x_check_end>

	adiw ZL,(TILE_WIDTH-1)	;src+=7
    ad88:	37 96       	adiw	r30, 0x07	; 7
	ldi YL,TILE_WIDTH*2		;srcXdiff=((TILE_WIDTH*2)-dx);
    ad8a:	c0 e1       	ldi	r28, 0x10	; 16
	sub YL,r18	
    ad8c:	c2 1b       	sub	r28, r18
	rjmp x_check_end
    ad8e:	0d c0       	rjmp	.+26     	; 0xadaa <x_check_end>

0000ad90 <x_2nd_tile>:

x_2nd_tile:
	ldi r24,TILE_WIDTH
    ad90:	88 e0       	ldi	r24, 0x08	; 8
	sub r24,r18		;8-DX = xdiff for dest
    ad92:	82 1b       	sub	r24, r18

	sbrc r16,SPRITE_FLIP_X_BIT
    ad94:	00 fd       	sbrc	r16, 0
	rjmp x2_flip_x
    ad96:	04 c0       	rjmp	.+8      	; 0xada0 <x2_flip_x>

	mov YL,r24		;srcXdiff=destXdiff;
    ad98:	c8 2f       	mov	r28, r24
	add ZL,r24		;src+=destXdiff;
    ad9a:	e8 0f       	add	r30, r24
	adc ZH,r1	
    ad9c:	f1 1d       	adc	r31, r1
	rjmp x_check_end
    ad9e:	05 c0       	rjmp	.+10     	; 0xadaa <x_check_end>

0000ada0 <x2_flip_x>:

x2_flip_x:
	ldi YL,TILE_WIDTH
    ada0:	c8 e0       	ldi	r28, 0x08	; 8
	add YL,r18		;srcXdiff=TILE_WIDTH+dx;	
    ada2:	c2 0f       	add	r28, r18
	add ZL,r18		;src+=dx;
    ada4:	e2 0f       	add	r30, r18
	adc ZH,r1
    ada6:	f1 1d       	adc	r31, r1
	sbiw ZL,1		;src--;
    ada8:	31 97       	sbiw	r30, 0x01	; 1

0000adaa <x_check_end>:
		}else{
			src+=(ydiff*TILE_WIDTH);
		}
	}
	*/
	cpi r21,0
    adaa:	50 30       	cpi	r21, 0x00	; 0
	brne y_2nd_tile
    adac:	41 f4       	brne	.+16     	; 0xadbe <y_2nd_tile>

	ldi r25,TILE_WIDTH	;dest+=(dy*TILE_WIDTH)
    adae:	98 e0       	ldi	r25, 0x08	; 8
	mul r25,r19			
    adb0:	93 9f       	mul	r25, r19
	add XL,r0
    adb2:	a0 0d       	add	r26, r0
	adc XH,r1
    adb4:	b1 1d       	adc	r27, r1

	mov r25,r19			;ydiff=dy
    adb6:	93 2f       	mov	r25, r19

	sbrc r16,SPRITE_FLIP_Y_BIT
    adb8:	01 fd       	sbrc	r16, 1
	adiw ZL,(TILE_WIDTH*(TILE_HEIGHT-1))	;src+=(TILE_WIDTH*(TILE_HEIGHT-1));		
    adba:	f8 96       	adiw	r30, 0x38	; 56

	rjmp y_check_end
    adbc:	0a c0       	rjmp	.+20     	; 0xadd2 <y_check_end>

0000adbe <y_2nd_tile>:

y_2nd_tile:
	ldi r25,TILE_HEIGHT	;ydiff=(TILE_HEIGHT-dy)
    adbe:	98 e0       	ldi	r25, 0x08	; 8
	sub r25,r19	
    adc0:	93 1b       	sub	r25, r19
	
	mov r22,r19			;temp=dy-1
    adc2:	63 2f       	mov	r22, r19
	dec r22
    adc4:	6a 95       	dec	r22
	sbrs r16,SPRITE_FLIP_Y_BIT
    adc6:	01 ff       	sbrs	r16, 1
	mov r22,r25			;temp=ydiff
    adc8:	69 2f       	mov	r22, r25

	ldi r21,TILE_WIDTH	;src+=(temp*TILE_WIDTH);
    adca:	58 e0       	ldi	r21, 0x08	; 8
	mul r21,r22
    adcc:	56 9f       	mul	r21, r22
	add ZL,r0
    adce:	e0 0d       	add	r30, r0
	adc ZH,r1	
    add0:	f1 1d       	adc	r31, r1

0000add2 <y_check_end>:
y_check_end:	
	
	//if(flags&SPRITE_FLIP_X){
	//	step=-1;
	//}
	ser r22		;step=-1
    add2:	6f ef       	ldi	r22, 0xFF	; 255
	ser r23
    add4:	7f ef       	ldi	r23, 0xFF	; 255
	sbrs r16,SPRITE_FLIP_X_BIT
    add6:	00 ff       	sbrs	r16, 0
	ldi r22,1	;step=1
    add8:	61 e0       	ldi	r22, 0x01	; 1
	sbrs r16,SPRITE_FLIP_X_BIT
    adda:	00 ff       	sbrs	r16, 0
	clr r23
    addc:	77 27       	eor	r23, r23

	//if(flags&SPRITE_FLIP_Y){
	//	srcXdiff-=(TILE_WIDTH*2);
	//}
	sbrc r16,SPRITE_FLIP_Y_BIT
    adde:	01 fd       	sbrc	r16, 1
	sbiw YL,(TILE_WIDTH*2)
    ade0:	60 97       	sbiw	r28, 0x10	; 16
	;r24	= destXdiff
	;r25	= ydiff
	;X		= dest
	;Y		= srcXdiff
	;Z		= src
	clr r1
    ade2:	11 24       	eor	r1, r1
	ldi r19,TRANSLUCENT_COLOR
    ade4:	3e ef       	ldi	r19, 0xFE	; 254

	ldi r21,TILE_HEIGHT
    ade6:	58 e0       	ldi	r21, 0x08	; 8
	sub r21,r25 	;yspan=(TILE_HEIGHT-ydiff)
    ade8:	59 1b       	sub	r21, r25

0000adea <y_loop>:

y_loop:
	ldi r20,TILE_WIDTH
    adea:	48 e0       	ldi	r20, 0x08	; 8
	sub r20,r24 	;xspan=(TILE_WIDTH-destXdiff)
    adec:	48 1b       	sub	r20, r24

0000adee <x_loop>:

x_loop:
	lpm r18,Z		;px=pgm_read_byte(src);
    adee:	24 91       	lpm	r18, Z+
	cpse r18,r19	;if(px!=TRANSLUCENT_COLOR)
    adf0:	23 13       	cpse	r18, r19
	st X,r18		;*dest=px;
    adf2:	2c 93       	st	X, r18
	adiw XL,1
    adf4:	11 96       	adiw	r26, 0x01	; 1
	add ZL,r22		;src+=step;
    adf6:	e6 0f       	add	r30, r22
	adc ZH,r23
    adf8:	f7 1f       	adc	r31, r23
	dec r20
    adfa:	4a 95       	dec	r20
	brne x_loop
    adfc:	c1 f7       	brne	.-16     	; 0xadee <x_loop>

	add ZL,YL		;src+=srcXdiff
    adfe:	ec 0f       	add	r30, r28
	adc ZH,YH
    ae00:	fd 1f       	adc	r31, r29
	add XL,r24		;dest+=destXdiff
    ae02:	a8 0f       	add	r26, r24
	adc XH,r1
    ae04:	b1 1d       	adc	r27, r1
	dec r21
    ae06:	5a 95       	dec	r21
	brne y_loop
    ae08:	81 f7       	brne	.-32     	; 0xadea <y_loop>


	pop YH
    ae0a:	df 91       	pop	r29
	pop YL
    ae0c:	cf 91       	pop	r28
	pop r17
    ae0e:	1f 91       	pop	r17
	pop r16
    ae10:	0f 91       	pop	r16
	ret
    ae12:	08 95       	ret

0000ae14 <__vector_13>:

;***************************************************************************
; Main Video sync interrupt
;***************************************************************************
TIMER1_COMPA_vect:
	push r0
    ae14:	0f 92       	push	r0
	push r1
    ae16:	1f 92       	push	r1
	push ZL;2
    ae18:	ef 93       	push	r30
	push ZH;2
    ae1a:	ff 93       	push	r31
	
	;save flags & status register
	in ZL,_SFR_IO_ADDR(SREG);1
    ae1c:	ef b7       	in	r30, 0x3f	; 63
	push ZL ;2		
    ae1e:	ef 93       	push	r30

	;Read timer offset since rollover to remove cycles 
	;and conpensate for interrupt latency.
	;This is nessesary to eliminate frame jitter.
	lds ZL,_SFR_MEM_ADDR(TCNT1L)
    ae20:	e0 91 84 00 	lds	r30, 0x0084
	subi ZL,0x12 ;MIN_INT_LATENCY
    ae24:	e2 51       	subi	r30, 0x12	; 18

	ldi ZH,1
    ae26:	f1 e0       	ldi	r31, 0x01	; 1

0000ae28 <latency_loop>:
latency_loop:
	cp ZL,ZH
    ae28:	ef 17       	cp	r30, r31
	brlo .		;advance PC to next instruction	
    ae2a:	00 f0       	brcs	.+0      	; 0xae2c <latency_loop+0x4>
	inc ZH
    ae2c:	f3 95       	inc	r31
	cpi ZH,10
    ae2e:	fa 30       	cpi	r31, 0x0A	; 10
	brlo latency_loop
    ae30:	d8 f3       	brcs	.-10     	; 0xae28 <latency_loop>
	jmp .
    ae32:	0c 94 1b 57 	jmp	0xae36	; 0xae36 <latency_loop+0xe>
	
	;increment sync pulse counter
	lds ZL,sync_pulse
    ae36:	e0 91 a1 0c 	lds	r30, 0x0CA1
	dec ZL
    ae3a:	ea 95       	dec	r30
	sts sync_pulse,ZL
    ae3c:	e0 93 a1 0c 	sts	0x0CA1, r30

	;process sync phases
	lds ZH,sync_phase
    ae40:	f0 91 a0 0c 	lds	r31, 0x0CA0
	sbrc ZH,0
    ae44:	f0 fd       	sbrc	r31, 0
	rjmp sync_hsync
    ae46:	57 c0       	rjmp	.+174    	; 0xaef6 <sync_hsync>
; Note: TCNT1 should be equal to 
; 0x68 on the cbi
; 0xAC on the sbi
; pulse duration: 68 clocks
;***************************************************		
	cpi ZL,SYNC_EQ_PULSES+SYNC_POST_EQ_PULSES
    ae48:	ec 30       	cpi	r30, 0x0C	; 12
	brlo sync_eq
    ae4a:	98 f0       	brcs	.+38     	; 0xae72 <sync_eq>

	;Set HDRIVE to double rate during VSYNC
	ldi ZH,hi8(HDRIVE_CL_TWICE)
    ae4c:	f3 e0       	ldi	r31, 0x03	; 3
	sts _SFR_MEM_ADDR(OCR1AH),ZH	
    ae4e:	f0 93 89 00 	sts	0x0089, r31
	ldi ZH,lo8(HDRIVE_CL_TWICE)
    ae52:	fd e8       	ldi	r31, 0x8D	; 141
	sts _SFR_MEM_ADDR(OCR1AL),ZH
    ae54:	f0 93 88 00 	sts	0x0088, r31

	bst ZL,0
    ae58:	e0 fb       	bst	r30, 0
	cbi _SFR_IO_ADDR(SYNC_PORT),SYNC_PIN	;TCNT1=0x68
    ae5a:	28 98       	cbi	0x05, 0	; 5
	brtc sync_pre_eq_no_sound_update
    ae5c:	26 f4       	brtc	.+8      	; 0xae66 <sync_pre_eq_no_sound_update>
	ldi ZL,1	;indicate update_sound to generate the SBI for pre-eq
    ae5e:	e1 e0       	ldi	r30, 0x01	; 1
	call update_sound
    ae60:	0e 94 01 58 	call	0xb002	; 0xb002 <update_sound>
	rjmp sync_end
    ae64:	b6 c0       	rjmp	.+364    	; 0xafd2 <sync_end>

0000ae66 <sync_pre_eq_no_sound_update>:

sync_pre_eq_no_sound_update:
	WAIT ZL,64
    ae66:	e5 e1       	ldi	r30, 0x15	; 21
    ae68:	ea 95       	dec	r30
    ae6a:	f1 f7       	brne	.-4      	; 0xae68 <sync_pre_eq_no_sound_update+0x2>
    ae6c:	00 00       	nop
	sbi _SFR_IO_ADDR(SYNC_PORT),SYNC_PIN	;TCNT1=0xAC
    ae6e:	28 9a       	sbi	0x05, 0	; 5
		
	rjmp sync_end
    ae70:	b0 c0       	rjmp	.+352    	; 0xafd2 <sync_end>

0000ae72 <sync_eq>:
; 0x68  on the cbi
; 0x36E on the sbi
; low pulse duration: 774 clocks
;***************************************************	
sync_eq:
	cpi ZL,SYNC_POST_EQ_PULSES
    ae72:	e6 30       	cpi	r30, 0x06	; 6
	brlo sync_post_eq
    ae74:	38 f1       	brcs	.+78     	; 0xaec4 <sync_post_eq>

	rjmp .
    ae76:	00 c0       	rjmp	.+0      	; 0xae78 <sync_eq+0x6>
	rjmp .
    ae78:	00 c0       	rjmp	.+0      	; 0xae7a <sync_eq+0x8>

	cbi _SFR_IO_ADDR(SYNC_PORT),SYNC_PIN ;2
    ae7a:	28 98       	cbi	0x05, 0	; 5

	bst ZL,0
    ae7c:	e0 fb       	bst	r30, 0
	ldi ZL,4
    ae7e:	e4 e0       	ldi	r30, 0x04	; 4
	brtc sync_eq_skip
    ae80:	16 f4       	brtc	.+4      	; 0xae86 <sync_eq_skip>
	
	call update_sound
    ae82:	0e 94 01 58 	call	0xb002	; 0xb002 <update_sound>

0000ae86 <sync_eq_skip>:
	;enable interupt to bring back sync 
	;level instead of wasting cycles
	;in a big wait loop

 	;clear interrupt flag
	ldi ZL,(1<<OCF1B)
    ae86:	e4 e0       	ldi	r30, 0x04	; 4
	sts _SFR_MEM_ADDR(TIFR1),ZL 
    ae88:	e0 93 36 00 	sts	0x0036, r30
	
	;generate interrupt on match
	;for timer1 compare unit b
	ldi ZL,(1<<OCIE1A)+(1<<OCIE1B)
    ae8c:	e6 e0       	ldi	r30, 0x06	; 6
	sts _SFR_MEM_ADDR(TIMSK1),ZL
    ae8e:	e0 93 6f 00 	sts	0x006F, r30

	rjmp sync_end
    ae92:	9f c0       	rjmp	.+318    	; 0xafd2 <sync_end>

0000ae94 <__vector_14>:
; during VSYNC EQ pulses to recover ~5000 cycles per field
; with interrupt latency conpensation
; 37 cycles
;**********************************************************	
TIMER1_COMPB_vect:
	push ZL
    ae94:	ef 93       	push	r30
	;save flags & status register
	in ZL,_SFR_IO_ADDR(SREG);1
    ae96:	ef b7       	in	r30, 0x3f	; 63
	push ZL ;2		
    ae98:	ef 93       	push	r30

	lds ZL,_SFR_MEM_ADDR(TCNT1L)
    ae9a:	e0 91 84 00 	lds	r30, 0x0084
	subi ZL,62+31 ;0x5D ;MIN_INT_LATENCY
    ae9e:	ed 55       	subi	r30, 0x5D	; 93

	cpi ZL,1
    aea0:	e1 30       	cpi	r30, 0x01	; 1
	brlo .		;advance PC to next instruction
    aea2:	00 f0       	brcs	.+0      	; 0xaea4 <__vector_14+0x10>

	cpi ZL,2
    aea4:	e2 30       	cpi	r30, 0x02	; 2
	brlo .		;advance PC to next instruction
    aea6:	00 f0       	brcs	.+0      	; 0xaea8 <__vector_14+0x14>

	cpi ZL,3
    aea8:	e3 30       	cpi	r30, 0x03	; 3
	brlo .		;advance PC to next instruction
    aeaa:	00 f0       	brcs	.+0      	; 0xaeac <__vector_14+0x18>

	cpi ZL,4
    aeac:	e4 30       	cpi	r30, 0x04	; 4
	brlo .		;advance PC to next instruction
    aeae:	00 f0       	brcs	.+0      	; 0xaeb0 <__vector_14+0x1c>

	cpi ZL,5
    aeb0:	e5 30       	cpi	r30, 0x05	; 5
	brlo .		;advance PC to next instruction
    aeb2:	00 f0       	brcs	.+0      	; 0xaeb4 <__vector_14+0x20>

 	sbi _SFR_IO_ADDR(SYNC_PORT),SYNC_PIN ;68
    aeb4:	28 9a       	sbi	0x05, 0	; 5
	ldi ZL,(1<<OCIE1A) ; disable OCIE1B 
    aeb6:	e2 e0       	ldi	r30, 0x02	; 2
	sts _SFR_MEM_ADDR(TIMSK1),ZL ;stop generate interrupt on match
    aeb8:	e0 93 6f 00 	sts	0x006F, r30
	
	;restore flags
	pop ZL
    aebc:	ef 91       	pop	r30
	out _SFR_IO_ADDR(SREG),ZL	
    aebe:	ef bf       	out	0x3f, r30	; 63
	pop ZL
    aec0:	ef 91       	pop	r30
	reti
    aec2:	18 95       	reti

0000aec4 <sync_post_eq>:
; 0x68 on the cbi
; 0xAC on the sbi
; pulse cycles: 68 clocks
;***************************************************	
sync_post_eq:	
	rjmp .
    aec4:	00 c0       	rjmp	.+0      	; 0xaec6 <sync_post_eq+0x2>

	bst ZL,0
    aec6:	e0 fb       	bst	r30, 0
	cbi _SFR_IO_ADDR(SYNC_PORT),SYNC_PIN ;2
    aec8:	28 98       	cbi	0x05, 0	; 5
	brtc sync_post_eq_no_sound_update
    aeca:	26 f4       	brtc	.+8      	; 0xaed4 <sync_post_eq_no_sound_update>
	ldi ZL,1	
    aecc:	e1 e0       	ldi	r30, 0x01	; 1
	call update_sound
    aece:	0e 94 01 58 	call	0xb002	; 0xb002 <update_sound>
	rjmp sync_pre_eq_cont
    aed2:	05 c0       	rjmp	.+10     	; 0xaede <sync_pre_eq_cont>

0000aed4 <sync_post_eq_no_sound_update>:

sync_post_eq_no_sound_update:
	WAIT ZL,64
    aed4:	e5 e1       	ldi	r30, 0x15	; 21
    aed6:	ea 95       	dec	r30
    aed8:	f1 f7       	brne	.-4      	; 0xaed6 <sync_post_eq_no_sound_update+0x2>
    aeda:	00 00       	nop

	sbi _SFR_IO_ADDR(SYNC_PORT),SYNC_PIN 
    aedc:	28 9a       	sbi	0x05, 0	; 5

0000aede <sync_pre_eq_cont>:

sync_pre_eq_cont:	
	;check if it's the last vsync pulse
	lds ZL,sync_pulse
    aede:	e0 91 a1 0c 	lds	r30, 0x0CA1
	cpi ZL,0
    aee2:	e0 30       	cpi	r30, 0x00	; 0
	breq .+2 ;skip rjmp
    aee4:	09 f0       	breq	.+2      	; 0xaee8 <sync_pre_eq_cont+0xa>
	rjmp sync_end
    aee6:	75 c0       	rjmp	.+234    	; 0xafd2 <sync_end>
	
	;update sync flags
	ldi ZL,SYNC_HSYNC_PULSES
    aee8:	ed ef       	ldi	r30, 0xFD	; 253
	sts sync_pulse,ZL
    aeea:	e0 93 a1 0c 	sts	0x0CA1, r30
	ldi ZL,1
    aeee:	e1 e0       	ldi	r30, 0x01	; 1
	sts sync_phase,ZL
    aef0:	e0 93 a0 0c 	sts	0x0CA0, r30
	
	rjmp sync_end
    aef4:	6e c0       	rjmp	.+220    	; 0xafd2 <sync_end>

0000aef6 <sync_hsync>:
; 0xF0 on the sbi
; pulse duration: 136 clocks
;***************************************************	

	; Set HDRIVE to normal rate
	ldi ZL,hi8(HDRIVE_CL)
    aef6:	e7 e0       	ldi	r30, 0x07	; 7
	sts _SFR_MEM_ADDR(OCR1AH),ZL	
    aef8:	e0 93 89 00 	sts	0x0089, r30
	ldi ZL,lo8(HDRIVE_CL)
    aefc:	eb e1       	ldi	r30, 0x1B	; 27
	sts _SFR_MEM_ADDR(OCR1AL),ZL
    aefe:	e0 93 88 00 	sts	0x0088, r30
	rjmp .
    af02:	00 c0       	rjmp	.+0      	; 0xaf04 <sync_hsync+0xe>

	cbi _SFR_IO_ADDR(SYNC_PORT),SYNC_PIN ;2
    af04:	28 98       	cbi	0x05, 0	; 5
	
	ldi ZL,2	;indicate update_sound to generate the SBI for pre-eq
    af06:	e2 e0       	ldi	r30, 0x02	; 2
	rjmp .
    af08:	00 c0       	rjmp	.+0      	; 0xaf0a <sync_hsync+0x14>
	call update_sound
    af0a:	0e 94 01 58 	call	0xb002	; 0xb002 <update_sound>

	;check if we have reached the first line to render
	ldi ZH,SYNC_HSYNC_PULSES
    af0e:	fd ef       	ldi	r31, 0xFD	; 253
	lds r0,first_render_line
    af10:	00 90 a7 0c 	lds	r0, 0x0CA7
	sub ZH,r0				
    af14:	f0 19       	sub	r31, r0
	lds ZL,sync_pulse
    af16:	e0 91 a1 0c 	lds	r30, 0x0CA1
	cp ZL,ZH
    af1a:	ef 17       	cp	r30, r31
	brsh no_render
    af1c:	d0 f4       	brcc	.+52     	; 0xaf52 <no_render>

	ldi ZH,SYNC_HSYNC_PULSES
    af1e:	fd ef       	ldi	r31, 0xFD	; 253
	lds r0,first_render_line
    af20:	00 90 a7 0c 	lds	r0, 0x0CA7
	sub ZH,r0				
    af24:	f0 19       	sub	r31, r0
	lds r0,render_lines_count
    af26:	00 90 a8 0c 	lds	r0, 0x0CA8
	sub ZH,r0			
    af2a:	f0 19       	sub	r31, r0
	cp ZL,ZH
    af2c:	ef 17       	cp	r30, r31
	brlo no_render
    af2e:	88 f0       	brcs	.+34     	; 0xaf52 <no_render>

	;push r1-r29
	ldi ZL,29
    af30:	ed e1       	ldi	r30, 0x1D	; 29
	clr ZH
    af32:	ff 27       	eor	r31, r31

0000af34 <push_loop>:
push_loop:
	ld r0,Z	;load value from register file
    af34:	00 80       	ld	r0, Z
	push r0
    af36:	0f 92       	push	r0
	dec ZL
    af38:	ea 95       	dec	r30
	brne push_loop	
    af3a:	e1 f7       	brne	.-8      	; 0xaf34 <push_loop>

	;timing compensation
	;to insure we always call the video mode 
	;routine at the same cycle	
	WAIT r16,18+212-AUDIO_OUT_HSYNC_CYCLES
    af3c:	06 e0       	ldi	r16, 0x06	; 6
    af3e:	0a 95       	dec	r16
    af40:	f1 f7       	brne	.-4      	; 0xaf3e <push_loop+0xa>

	call VMODE_FUNC		;TCNT1=0x234
    af42:	0e 94 36 55 	call	0xaa6c	; 0xaa6c <sub_video_mode3>

	;pop r1-r29
	ldi ZL,1
    af46:	e1 e0       	ldi	r30, 0x01	; 1
	clr ZH
    af48:	ff 27       	eor	r31, r31

0000af4a <pop_loop>:
pop_loop:
	pop r0
    af4a:	0f 90       	pop	r0
	st Z+,r0 ;store value to register file
    af4c:	01 92       	st	Z+, r0
	cpi ZL,30
    af4e:	ee 31       	cpi	r30, 0x1E	; 30
	brlo pop_loop	
    af50:	e0 f3       	brcs	.-8      	; 0xaf4a <pop_loop>

0000af52 <no_render>:

no_render:

	;check if it's the last hsync pulse and we are 
	;ready for VSYNC
	lds ZL,sync_pulse
    af52:	e0 91 a1 0c 	lds	r30, 0x0CA1
	cpi ZL,0
    af56:	e0 30       	cpi	r30, 0x00	; 0
	breq .+2
    af58:	09 f0       	breq	.+2      	; 0xaf5c <no_render+0xa>
	rjmp sync_end
    af5a:	3b c0       	rjmp	.+118    	; 0xafd2 <sync_end>
;***************************************************
; Process VSYNC stuff
;***************************************************
	
	;push C-call registers
	push r18
    af5c:	2f 93       	push	r18
	push r19
    af5e:	3f 93       	push	r19
	push r20
    af60:	4f 93       	push	r20
	push r21
    af62:	5f 93       	push	r21
	push r22
    af64:	6f 93       	push	r22
	push r23
    af66:	7f 93       	push	r23
	push r24
    af68:	8f 93       	push	r24
	push r25
    af6a:	9f 93       	push	r25
	push r26
    af6c:	af 93       	push	r26
	push r27
    af6e:	bf 93       	push	r27

	sei ;must enable ints for re-entrant sync pulses
    af70:	78 94       	sei
	clr r1
    af72:	11 24       	eor	r1, r1

	;set vsync flags
	clr ZL
    af74:	ee 27       	eor	r30, r30
	sts sync_phase,ZL
    af76:	e0 93 a0 0c 	sts	0x0CA0, r30
	ldi ZL,SYNC_PRE_EQ_PULSES+SYNC_EQ_PULSES+SYNC_POST_EQ_PULSES
    af7a:	e2 e1       	ldi	r30, 0x12	; 18
	sts sync_pulse,ZL
    af7c:	e0 93 a1 0c 	sts	0x0CA1, r30

	;fetch render height registers if they changed	
	lds ZH,first_render_line_tmp
    af80:	f0 91 a9 0c 	lds	r31, 0x0CA9
	sts first_render_line,ZH
    af84:	f0 93 a7 0c 	sts	0x0CA7, r31
	
	lds ZH,render_lines_count_tmp
    af88:	f0 91 aa 0c 	lds	r31, 0x0CAA
	sts render_lines_count,ZH
    af8c:	f0 93 a8 0c 	sts	0x0CA8, r31

	;process user pre callback
	lds ZL,pre_vsync_user_callback+0
    af90:	e0 91 a3 0c 	lds	r30, 0x0CA3
	lds ZH,pre_vsync_user_callback+1
    af94:	f0 91 a4 0c 	lds	r31, 0x0CA4
	cp  ZL,r1
    af98:	e1 15       	cp	r30, r1
	cpc ZH,r1
    af9a:	f1 05       	cpc	r31, r1
	breq .+2 
    af9c:	09 f0       	breq	.+2      	; 0xafa0 <no_render+0x4e>
	icall
    af9e:	09 95       	icall

	;refresh buttons states
	#if CONTROLLERS_VSYNC_READ == 1
		call ReadControllers
    afa0:	0e 94 49 59 	call	0xb292	; 0xb292 <ReadControllers>
	#endif 
	
	;invoke stuff the video mode may have to do
	call VideoModeVsync	
    afa4:	0e 94 a9 63 	call	0xc752	; 0xc752 <VideoModeVsync>

	;process music (music, envelopes, etc)
	call process_music
    afa8:	0e 94 fb 57 	call	0xaff6	; 0xaff6 <process_music>
	clr r1
    afac:	11 24       	eor	r1, r1

	;process user post callback
	lds ZL,post_vsync_user_callback+0
    afae:	e0 91 a5 0c 	lds	r30, 0x0CA5
	lds ZH,post_vsync_user_callback+1
    afb2:	f0 91 a6 0c 	lds	r31, 0x0CA6
	cp  ZL,r1
    afb6:	e1 15       	cp	r30, r1
	cpc ZH,r1
    afb8:	f1 05       	cpc	r31, r1
	breq .+2 
    afba:	09 f0       	breq	.+2      	; 0xafbe <no_render+0x6c>
	icall
    afbc:	09 95       	icall
	#if SNES_MOUSE == 1
		call ReadMouseExtendedData
		call ProcessMouseMovement
	#endif

	pop r27
    afbe:	bf 91       	pop	r27
	pop r26
    afc0:	af 91       	pop	r26
	pop r25
    afc2:	9f 91       	pop	r25
	pop r24
    afc4:	8f 91       	pop	r24
	pop r23
    afc6:	7f 91       	pop	r23
	pop r22
    afc8:	6f 91       	pop	r22
	pop r21
    afca:	5f 91       	pop	r21
	pop r20
    afcc:	4f 91       	pop	r20
	pop r19
    afce:	3f 91       	pop	r19
	pop r18
    afd0:	2f 91       	pop	r18

0000afd2 <sync_end>:
	
sync_end:	
	;restore flags
	pop ZL
    afd2:	ef 91       	pop	r30
	out _SFR_IO_ADDR(SREG),ZL
    afd4:	ef bf       	out	0x3f, r30	; 63
	
	pop ZH
    afd6:	ff 91       	pop	r31
	pop ZL
    afd8:	ef 91       	pop	r30
	pop r1
    afda:	1f 90       	pop	r1
	pop r0
    afdc:	0f 90       	pop	r0
	reti
    afde:	18 95       	reti

0000afe0 <hsync_pulse>:
; 0xf0 on the sbi 
;	
; Destroys: ZL (r30)
;*************************************************
hsync_pulse:
	cbi _SFR_IO_ADDR(SYNC_PORT),SYNC_PIN ;2
    afe0:	28 98       	cbi	0x05, 0	; 5
	ldi ZL,2
    afe2:	e2 e0       	ldi	r30, 0x02	; 2
	rjmp .
    afe4:	00 c0       	rjmp	.+0      	; 0xafe6 <hsync_pulse+0x6>
	call update_sound
    afe6:	0e 94 01 58 	call	0xb002	; 0xb002 <update_sound>

	lds ZL,sync_pulse
    afea:	e0 91 a1 0c 	lds	r30, 0x0CA1
	dec ZL
    afee:	ea 95       	dec	r30
	sts sync_pulse,ZL
    aff0:	e0 93 a1 0c 	sts	0x0CA1, r30

	ret
    aff4:	08 95       	ret

0000aff6 <process_music>:
; NOTE: registers r18-r27 are already saved by the caller
;***********************
process_music:
	
#if ENABLE_MIXER==1
	lds ZL,sound_enabled
    aff6:	e0 91 c1 0c 	lds	r30, 0x0CC1
	sbrc ZL,0
    affa:	e0 fd       	sbrc	r30, 0
 	call ProcessMusic
    affc:	0e 94 23 5c 	call	0xb846	; 0xb846 <ProcessMusic>
#endif

	ret
    b000:	08 95       	ret

0000b002 <update_sound>:

; Destroys: ZL (r30)
; cycles: 212
;****************************
update_sound:
	push r16
    b002:	0f 93       	push	r16
	push r17
    b004:	1f 93       	push	r17
	push r18
    b006:	2f 93       	push	r18
	push r28
    b008:	cf 93       	push	r28
	push r29
    b00a:	df 93       	push	r29

	mov r18,ZL
    b00c:	2e 2f       	mov	r18, r30

	;channel 1 
	lds r16,tr1_step_lo
    b00e:	00 91 c3 0c 	lds	r16, 0x0CC3
	lds r17,tr1_pos_frac
    b012:	10 91 c5 0c 	lds	r17, 0x0CC5
	add	r17,r16	;add step to fractional part of sample pos
    b016:	10 0f       	add	r17, r16
	lds r16,tr1_step_hi	
    b018:	00 91 c4 0c 	lds	r16, 0x0CC4
	lds ZL,tr1_pos_lo
    b01c:	e0 91 c6 0c 	lds	r30, 0x0CC6
	lds ZH,tr1_pos_hi 
    b020:	f0 91 c7 0c 	lds	r31, 0x0CC7
	adc ZL,r16	;add step to low byte of sample pos
    b024:	e0 1f       	adc	r30, r16
	lpm	r16,Z	;load sample
    b026:	04 91       	lpm	r16, Z+
	sts tr1_pos_lo,ZL
    b028:	e0 93 c6 0c 	sts	0x0CC6, r30
	sts tr1_pos_frac,r17
    b02c:	10 93 c5 0c 	sts	0x0CC5, r17
	lds r17,tr1_vol
    b030:	10 91 c2 0c 	lds	r17, 0x0CC2
	mulsu r16,r17;(sample*mixing vol)
    b034:	01 03       	mulsu	r16, r17
	clr r0
    b036:	00 24       	eor	r0, r0
	sbc r0,r0	;sign extend	
    b038:	00 08       	sbc	r0, r0
	mov r28,r1	;set (sample*vol>>8) to mix buffer lsb
    b03a:	c1 2d       	mov	r28, r1
	mov r29,r0	;set mix buffer msb	
    b03c:	d0 2d       	mov	r29, r0

;38
	
	;channel 2
	lds r16,tr2_step_lo
    b03e:	00 91 c9 0c 	lds	r16, 0x0CC9
	lds r17,tr2_pos_frac
    b042:	10 91 cb 0c 	lds	r17, 0x0CCB
	add	r17,r16	;add step to fractional part of sample pos
    b046:	10 0f       	add	r17, r16
	lds r16,tr2_step_hi	
    b048:	00 91 ca 0c 	lds	r16, 0x0CCA
	lds ZL,tr2_pos_lo
    b04c:	e0 91 cc 0c 	lds	r30, 0x0CCC
	lds ZH,tr2_pos_hi 
    b050:	f0 91 cd 0c 	lds	r31, 0x0CCD
	adc ZL,r16	;add step to low byte of sample pos
    b054:	e0 1f       	adc	r30, r16
	lpm	r16,Z	;load sample
    b056:	04 91       	lpm	r16, Z+
	sts tr2_pos_lo,ZL
    b058:	e0 93 cc 0c 	sts	0x0CCC, r30
	sts tr2_pos_frac,r17
    b05c:	10 93 cb 0c 	sts	0x0CCB, r17
	lds r17,tr2_vol
    b060:	10 91 c8 0c 	lds	r17, 0x0CC8
	;clr r17
	;nop

	;*** Video sync update ***
	sbrc r18,0								;pre-eq/post-eq sync
    b064:	20 fd       	sbrc	r18, 0
	sbi _SFR_IO_ADDR(SYNC_PORT),SYNC_PIN	;TCNT1=0xAC
    b066:	28 9a       	sbi	0x05, 0	; 5
	sbrs r18,0								
    b068:	20 ff       	sbrs	r18, 0
	rjmp .
    b06a:	00 c0       	rjmp	.+0      	; 0xb06c <update_sound+0x6a>
	;*************************

	mulsu r16,r17;(sample*mixing vol)
    b06c:	01 03       	mulsu	r16, r17
	clr r0
    b06e:	00 24       	eor	r0, r0
	sbc r0,r0	;sign extend
    b070:	00 08       	sbc	r0, r0
	add r28,r1	;add (sample*vol>>8) to mix buffer lsb
    b072:	c1 0d       	add	r28, r1
	adc r29,r0	;ajust mix buffer msb		
    b074:	d0 1d       	adc	r29, r0
;70
	
	;channel 3
	lds r16,tr3_step_lo
    b076:	00 91 cf 0c 	lds	r16, 0x0CCF
	lds r17,tr3_pos_frac
    b07a:	10 91 d1 0c 	lds	r17, 0x0CD1
	add	r17,r16				;add step to fractional part of sample pos
    b07e:	10 0f       	add	r17, r16
	lds r16,tr3_step_hi	
    b080:	00 91 d0 0c 	lds	r16, 0x0CD0
	lds ZL,tr3_pos_lo
    b084:	e0 91 d2 0c 	lds	r30, 0x0CD2
	lds ZH,tr3_pos_hi 
    b088:	f0 91 d3 0c 	lds	r31, 0x0CD3
	adc ZL,r16				;add step to low byte of sample pos
    b08c:	e0 1f       	adc	r30, r16
	lpm	r16,Z				;load sample
    b08e:	04 91       	lpm	r16, Z+
	sts tr3_pos_lo,ZL
    b090:	e0 93 d2 0c 	sts	0x0CD2, r30
	sts tr3_pos_frac,r17
    b094:	10 93 d1 0c 	sts	0x0CD1, r17
	lds r17,tr3_vol
    b098:	10 91 ce 0c 	lds	r17, 0x0CCE
	mulsu r16,r17			;(sample*mixing vol)
    b09c:	01 03       	mulsu	r16, r17
	clr r0
    b09e:	00 24       	eor	r0, r0
	sbc r0,r0				;sign extend
    b0a0:	00 08       	sbc	r0, r0
	add r28,r1				;add (sample*vol>>8) to mix buffer lsb
    b0a2:	c1 0d       	add	r28, r1
	adc r29,r0				;ajust mix buffer msb
    b0a4:	d0 1d       	adc	r29, r0
;97	

	;channel 4 - 7/15 bit LFSR 
	lds r16,tr4_barrel_lo
    b0a6:	00 91 d6 0c 	lds	r16, 0x0CD6
	lds r17,tr4_barrel_hi
    b0aa:	10 91 d7 0c 	lds	r17, 0x0CD7
	lds ZL,tr4_divider
    b0ae:	e0 91 d8 0c 	lds	r30, 0x0CD8
	dec ZL	
    b0b2:	ea 95       	dec	r30
	brpl ch4_no_shift	
    b0b4:	92 f4       	brpl	.+36     	; 0xb0da <ch4_no_shift>

	lds ZH,tr4_params
    b0b6:	f0 91 d5 0c 	lds	r31, 0x0CD5
	mov ZL,ZH
    b0ba:	ef 2f       	mov	r30, r31
	lsr ZL 			;keep bits7:1
    b0bc:	e6 95       	lsr	r30

	mov r0,r16  ;copy barrel shifter
    b0be:	00 2e       	mov	r0, r16
	lsr r0
    b0c0:	06 94       	lsr	r0
	eor r0,r16  ;xor bit0 and bit1
    b0c2:	00 26       	eor	r0, r16
	bst r0,0
    b0c4:	00 fa       	bst	r0, 0
	lsr r17
    b0c6:	16 95       	lsr	r17
	ror r16
    b0c8:	07 95       	ror	r16
	bld r17,6	;15 bits mode
    b0ca:	16 f9       	bld	r17, 6
	sbrs ZH,0
    b0cc:	f0 ff       	sbrs	r31, 0
	bld r16,6	;7 bits mode
    b0ce:	06 f9       	bld	r16, 6

	sts tr4_barrel_lo,r16
    b0d0:	00 93 d6 0c 	sts	0x0CD6, r16
	sts tr4_barrel_hi,r17
    b0d4:	10 93 d7 0c 	sts	0x0CD7, r17

	rjmp ch4_end
    b0d8:	03 c0       	rjmp	.+6      	; 0xb0e0 <ch4_end>

0000b0da <ch4_no_shift>:
ch4_no_shift:
	;wait loop 21 cycles
	ldi r17,6
    b0da:	16 e0       	ldi	r17, 0x06	; 6
	dec r17
    b0dc:	1a 95       	dec	r17
	brne .-4
    b0de:	f1 f7       	brne	.-4      	; 0xb0dc <ch4_no_shift+0x2>

0000b0e0 <ch4_end>:
	;rjmp .
ch4_end:

	sts tr4_divider,ZL
    b0e0:	e0 93 d8 0c 	sts	0x0CD8, r30
;126
	
	;*** Video sync update ***
	sbrc r18,1								;hsync
    b0e4:	21 fd       	sbrc	r18, 1
	sbi _SFR_IO_ADDR(SYNC_PORT),SYNC_PIN	;TCNT1=0xF0
    b0e6:	28 9a       	sbi	0x05, 0	; 5
	sbrs r18,1								
    b0e8:	21 ff       	sbrs	r18, 1
	rjmp .
    b0ea:	00 c0       	rjmp	.+0      	; 0xb0ec <ch4_end+0xc>
	;*************************
	
	ldi r17,0x80 ;-128
    b0ec:	10 e8       	ldi	r17, 0x80	; 128
	sbrc r16,0
    b0ee:	00 fd       	sbrc	r16, 0
	ldi r17,0x7f ;+127
    b0f0:	1f e7       	ldi	r17, 0x7F	; 127
	
	lds r16,tr4_vol
    b0f2:	00 91 d4 0c 	lds	r16, 0x0CD4

	mulsu r17,r16;(sample*mixing vol)
    b0f6:	10 03       	mulsu	r17, r16
	clr r0
    b0f8:	00 24       	eor	r0, r0
	sbc r0,r0	;sign extend
    b0fa:	00 08       	sbc	r0, r0
	add r28,r1	;add (sample*vol>>8) to mix buffer lsb
    b0fc:	c1 0d       	add	r28, r1
	adc r29,r0	;ajust mix buffer msb
    b0fe:	d0 1d       	adc	r29, r0
;142
#if SOUND_CHANNEL_5_ENABLE==1
	;channel 5 PCM -- 43 cycles

	;add fractional part
	lds r16,tr5_pos_frac
    b100:	00 91 dd 0c 	lds	r16, 0x0CDD
	lds r17,tr5_step_lo 
    b104:	10 91 db 0c 	lds	r17, 0x0CDB
	add r16,r17
    b108:	01 0f       	add	r16, r17
	sts tr5_pos_frac,r16
    b10a:	00 93 dd 0c 	sts	0x0CDD, r16

	;add lo
	lds ZL,tr5_pos_lo
    b10e:	e0 91 de 0c 	lds	r30, 0x0CDE
	lds r17,tr5_step_hi 
    b112:	10 91 dc 0c 	lds	r17, 0x0CDC
	adc ZL,r17
    b116:	e1 1f       	adc	r30, r17

	;add hi
	lds ZH,tr5_pos_hi
    b118:	f0 91 df 0c 	lds	r31, 0x0CDF
	ldi r16,0
    b11c:	00 e0       	ldi	r16, 0x00	; 0
	adc ZH,r16
    b11e:	f0 1f       	adc	r31, r16

	lds r0,tr5_loop_end_lo
    b120:	00 90 e2 0c 	lds	r0, 0x0CE2
	lds r1,tr5_loop_end_hi
    b124:	10 90 e3 0c 	lds	r1, 0x0CE3

	lds r16,tr5_loop_start_lo
    b128:	00 91 e0 0c 	lds	r16, 0x0CE0
	lds r17,tr5_loop_start_hi	
    b12c:	10 91 e1 0c 	lds	r17, 0x0CE1

	cp ZL,r0
    b130:	e0 15       	cp	r30, r0
	cpc ZH,r1
    b132:	f1 05       	cpc	r31, r1
	brlo .+2
    b134:	08 f0       	brcs	.+2      	; 0xb138 <ch4_end+0x58>
	movw ZL,r16
    b136:	f8 01       	movw	r30, r16

	sts tr5_pos_lo,ZL
    b138:	e0 93 de 0c 	sts	0x0CDE, r30
	sts tr5_pos_hi,ZH
    b13c:	f0 93 df 0c 	sts	0x0CDF, r31

	lpm	r16,Z	;load sample
    b140:	04 91       	lpm	r16, Z+
	lds r17,tr5_vol
    b142:	10 91 da 0c 	lds	r17, 0x0CDA

	mulsu r16,r17;(sample*mixing vol)
    b146:	01 03       	mulsu	r16, r17
	clr r0
    b148:	00 24       	eor	r0, r0
	sbc r0,r0	;sign extend
    b14a:	00 08       	sbc	r0, r0
	add r28,r1	;add (sample*vol>>8) to mix buffer lsb
    b14c:	c1 0d       	add	r28, r1
	adc r29,r0	;adjust mix buffer msb	
    b14e:	d0 1d       	adc	r29, r0
#endif
	
	;final processing

	;clip
	clr r0
    b150:	00 24       	eor	r0, r0
	cpi r28,128	;> 127?
    b152:	c0 38       	cpi	r28, 0x80	; 128
	cpc r29,r0 ;0	
    b154:	d0 05       	cpc	r29, r0
	brlt .+2
    b156:	0c f0       	brlt	.+2      	; 0xb15a <ch4_end+0x7a>
	ldi r28,127
    b158:	cf e7       	ldi	r28, 0x7F	; 127
	
	dec r0
    b15a:	0a 94       	dec	r0
	cpi r28,-128; <-128?
    b15c:	c0 38       	cpi	r28, 0x80	; 128
	cpc r29,r0 ;0xff
    b15e:	d0 05       	cpc	r29, r0
	brge .+2
    b160:	0c f4       	brge	.+2      	; 0xb164 <ch4_end+0x84>
	ldi r28,-128
    b162:	c0 e8       	ldi	r28, 0x80	; 128

	subi r28,128	;convert to unsigned		
    b164:	c0 58       	subi	r28, 0x80	; 128
	sts _SFR_MEM_ADDR(OCR2A),r28 ;output sound byte
    b166:	c0 93 b3 00 	sts	0x00B3, r28
	
	pop r29
    b16a:	df 91       	pop	r29
	pop r28
    b16c:	cf 91       	pop	r28
	pop r18
    b16e:	2f 91       	pop	r18
	pop r17
    b170:	1f 91       	pop	r17
	pop r16
    b172:	0f 91       	pop	r16
	
	ret
    b174:	08 95       	ret

0000b176 <SetSpritesTileTable>:
; C-callable
; r25:r24=pointer to sprites pixel data.
;*****************************
.section .text.SetSpritesTileTable
SetSpritesTileTable:
	sts sprites_tile_banks,r24
    b176:	80 93 92 0c 	sts	0x0C92, r24
	sts sprites_tile_banks+1,r25
    b17a:	90 93 93 0c 	sts	0x0C93, r25
	ret
    b17e:	08 95       	ret

0000b180 <ClearVram>:
; C-callable
;************************************
.section .text.ClearVram
ClearVram:
	//init vram		
	ldi r30,lo8(VRAM_SIZE+(VRAM_TILES_H*OVERLAY_LINES))
    b180:	e8 e4       	ldi	r30, 0x48	; 72
	ldi r31,hi8(VRAM_SIZE+(VRAM_TILES_H*OVERLAY_LINES))
    b182:	f3 e0       	ldi	r31, 0x03	; 3

	ldi XL,lo8(vram)
    b184:	a0 e2       	ldi	r26, 0x20	; 32
	ldi XH,hi8(vram)
    b186:	b1 e0       	ldi	r27, 0x01	; 1

	ldi r22,RAM_TILES_COUNT
    b188:	6e e1       	ldi	r22, 0x1E	; 30

0000b18a <fill_vram_loop>:

fill_vram_loop:
	st X+,r22
    b18a:	6d 93       	st	X+, r22
	sbiw r30,1
    b18c:	31 97       	sbiw	r30, 0x01	; 1
	brne fill_vram_loop
    b18e:	e9 f7       	brne	.-6      	; 0xb18a <fill_vram_loop>

	clr r1
    b190:	11 24       	eor	r1, r1

	ret
    b192:	08 95       	ret

0000b194 <SetTile>:

	ret

#else

	clr r25
    b194:	99 27       	eor	r25, r25
	clr r23	
    b196:	77 27       	eor	r23, r23

	ldi r18,VRAM_TILES_H
    b198:	2e e1       	ldi	r18, 0x1E	; 30

	mul r22,r18		;calculate Y line addr in vram
    b19a:	62 9f       	mul	r22, r18
	add r0,r24		;add X offset
    b19c:	08 0e       	add	r0, r24
	adc r1,r25
    b19e:	19 1e       	adc	r1, r25
	ldi XL,lo8(vram)
    b1a0:	a0 e2       	ldi	r26, 0x20	; 32
	ldi XH,hi8(vram)
    b1a2:	b1 e0       	ldi	r27, 0x01	; 1
	add XL,r0
    b1a4:	a0 0d       	add	r26, r0
	adc XH,r1
    b1a6:	b1 1d       	adc	r27, r1
	
	subi r20,~(RAM_TILES_COUNT-1)	
    b1a8:	42 5e       	subi	r20, 0xE2	; 226
	st X,r20
    b1aa:	4c 93       	st	X, r20

	clr r1
    b1ac:	11 24       	eor	r1, r1

	ret
    b1ae:	08 95       	ret

0000b1b0 <SetTileTable>:
; C-callable
; r25:r24=pointer to tiles data
;************************************
.section .text.SetTileTable
SetTileTable:
	sts tile_table_lo,r24
    b1b0:	80 93 9a 0c 	sts	0x0C9A, r24
	sts tile_table_hi,r25	
    b1b4:	90 93 9b 0c 	sts	0x0C9B, r25
	ret
    b1b8:	08 95       	ret

0000b1ba <GetVsyncFlag>:
;
; C-callable
;************************************
.section .text.GetVsyncFlag
GetVsyncFlag:
	lds r24,sync_flags
    b1ba:	80 91 a2 0c 	lds	r24, 0x0CA2
	andi r24,SYNC_FLAG_VSYNC
    b1be:	81 70       	andi	r24, 0x01	; 1
	ret
    b1c0:	08 95       	ret

0000b1c2 <ClearVsyncFlag>:
; 
; C-callable
;*****************************
.section .text.ClearVsyncFlag
ClearVsyncFlag:
	lds r18,sync_flags
    b1c2:	20 91 a2 0c 	lds	r18, 0x0CA2
	andi r18,~SYNC_FLAG_VSYNC
    b1c6:	2e 7f       	andi	r18, 0xFE	; 254
	sts sync_flags,r18
    b1c8:	20 93 a2 0c 	sts	0x0CA2, r18
	ret
    b1cc:	08 95       	ret

0000b1ce <ReadJoypad>:
; r24=joypad No (0 or 1)
; returns: (int) r25:r24
;*****************************
.section .text.ReadJoypad
ReadJoypad:	
	tst r24
    b1ce:	88 23       	and	r24, r24
	brne rj_p2
    b1d0:	29 f4       	brne	.+10     	; 0xb1dc <rj_p2>
		
	lds r24,joypad1_status_lo
    b1d2:	80 91 ab 0c 	lds	r24, 0x0CAB
	lds r25,joypad1_status_lo+1
    b1d6:	90 91 ac 0c 	lds	r25, 0x0CAC
	ret
    b1da:	08 95       	ret

0000b1dc <rj_p2>:
rj_p2:
	lds r24,joypad2_status_lo
    b1dc:	80 91 ad 0c 	lds	r24, 0x0CAD
	lds r25,joypad2_status_lo+1	
    b1e0:	90 91 ae 0c 	lds	r25, 0x0CAE

	ret
    b1e4:	08 95       	ret

0000b1e6 <WriteEeprom>:
;****************************

.section .text.WriteEeprom
WriteEeprom:
   ; Wait for completion of previous write
   sbic _SFR_IO_ADDR(EECR),EEPE
    b1e6:	f9 99       	sbic	0x1f, 1	; 31
   rjmp WriteEeprom
    b1e8:	fe cf       	rjmp	.-4      	; 0xb1e6 <WriteEeprom>
   ; Set up address (r25:r24) in address register
   out _SFR_IO_ADDR(EEARH), r25
    b1ea:	92 bd       	out	0x22, r25	; 34
   out _SFR_IO_ADDR(EEARL), r24
    b1ec:	81 bd       	out	0x21, r24	; 33
   ; Write data (r22) to Data Register
   out _SFR_IO_ADDR(EEDR),r22
    b1ee:	60 bd       	out	0x20, r22	; 32
   cli
    b1f0:	f8 94       	cli
   ; Write logical one to EEMPE
   sbi _SFR_IO_ADDR(EECR),EEMPE
    b1f2:	fa 9a       	sbi	0x1f, 2	; 31
   ; Start eeprom write by setting EEPE
   sbi _SFR_IO_ADDR(EECR),EEPE
    b1f4:	f9 9a       	sbi	0x1f, 1	; 31
   sei
    b1f6:	78 94       	sei
   ret
    b1f8:	08 95       	ret

0000b1fa <ReadEeprom>:
; r24 - value read
;****************************
.section .text.ReadEeprom
ReadEeprom:
   ; Wait for completion of previous write
   sbic _SFR_IO_ADDR(EECR),EEPE
    b1fa:	f9 99       	sbic	0x1f, 1	; 31
   rjmp ReadEeprom
    b1fc:	fe cf       	rjmp	.-4      	; 0xb1fa <ReadEeprom>
   ; Set up address (r25:r24) in address register
   out _SFR_IO_ADDR(EEARH), r25
    b1fe:	92 bd       	out	0x22, r25	; 34
   out _SFR_IO_ADDR(EEARL), r24
    b200:	81 bd       	out	0x21, r24	; 33
   ; Start eeprom read by writing EERE
   cli
    b202:	f8 94       	cli
   sbi _SFR_IO_ADDR(EECR),EERE
    b204:	f8 9a       	sbi	0x1f, 0	; 31
   ; Read data from Data Register
   in r24,_SFR_IO_ADDR(EEDR)
    b206:	80 b5       	in	r24, 0x20	; 32
   sei
    b208:	78 94       	sei
   ret
    b20a:	08 95       	ret

0000b20c <SoftReset>:

/**
 * Performs a software reset
 */
void SoftReset(void){        
	wdt_enable(WDTO_15MS);  
    b20c:	28 e0       	ldi	r18, 0x08	; 8
    b20e:	88 e1       	ldi	r24, 0x18	; 24
    b210:	90 e0       	ldi	r25, 0x00	; 0
    b212:	0f b6       	in	r0, 0x3f	; 63
    b214:	f8 94       	cli
    b216:	a8 95       	wdr
    b218:	80 93 60 00 	sts	0x0060, r24
    b21c:	0f be       	out	0x3f, r0	; 63
    b21e:	20 93 60 00 	sts	0x0060, r18
    b222:	ff cf       	rjmp	.-2      	; 0xb222 <SoftReset+0x16>

0000b224 <ReadButtons>:
void ReadButtons(){
	unsigned int p1ButtonsLo=0,p2ButtonsLo=0;
	unsigned char i;

	//latch controllers
	JOYPAD_OUT_PORT|=_BV(JOYPAD_LATCH_PIN);
    b224:	12 9a       	sbi	0x02, 2	; 2
		}else{
			Wait200ns();
			Wait200ns();
		}	
	#else
		Wait200ns();
    b226:	c8 95       	lpm
    b228:	c8 95       	lpm
		Wait200ns();
    b22a:	c8 95       	lpm
    b22c:	c8 95       	lpm
	#endif
	JOYPAD_OUT_PORT&=~(_BV(JOYPAD_LATCH_PIN));
    b22e:	12 98       	cbi	0x02, 2	; 2
    b230:	20 e0       	ldi	r18, 0x00	; 0
    b232:	30 e0       	ldi	r19, 0x00	; 0
    b234:	80 e0       	ldi	r24, 0x00	; 0
    b236:	90 e0       	ldi	r25, 0x00	; 0
    b238:	40 e0       	ldi	r20, 0x00	; 0


	//read button states
	for(i=0;i<16;i++){

		p1ButtonsLo>>=1;
    b23a:	36 95       	lsr	r19
    b23c:	27 95       	ror	r18
		p2ButtonsLo>>=1;
    b23e:	96 95       	lsr	r25
    b240:	87 95       	ror	r24
			}else{
				Wait200ns();
				Wait200ns();
			}	
		#else
			Wait200ns();
    b242:	c8 95       	lpm
    b244:	c8 95       	lpm
			Wait200ns();
    b246:	c8 95       	lpm
    b248:	c8 95       	lpm
		#endif
			
		//pulse clock pin		
		JOYPAD_OUT_PORT&=~(_BV(JOYPAD_CLOCK_PIN));
    b24a:	13 98       	cbi	0x02, 3	; 2
		
		if((JOYPAD_IN_PORT&(1<<JOYPAD_DATA1_PIN))==0) p1ButtonsLo|=(1<<15);
    b24c:	00 9b       	sbis	0x00, 0	; 0
    b24e:	30 68       	ori	r19, 0x80	; 128
		if((JOYPAD_IN_PORT&(1<<JOYPAD_DATA2_PIN))==0) p2ButtonsLo|=(1<<15);
    b250:	01 9b       	sbis	0x00, 1	; 0
    b252:	90 68       	ori	r25, 0x80	; 128
		
		JOYPAD_OUT_PORT|=_BV(JOYPAD_CLOCK_PIN);
    b254:	13 9a       	sbi	0x02, 3	; 2
			}else{
				Wait200ns();
				Wait200ns();
			}	
		#else
			Wait200ns();
    b256:	c8 95       	lpm
    b258:	c8 95       	lpm
			Wait200ns();
    b25a:	c8 95       	lpm
    b25c:	c8 95       	lpm
	#endif
	JOYPAD_OUT_PORT&=~(_BV(JOYPAD_LATCH_PIN));


	//read button states
	for(i=0;i<16;i++){
    b25e:	4f 5f       	subi	r20, 0xFF	; 255
    b260:	40 31       	cpi	r20, 0x10	; 16
    b262:	59 f7       	brne	.-42     	; 0xb23a <ReadButtons+0x16>
		#endif

	}

	#if JOYSTICK==TYPE_SNES
		joypad1_status_lo=p1ButtonsLo;
    b264:	30 93 ac 0c 	sts	0x0CAC, r19
    b268:	20 93 ab 0c 	sts	0x0CAB, r18
		joypad2_status_lo=p2ButtonsLo;
    b26c:	90 93 ae 0c 	sts	0x0CAE, r25
    b270:	80 93 ad 0c 	sts	0x0CAD, r24
	#else
		joypad1_status_lo=p1ButtonsLo&0xff;
		joypad2_status_lo=p2ButtonsLo&0xff;	
	#endif

	if(joypad1_status_lo==(BTN_START+BTN_SELECT+BTN_Y+BTN_B) || joypad2_status_lo==(BTN_START+BTN_SELECT+BTN_Y+BTN_B)){
    b274:	80 91 ab 0c 	lds	r24, 0x0CAB
    b278:	90 91 ac 0c 	lds	r25, 0x0CAC
    b27c:	0f 97       	sbiw	r24, 0x0f	; 15
    b27e:	31 f0       	breq	.+12     	; 0xb28c <ReadButtons+0x68>
    b280:	80 91 ad 0c 	lds	r24, 0x0CAD
    b284:	90 91 ae 0c 	lds	r25, 0x0CAE
    b288:	0f 97       	sbiw	r24, 0x0f	; 15
    b28a:	11 f4       	brne	.+4      	; 0xb290 <ReadButtons+0x6c>
		SoftReset();
    b28c:	0e 94 06 59 	call	0xb20c	; 0xb20c <SoftReset>
    b290:	08 95       	ret

0000b292 <ReadControllers>:
void ReadControllers(){

	//detect if joypads are connected
	//when no connector are plugged, the internal AVR pullup will drive the line high
	//otherwise the controller's shift register will drive the line low.
	joypadsConnectionStatus=0;
    b292:	10 92 e9 0c 	sts	0x0CE9, r1
	if((JOYPAD_IN_PORT&(1<<JOYPAD_DATA1_PIN))==0) joypadsConnectionStatus|=1;
    b296:	00 99       	sbic	0x00, 0	; 0
    b298:	03 c0       	rjmp	.+6      	; 0xb2a0 <ReadControllers+0xe>
    b29a:	81 e0       	ldi	r24, 0x01	; 1
    b29c:	80 93 e9 0c 	sts	0x0CE9, r24
	if((JOYPAD_IN_PORT&(1<<JOYPAD_DATA2_PIN))==0) joypadsConnectionStatus|=2;
    b2a0:	01 99       	sbic	0x00, 1	; 0
    b2a2:	05 c0       	rjmp	.+10     	; 0xb2ae <ReadControllers+0x1c>
    b2a4:	80 91 e9 0c 	lds	r24, 0x0CE9
    b2a8:	82 60       	ori	r24, 0x02	; 2
    b2aa:	80 93 e9 0c 	sts	0x0CE9, r24
			
	//read the standard buttons
	ReadButtons();
    b2ae:	0e 94 12 59 	call	0xb224	; 0xb224 <ReadButtons>
}
    b2b2:	08 95       	ret

0000b2b4 <isEepromFormatted>:
	  }
   }
}
	
//returns true if the EEPROM has been setup to work with the kernel.
bool isEepromFormatted(){
    b2b4:	1f 93       	push	r17
	unsigned id;
	id=ReadEeprom(0)+(ReadEeprom(1)<<8);
    b2b6:	80 e0       	ldi	r24, 0x00	; 0
    b2b8:	90 e0       	ldi	r25, 0x00	; 0
    b2ba:	0e 94 fd 58 	call	0xb1fa	; 0xb1fa <ReadEeprom>
    b2be:	18 2f       	mov	r17, r24
    b2c0:	81 e0       	ldi	r24, 0x01	; 1
    b2c2:	90 e0       	ldi	r25, 0x00	; 0
    b2c4:	0e 94 fd 58 	call	0xb1fa	; 0xb1fa <ReadEeprom>
    b2c8:	90 e0       	ldi	r25, 0x00	; 0
    b2ca:	38 2f       	mov	r19, r24
    b2cc:	20 e0       	ldi	r18, 0x00	; 0
    b2ce:	21 0f       	add	r18, r17
    b2d0:	31 1d       	adc	r19, r1
    b2d2:	2a 55       	subi	r18, 0x5A	; 90
    b2d4:	35 45       	sbci	r19, 0x55	; 85
    b2d6:	09 f4       	brne	.+2      	; 0xb2da <isEepromFormatted+0x26>
    b2d8:	91 e0       	ldi	r25, 0x01	; 1
	return (id==EEPROM_SIGNATURE);
}
    b2da:	89 2f       	mov	r24, r25
    b2dc:	1f 91       	pop	r17
    b2de:	08 95       	ret

0000b2e0 <EepromReadBlock>:
 * 	0x01 = EEPROM_ERROR_INVALID_BLOCK
 *	0x02 = EEPROM_ERROR_FULL
 *	0x03 = EEPROM_ERROR_BLOCK_NOT_FOUND
 *	0x04 = EEPROM_ERROR_NOT_FORMATTED
 */
char EepromReadBlock(unsigned int blockId,struct EepromBlockStruct *block){
    b2e0:	a0 e0       	ldi	r26, 0x00	; 0
    b2e2:	b0 e0       	ldi	r27, 0x00	; 0
    b2e4:	e6 e7       	ldi	r30, 0x76	; 118
    b2e6:	f9 e5       	ldi	r31, 0x59	; 89
    b2e8:	0c 94 3f 77 	jmp	0xee7e	; 0xee7e <__prologue_saves__+0x12>
    b2ec:	6c 01       	movw	r12, r24
    b2ee:	06 2f       	mov	r16, r22
    b2f0:	b7 2e       	mov	r11, r23
	unsigned char i;
	unsigned int destAddr=0xffff,id;
	unsigned char *destPtr=(unsigned char *)block;

	if(!isEepromFormatted()) return EEPROM_ERROR_NOT_FORMATTED;
    b2f2:	0e 94 5a 59 	call	0xb2b4	; 0xb2b4 <isEepromFormatted>
    b2f6:	88 23       	and	r24, r24
    b2f8:	09 f4       	brne	.+2      	; 0xb2fc <EepromReadBlock+0x1c>
    b2fa:	40 c0       	rjmp	.+128    	; 0xb37c <EepromReadBlock+0x9c>
	if(blockId==EEPROM_FREE_BLOCK) return EEPROM_ERROR_INVALID_BLOCK;
    b2fc:	8f ef       	ldi	r24, 0xFF	; 255
    b2fe:	c8 16       	cp	r12, r24
    b300:	8f ef       	ldi	r24, 0xFF	; 255
    b302:	d8 06       	cpc	r13, r24
    b304:	11 f4       	brne	.+4      	; 0xb30a <EepromReadBlock+0x2a>
    b306:	81 e0       	ldi	r24, 0x01	; 1
    b308:	3c c0       	rjmp	.+120    	; 0xb382 <EepromReadBlock+0xa2>
    b30a:	ee 24       	eor	r14, r14
    b30c:	ff 24       	eor	r15, r15

	//scan all blocks and get the adress of that block
	for(i=0;i<32;i++){
		id=ReadEeprom(i*EEPROM_BLOCK_SIZE)+(ReadEeprom((i*EEPROM_BLOCK_SIZE)+1)<<8);
    b30e:	c7 01       	movw	r24, r14
    b310:	0e 94 fd 58 	call	0xb1fa	; 0xb1fa <ReadEeprom>
    b314:	18 2f       	mov	r17, r24
    b316:	c7 01       	movw	r24, r14
    b318:	01 96       	adiw	r24, 0x01	; 1
    b31a:	0e 94 fd 58 	call	0xb1fa	; 0xb1fa <ReadEeprom>
		if(id==blockId){
    b31e:	d8 2f       	mov	r29, r24
    b320:	c0 e0       	ldi	r28, 0x00	; 0
    b322:	ce 01       	movw	r24, r28
    b324:	81 0f       	add	r24, r17
    b326:	91 1d       	adc	r25, r1
    b328:	8c 15       	cp	r24, r12
    b32a:	9d 05       	cpc	r25, r13
    b32c:	31 f4       	brne	.+12     	; 0xb33a <EepromReadBlock+0x5a>
			destAddr=i*EEPROM_BLOCK_SIZE;
			break;
		}
	}

	if(destAddr==0xffff) return EEPROM_ERROR_BLOCK_NOT_FOUND;			
    b32e:	9f ef       	ldi	r25, 0xFF	; 255
    b330:	e9 16       	cp	r14, r25
    b332:	9f ef       	ldi	r25, 0xFF	; 255
    b334:	f9 06       	cpc	r15, r25
    b336:	59 f4       	brne	.+22     	; 0xb34e <EepromReadBlock+0x6e>
    b338:	23 c0       	rjmp	.+70     	; 0xb380 <EepromReadBlock+0xa0>
    b33a:	80 e2       	ldi	r24, 0x20	; 32
    b33c:	90 e0       	ldi	r25, 0x00	; 0
    b33e:	e8 0e       	add	r14, r24
    b340:	f9 1e       	adc	r15, r25

	if(!isEepromFormatted()) return EEPROM_ERROR_NOT_FORMATTED;
	if(blockId==EEPROM_FREE_BLOCK) return EEPROM_ERROR_INVALID_BLOCK;

	//scan all blocks and get the adress of that block
	for(i=0;i<32;i++){
    b342:	90 e0       	ldi	r25, 0x00	; 0
    b344:	e9 16       	cp	r14, r25
    b346:	94 e0       	ldi	r25, 0x04	; 4
    b348:	f9 06       	cpc	r15, r25
    b34a:	09 f7       	brne	.-62     	; 0xb30e <EepromReadBlock+0x2e>
    b34c:	19 c0       	rjmp	.+50     	; 0xb380 <EepromReadBlock+0xa0>
 *	0x04 = EEPROM_ERROR_NOT_FORMATTED
 */
char EepromReadBlock(unsigned int blockId,struct EepromBlockStruct *block){
	unsigned char i;
	unsigned int destAddr=0xffff,id;
	unsigned char *destPtr=(unsigned char *)block;
    b34e:	80 2f       	mov	r24, r16
    b350:	9b 2d       	mov	r25, r11
    b352:	9c 01       	movw	r18, r24
    b354:	e9 01       	movw	r28, r18
		}
	}

	if(destAddr==0xffff) return EEPROM_ERROR_BLOCK_NOT_FOUND;			

	for(i=0;i<EEPROM_BLOCK_SIZE;i++){
    b356:	70 e2       	ldi	r23, 0x20	; 32
    b358:	c7 2e       	mov	r12, r23
    b35a:	d1 2c       	mov	r13, r1
    b35c:	c2 0e       	add	r12, r18
    b35e:	d3 1e       	adc	r13, r19
		*destPtr=ReadEeprom(destAddr++);
    b360:	87 01       	movw	r16, r14
    b362:	0f 5f       	subi	r16, 0xFF	; 255
    b364:	1f 4f       	sbci	r17, 0xFF	; 255
    b366:	c7 01       	movw	r24, r14
    b368:	0e 94 fd 58 	call	0xb1fa	; 0xb1fa <ReadEeprom>
    b36c:	89 93       	st	Y+, r24
		}
	}

	if(destAddr==0xffff) return EEPROM_ERROR_BLOCK_NOT_FOUND;			

	for(i=0;i<EEPROM_BLOCK_SIZE;i++){
    b36e:	cc 15       	cp	r28, r12
    b370:	dd 05       	cpc	r29, r13
    b372:	11 f4       	brne	.+4      	; 0xb378 <EepromReadBlock+0x98>
    b374:	80 e0       	ldi	r24, 0x00	; 0
    b376:	05 c0       	rjmp	.+10     	; 0xb382 <EepromReadBlock+0xa2>
    b378:	78 01       	movw	r14, r16
    b37a:	f2 cf       	rjmp	.-28     	; 0xb360 <EepromReadBlock+0x80>
    b37c:	84 e0       	ldi	r24, 0x04	; 4
    b37e:	01 c0       	rjmp	.+2      	; 0xb382 <EepromReadBlock+0xa2>
    b380:	83 e0       	ldi	r24, 0x03	; 3
		*destPtr=ReadEeprom(destAddr++);
		destPtr++;	
	}
	
	return 0;
}
    b382:	cd b7       	in	r28, 0x3d	; 61
    b384:	de b7       	in	r29, 0x3e	; 62
    b386:	e9 e0       	ldi	r30, 0x09	; 9
    b388:	0c 94 5b 77 	jmp	0xeeb6	; 0xeeb6 <__epilogue_restores__+0x12>

0000b38c <EepromWriteBlock>:
/*
 * Write a data block in the specified block id. If the block does not exist, it is created.
 *
 * Returns: 0 on success or error codes
 */
char EepromWriteBlock(struct EepromBlockStruct *block){
    b38c:	a0 e0       	ldi	r26, 0x00	; 0
    b38e:	b0 e0       	ldi	r27, 0x00	; 0
    b390:	ec ec       	ldi	r30, 0xCC	; 204
    b392:	f9 e5       	ldi	r31, 0x59	; 89
    b394:	0c 94 3f 77 	jmp	0xee7e	; 0xee7e <__prologue_saves__+0x12>
    b398:	6c 01       	movw	r12, r24
	unsigned char i,nextFreeBlock=0,c;
	unsigned int destAddr=0,id;
	unsigned char *srcPtr=(unsigned char *)block;

	if(!isEepromFormatted()) return EEPROM_ERROR_NOT_FORMATTED;
    b39a:	0e 94 5a 59 	call	0xb2b4	; 0xb2b4 <isEepromFormatted>
    b39e:	88 23       	and	r24, r24
    b3a0:	11 f4       	brne	.+4      	; 0xb3a6 <EepromWriteBlock+0x1a>
    b3a2:	84 e0       	ldi	r24, 0x04	; 4
    b3a4:	4e c0       	rjmp	.+156    	; 0xb442 <EepromWriteBlock+0xb6>
	if(block->id==EEPROM_FREE_BLOCK || block->id==EEPROM_SIGNATURE) return EEPROM_ERROR_INVALID_BLOCK;
    b3a6:	f6 01       	movw	r30, r12
    b3a8:	80 81       	ld	r24, Z
    b3aa:	91 81       	ldd	r25, Z+1	; 0x01
    b3ac:	ff ef       	ldi	r31, 0xFF	; 255
    b3ae:	8f 3f       	cpi	r24, 0xFF	; 255
    b3b0:	9f 07       	cpc	r25, r31
    b3b2:	09 f4       	brne	.+2      	; 0xb3b6 <EepromWriteBlock+0x2a>
    b3b4:	45 c0       	rjmp	.+138    	; 0xb440 <EepromWriteBlock+0xb4>
    b3b6:	8a 55       	subi	r24, 0x5A	; 90
    b3b8:	95 45       	sbci	r25, 0x55	; 85
    b3ba:	09 f4       	brne	.+2      	; 0xb3be <EepromWriteBlock+0x32>
    b3bc:	41 c0       	rjmp	.+130    	; 0xb440 <EepromWriteBlock+0xb4>
    b3be:	01 e0       	ldi	r16, 0x01	; 1
    b3c0:	10 e0       	ldi	r17, 0x00	; 0
    b3c2:	f0 e2       	ldi	r31, 0x20	; 32
    b3c4:	ef 2e       	mov	r14, r31
    b3c6:	f1 2c       	mov	r15, r1

	//scan all blocks and get the adress of that block or the next free one.
	for(i=EEPROM_HEADER_SIZE;i<64;i++){
		id=ReadEeprom(i*EEPROM_BLOCK_SIZE)+(ReadEeprom((i*EEPROM_BLOCK_SIZE)+1)<<8);
    b3c8:	c7 01       	movw	r24, r14
    b3ca:	0e 94 fd 58 	call	0xb1fa	; 0xb1fa <ReadEeprom>
    b3ce:	b8 2e       	mov	r11, r24
    b3d0:	c7 01       	movw	r24, r14
    b3d2:	01 96       	adiw	r24, 0x01	; 1
    b3d4:	0e 94 fd 58 	call	0xb1fa	; 0xb1fa <ReadEeprom>
    b3d8:	d8 2f       	mov	r29, r24
    b3da:	c0 e0       	ldi	r28, 0x00	; 0
    b3dc:	9e 01       	movw	r18, r28
    b3de:	2b 0d       	add	r18, r11
    b3e0:	31 1d       	adc	r19, r1
		if(id==block->id){
    b3e2:	f6 01       	movw	r30, r12
    b3e4:	80 81       	ld	r24, Z
    b3e6:	91 81       	ldd	r25, Z+1	; 0x01
    b3e8:	28 17       	cp	r18, r24
    b3ea:	39 07       	cpc	r19, r25
    b3ec:	19 f4       	brne	.+6      	; 0xb3f4 <EepromWriteBlock+0x68>
		}
		if(id==0xffff && nextFreeBlock==0) nextFreeBlock=i;
	}

	if(destAddr==0 && nextFreeBlock==0) return EEPROM_ERROR_FULL;
	if(nextFreeBlock!=0) destAddr=nextFreeBlock*EEPROM_BLOCK_SIZE;
    b3ee:	11 23       	and	r17, r17
    b3f0:	b1 f0       	breq	.+44     	; 0xb41e <EepromWriteBlock+0x92>
    b3f2:	0e c0       	rjmp	.+28     	; 0xb410 <EepromWriteBlock+0x84>
		id=ReadEeprom(i*EEPROM_BLOCK_SIZE)+(ReadEeprom((i*EEPROM_BLOCK_SIZE)+1)<<8);
		if(id==block->id){
			destAddr=i*EEPROM_BLOCK_SIZE;
			break;
		}
		if(id==0xffff && nextFreeBlock==0) nextFreeBlock=i;
    b3f4:	2f 5f       	subi	r18, 0xFF	; 255
    b3f6:	3f 4f       	sbci	r19, 0xFF	; 255
    b3f8:	19 f4       	brne	.+6      	; 0xb400 <EepromWriteBlock+0x74>
    b3fa:	11 23       	and	r17, r17
    b3fc:	09 f4       	brne	.+2      	; 0xb400 <EepromWriteBlock+0x74>
    b3fe:	10 2f       	mov	r17, r16

	if(!isEepromFormatted()) return EEPROM_ERROR_NOT_FORMATTED;
	if(block->id==EEPROM_FREE_BLOCK || block->id==EEPROM_SIGNATURE) return EEPROM_ERROR_INVALID_BLOCK;

	//scan all blocks and get the adress of that block or the next free one.
	for(i=EEPROM_HEADER_SIZE;i<64;i++){
    b400:	0f 5f       	subi	r16, 0xFF	; 255
    b402:	80 e2       	ldi	r24, 0x20	; 32
    b404:	90 e0       	ldi	r25, 0x00	; 0
    b406:	e8 0e       	add	r14, r24
    b408:	f9 1e       	adc	r15, r25
    b40a:	00 34       	cpi	r16, 0x40	; 64
    b40c:	e9 f6       	brne	.-70     	; 0xb3c8 <EepromWriteBlock+0x3c>
    b40e:	1e c0       	rjmp	.+60     	; 0xb44c <EepromWriteBlock+0xc0>
		}
		if(id==0xffff && nextFreeBlock==0) nextFreeBlock=i;
	}

	if(destAddr==0 && nextFreeBlock==0) return EEPROM_ERROR_FULL;
	if(nextFreeBlock!=0) destAddr=nextFreeBlock*EEPROM_BLOCK_SIZE;
    b410:	e1 2e       	mov	r14, r17
    b412:	ff 24       	eor	r15, r15
    b414:	e5 e0       	ldi	r30, 0x05	; 5
    b416:	ee 0c       	add	r14, r14
    b418:	ff 1c       	adc	r15, r15
    b41a:	ea 95       	dec	r30
    b41c:	e1 f7       	brne	.-8      	; 0xb416 <EepromWriteBlock+0x8a>
    b41e:	c0 e0       	ldi	r28, 0x00	; 0
    b420:	d0 e0       	ldi	r29, 0x00	; 0

	for(i=0;i<EEPROM_BLOCK_SIZE;i++){
		c=*srcPtr;
		WriteEeprom(destAddr++,c);
    b422:	f6 01       	movw	r30, r12
    b424:	ec 0f       	add	r30, r28
    b426:	fd 1f       	adc	r31, r29
    b428:	ce 01       	movw	r24, r28
    b42a:	8e 0d       	add	r24, r14
    b42c:	9f 1d       	adc	r25, r15
    b42e:	60 81       	ld	r22, Z
    b430:	0e 94 f3 58 	call	0xb1e6	; 0xb1e6 <WriteEeprom>
    b434:	21 96       	adiw	r28, 0x01	; 1
	}

	if(destAddr==0 && nextFreeBlock==0) return EEPROM_ERROR_FULL;
	if(nextFreeBlock!=0) destAddr=nextFreeBlock*EEPROM_BLOCK_SIZE;

	for(i=0;i<EEPROM_BLOCK_SIZE;i++){
    b436:	c0 32       	cpi	r28, 0x20	; 32
    b438:	d1 05       	cpc	r29, r1
    b43a:	99 f7       	brne	.-26     	; 0xb422 <EepromWriteBlock+0x96>
    b43c:	80 e0       	ldi	r24, 0x00	; 0
    b43e:	01 c0       	rjmp	.+2      	; 0xb442 <EepromWriteBlock+0xb6>
    b440:	81 e0       	ldi	r24, 0x01	; 1
		WriteEeprom(destAddr++,c);
		srcPtr++;	
	}
	
	return 0;
}
    b442:	cd b7       	in	r28, 0x3d	; 61
    b444:	de b7       	in	r29, 0x3e	; 62
    b446:	e9 e0       	ldi	r30, 0x09	; 9
    b448:	0c 94 5b 77 	jmp	0xeeb6	; 0xeeb6 <__epilogue_restores__+0x12>
			break;
		}
		if(id==0xffff && nextFreeBlock==0) nextFreeBlock=i;
	}

	if(destAddr==0 && nextFreeBlock==0) return EEPROM_ERROR_FULL;
    b44c:	11 23       	and	r17, r17
    b44e:	01 f7       	brne	.-64     	; 0xb410 <EepromWriteBlock+0x84>
    b450:	82 e0       	ldi	r24, 0x02	; 2
    b452:	f7 cf       	rjmp	.-18     	; 0xb442 <EepromWriteBlock+0xb6>

0000b454 <FormatEeprom>:
	return resp;
}

	
// Format eeprom, wiping all data to zero
void FormatEeprom(void) {
    b454:	cf 93       	push	r28
    b456:	df 93       	push	r29
    b458:	c0 e0       	ldi	r28, 0x00	; 0
    b45a:	d0 e0       	ldi	r29, 0x00	; 0

   // Set sig. so we don't format next time
   for (u8 i = 0; i < sizeof(eeprom_format_table); i++) {
	 WriteEeprom(i,pgm_read_byte(&eeprom_format_table[i]));
    b45c:	fe 01       	movw	r30, r28
    b45e:	e0 59       	subi	r30, 0x90	; 144
    b460:	ff 4f       	sbci	r31, 0xFF	; 255
    b462:	e4 91       	lpm	r30, Z+
    b464:	ce 01       	movw	r24, r28
    b466:	6e 2f       	mov	r22, r30
    b468:	0e 94 f3 58 	call	0xb1e6	; 0xb1e6 <WriteEeprom>
    b46c:	21 96       	adiw	r28, 0x01	; 1
	
// Format eeprom, wiping all data to zero
void FormatEeprom(void) {

   // Set sig. so we don't format next time
   for (u8 i = 0; i < sizeof(eeprom_format_table); i++) {
    b46e:	c0 32       	cpi	r28, 0x20	; 32
    b470:	d1 05       	cpc	r29, r1
    b472:	a1 f7       	brne	.-24     	; 0xb45c <FormatEeprom+0x8>
    b474:	c0 e2       	ldi	r28, 0x20	; 32
    b476:	d0 e0       	ldi	r29, 0x00	; 0
	 WriteEeprom(i,pgm_read_byte(&eeprom_format_table[i]));
   }
   
   // Write free blocks IDs
   for (u16 i = (EEPROM_BLOCK_SIZE*EEPROM_HEADER_SIZE); i < (64*EEPROM_BLOCK_SIZE); i+=EEPROM_BLOCK_SIZE) {
	  WriteEeprom(i,(u8)EEPROM_FREE_BLOCK);
    b478:	ce 01       	movw	r24, r28
    b47a:	6f ef       	ldi	r22, 0xFF	; 255
    b47c:	0e 94 f3 58 	call	0xb1e6	; 0xb1e6 <WriteEeprom>
	  WriteEeprom(i+1,(u8)(EEPROM_FREE_BLOCK>>8));
    b480:	ce 01       	movw	r24, r28
    b482:	01 96       	adiw	r24, 0x01	; 1
    b484:	6f ef       	ldi	r22, 0xFF	; 255
    b486:	0e 94 f3 58 	call	0xb1e6	; 0xb1e6 <WriteEeprom>
   for (u8 i = 0; i < sizeof(eeprom_format_table); i++) {
	 WriteEeprom(i,pgm_read_byte(&eeprom_format_table[i]));
   }
   
   // Write free blocks IDs
   for (u16 i = (EEPROM_BLOCK_SIZE*EEPROM_HEADER_SIZE); i < (64*EEPROM_BLOCK_SIZE); i+=EEPROM_BLOCK_SIZE) {
    b48a:	a0 96       	adiw	r28, 0x20	; 32
    b48c:	88 e0       	ldi	r24, 0x08	; 8
    b48e:	c0 30       	cpi	r28, 0x00	; 0
    b490:	d8 07       	cpc	r29, r24
    b492:	91 f7       	brne	.-28     	; 0xb478 <FormatEeprom+0x24>
	  WriteEeprom(i,(u8)EEPROM_FREE_BLOCK);
	  WriteEeprom(i+1,(u8)(EEPROM_FREE_BLOCK>>8));
   }
   
}
    b494:	df 91       	pop	r29
    b496:	cf 91       	pop	r28
    b498:	08 95       	ret

0000b49a <PatchCommand00>:

/*
 * Command 00: Set envelope speed per frame +127/-128, 0=no enveloppe
 */
void PatchCommand00(struct TrackStruct* track,unsigned char trackNo, char param){
	track->envelopeStep=param;
    b49a:	fc 01       	movw	r30, r24
    b49c:	45 87       	std	Z+13, r20	; 0x0d
}
    b49e:	08 95       	ret

0000b4a0 <PatchCommand01>:
/*
* Command 01: Set noise channel params
*/
void PatchCommand01(struct TrackStruct* track,unsigned char trackNo, char param){
	#if MIXER_CHAN4_TYPE == 0
		mixer.channels.type.noise.barrel=0x0101;
    b4a0:	81 e0       	ldi	r24, 0x01	; 1
    b4a2:	91 e0       	ldi	r25, 0x01	; 1
    b4a4:	90 93 d7 0c 	sts	0x0CD7, r25
    b4a8:	80 93 d6 0c 	sts	0x0CD6, r24
		mixer.channels.type.noise.params=param;
    b4ac:	40 93 d5 0c 	sts	0x0CD5, r20
	#endif
}
    b4b0:	08 95       	ret

0000b4b2 <PatchCommand05>:
	SetMixerNote(trackNo,track->note);
}
/*
* Command 05: End of note/fx
*/
void PatchCommand05(struct TrackStruct* track,unsigned char trackNo, char param){
    b4b2:	fc 01       	movw	r30, r24
	track->flags&=~(TRACK_FLAGS_PLAYING+TRACK_FLAGS_PRIORITY);	//patchPlaying=false,priority=0	
    b4b4:	80 81       	ld	r24, Z
    b4b6:	8f 75       	andi	r24, 0x5F	; 95
    b4b8:	80 83       	st	Z, r24
}
    b4ba:	08 95       	ret

0000b4bc <PatchCommand06>:

/*
* Command 06: Note hold
*/
void PatchCommand06(struct TrackStruct* track,unsigned char trackNo, char param){
    b4bc:	fc 01       	movw	r30, r24
	track->flags|=TRACK_FLAGS_HOLD_ENV; //patchEnvelopeHold=true;
    b4be:	80 81       	ld	r24, Z
    b4c0:	80 64       	ori	r24, 0x40	; 64
    b4c2:	80 83       	st	Z, r24
}
    b4c4:	08 95       	ret

0000b4c6 <PatchCommand07>:
/*
* Command 07: Set envelope volume
*/

void PatchCommand07(struct TrackStruct* track,unsigned char trackNo, char param){
	track->envelopeVol=param;
    b4c6:	fc 01       	movw	r30, r24
    b4c8:	44 87       	std	Z+12, r20	; 0x0c
}
    b4ca:	08 95       	ret

0000b4cc <PatchCommand09>:
/*
* Command 09: Set tremolo level
*/

void PatchCommand09(struct TrackStruct* track,unsigned char trackNo, char param){
	track->tremoloLevel=param;
    b4cc:	fc 01       	movw	r30, r24
    b4ce:	47 83       	std	Z+7, r20	; 0x07
}
    b4d0:	08 95       	ret

0000b4d2 <PatchCommand10>:

/*
* Command 10: Set tremolo rate
*/
void PatchCommand10(struct TrackStruct* track,unsigned char trackNo, char param){
	track->tremoloRate=param;
    b4d2:	fc 01       	movw	r30, r24
    b4d4:	40 87       	std	Z+8, r20	; 0x08
}
    b4d6:	08 95       	ret

0000b4d8 <PatchCommand11>:

/*
* Command 11: Pitch slide (linear), param= (+/-) half steps to slide to
*/

void PatchCommand11(struct TrackStruct* track,unsigned char trackNo, char param){
    b4d8:	1f 93       	push	r17
    b4da:	cf 93       	push	r28
    b4dc:	df 93       	push	r29
    b4de:	ec 01       	movw	r28, r24
    b4e0:	16 2f       	mov	r17, r22
	//slide to note from current note
	s16 currentStep,targetStep,delta;	
	
	currentStep=pgm_read_word(&(steptable[track->note]));
    b4e2:	89 81       	ldd	r24, Y+1	; 0x01
    b4e4:	90 e0       	ldi	r25, 0x00	; 0
    b4e6:	fc 01       	movw	r30, r24
    b4e8:	ee 0f       	add	r30, r30
    b4ea:	ff 1f       	adc	r31, r31
    b4ec:	e8 5f       	subi	r30, 0xF8	; 248
    b4ee:	f1 44       	sbci	r31, 0x41	; 65
    b4f0:	25 91       	lpm	r18, Z+
    b4f2:	34 91       	lpm	r19, Z+
	targetStep=pgm_read_word(&(steptable[track->note+param]));	
    b4f4:	e4 2f       	mov	r30, r20
    b4f6:	ff 27       	eor	r31, r31
    b4f8:	e7 fd       	sbrc	r30, 7
    b4fa:	f0 95       	com	r31
    b4fc:	e8 0f       	add	r30, r24
    b4fe:	f9 1f       	adc	r31, r25
    b500:	ee 0f       	add	r30, r30
    b502:	ff 1f       	adc	r31, r31
    b504:	e8 5f       	subi	r30, 0xF8	; 248
    b506:	f1 44       	sbci	r31, 0x41	; 65
    b508:	85 91       	lpm	r24, Z+
    b50a:	94 91       	lpm	r25, Z+
	delta=((targetStep-currentStep)/tracks->slideSpeed);
    b50c:	60 91 f1 0c 	lds	r22, 0x0CF1
    b510:	82 1b       	sub	r24, r18
    b512:	93 0b       	sbc	r25, r19
    b514:	70 e0       	ldi	r23, 0x00	; 0
    b516:	0e 94 23 77 	call	0xee46	; 0xee46 <__divmodhi4>
    b51a:	9b 01       	movw	r18, r22
	if(delta==0)delta++;
    b51c:	61 15       	cp	r22, r1
    b51e:	71 05       	cpc	r23, r1
    b520:	11 f4       	brne	.+4      	; 0xb526 <PatchCommand11+0x4e>
    b522:	21 e0       	ldi	r18, 0x01	; 1
    b524:	30 e0       	ldi	r19, 0x00	; 0

	mixer.channels.all[trackNo].step+=delta;
    b526:	81 2f       	mov	r24, r17
    b528:	90 e0       	ldi	r25, 0x00	; 0
    b52a:	fc 01       	movw	r30, r24
    b52c:	ee 0f       	add	r30, r30
    b52e:	ff 1f       	adc	r31, r31
    b530:	e8 0f       	add	r30, r24
    b532:	f9 1f       	adc	r31, r25
    b534:	ee 0f       	add	r30, r30
    b536:	ff 1f       	adc	r31, r31
    b538:	ee 53       	subi	r30, 0x3E	; 62
    b53a:	f3 4f       	sbci	r31, 0xF3	; 243
    b53c:	81 81       	ldd	r24, Z+1	; 0x01
    b53e:	92 81       	ldd	r25, Z+2	; 0x02
    b540:	82 0f       	add	r24, r18
    b542:	93 1f       	adc	r25, r19
    b544:	92 83       	std	Z+2, r25	; 0x02
    b546:	81 83       	std	Z+1, r24	; 0x01
	
	track->slideStep=delta;
    b548:	3b 83       	std	Y+3, r19	; 0x03
    b54a:	2a 83       	std	Y+2, r18	; 0x02
	track->flags|=TRACK_FLAGS_SLIDING;
    b54c:	88 81       	ld	r24, Y
    b54e:	88 60       	ori	r24, 0x08	; 8
    b550:	88 83       	st	Y, r24
	track->slideNote=track->note+param;
    b552:	89 81       	ldd	r24, Y+1	; 0x01
    b554:	84 0f       	add	r24, r20
    b556:	8c 83       	std	Y+4, r24	; 0x04
}
    b558:	df 91       	pop	r29
    b55a:	cf 91       	pop	r28
    b55c:	1f 91       	pop	r17
    b55e:	08 95       	ret

0000b560 <PatchCommand12>:

/*
* Command 12: Pitch slide speed (fixed 4:4)
*/
void PatchCommand12(struct TrackStruct* track,unsigned char trackNo, char param){
	tracks->slideSpeed=param;
    b560:	40 93 f1 0c 	sts	0x0CF1, r20
}
    b564:	08 95       	ret

0000b566 <InitMusicPlayer>:

const struct PatchStruct *patchPointers;

void InitMusicPlayer(const struct PatchStruct *patchPointersParam){

	patchPointers=patchPointersParam;
    b566:	90 93 5d 0d 	sts	0x0D5D, r25
    b56a:	80 93 5c 0d 	sts	0x0D5C, r24

	masterVolume=DEFAULT_MASTER_VOL;
    b56e:	8f e6       	ldi	r24, 0x6F	; 111
    b570:	80 93 5f 0d 	sts	0x0D5F, r24
#if MIDI_IN == ENABLED
	UartInitRxBuffer();
	lastMidiInStatus=0;
#endif

	playSong=false;
    b574:	10 92 c0 0c 	sts	0x0CC0, r1
    b578:	ec ee       	ldi	r30, 0xEC	; 236
    b57a:	fc e0       	ldi	r31, 0x0C	; 12

	//initialize default channels patches			
	for(unsigned char t=0;t<CHANNELS;t++){		
		tracks[t].flags=TRACK_FLAGS_ALLOCATED;	//allocated=true,priority=0
    b57c:	90 e1       	ldi	r25, 0x10	; 16
		tracks[t].noteVol=0;
		tracks[t].expressionVol=DEFAULT_EXPRESSION_VOL;
    b57e:	8f ef       	ldi	r24, 0xFF	; 255
		tracks[t].trackVol=DEFAULT_TRACK_VOL;
		tracks[t].patchNo=DEFAULT_PATCH;
		tracks[t].tremoloRate=24; //~6hz
    b580:	28 e1       	ldi	r18, 0x18	; 24

	playSong=false;

	//initialize default channels patches			
	for(unsigned char t=0;t<CHANNELS;t++){		
		tracks[t].flags=TRACK_FLAGS_ALLOCATED;	//allocated=true,priority=0
    b582:	90 83       	st	Z, r25
		tracks[t].noteVol=0;
    b584:	13 86       	std	Z+11, r1	; 0x0b
		tracks[t].expressionVol=DEFAULT_EXPRESSION_VOL;
    b586:	81 87       	std	Z+9, r24	; 0x09
		tracks[t].trackVol=DEFAULT_TRACK_VOL;
    b588:	82 87       	std	Z+10, r24	; 0x0a
		tracks[t].patchNo=DEFAULT_PATCH;
    b58a:	16 86       	std	Z+14, r1	; 0x0e
		tracks[t].tremoloRate=24; //~6hz
    b58c:	20 87       	std	Z+8, r18	; 0x08
		tracks[t].slideSpeed=0x10;
    b58e:	95 83       	std	Z+5, r25	; 0x05
    b590:	76 96       	adiw	r30, 0x16	; 22
#endif

	playSong=false;

	//initialize default channels patches			
	for(unsigned char t=0;t<CHANNELS;t++){		
    b592:	3d e0       	ldi	r19, 0x0D	; 13
    b594:	ea 35       	cpi	r30, 0x5A	; 90
    b596:	f3 07       	cpc	r31, r19
    b598:	a1 f7       	brne	.-24     	; 0xb582 <InitMusicPlayer+0x1c>
		tracks[t].patchNo=DEFAULT_PATCH;
		tracks[t].tremoloRate=24; //~6hz
		tracks[t].slideSpeed=0x10;
	}

}
    b59a:	08 95       	ret

0000b59c <StartSong>:

void StartSong(const char *midiSong){
    b59c:	9c 01       	movw	r18, r24
    b59e:	ec ee       	ldi	r30, 0xEC	; 236
    b5a0:	fc e0       	ldi	r31, 0x0C	; 12
	for(unsigned char t=0;t<CHANNELS;t++){
		tracks[t].flags&=(~TRACK_FLAGS_PRIORITY);// priority=0;	
    b5a2:	80 81       	ld	r24, Z
    b5a4:	8f 77       	andi	r24, 0x7F	; 127
    b5a6:	80 83       	st	Z, r24
    b5a8:	76 96       	adiw	r30, 0x16	; 22
	}

}

void StartSong(const char *midiSong){
	for(unsigned char t=0;t<CHANNELS;t++){
    b5aa:	8d e0       	ldi	r24, 0x0D	; 13
    b5ac:	ea 35       	cpi	r30, 0x5A	; 90
    b5ae:	f8 07       	cpc	r31, r24
    b5b0:	c1 f7       	brne	.-16     	; 0xb5a2 <StartSong+0x6>
		tracks[t].flags&=(~TRACK_FLAGS_PRIORITY);// priority=0;	
	}

	songPos=midiSong+1; //skip first delta-time
    b5b2:	c9 01       	movw	r24, r18
    b5b4:	01 96       	adiw	r24, 0x01	; 1
    b5b6:	90 93 64 0d 	sts	0x0D64, r25
    b5ba:	80 93 63 0d 	sts	0x0D63, r24
	songStart=midiSong+1;//skip first delta-time
    b5be:	90 93 eb 0c 	sts	0x0CEB, r25
    b5c2:	80 93 ea 0c 	sts	0x0CEA, r24
	loopStart=midiSong+1;
    b5c6:	90 93 66 0d 	sts	0x0D66, r25
    b5ca:	80 93 65 0d 	sts	0x0D65, r24
	nextDeltaTime=0;
    b5ce:	10 92 61 0d 	sts	0x0D61, r1
    b5d2:	10 92 60 0d 	sts	0x0D60, r1
	currDeltaTime=0;
    b5d6:	10 92 5b 0d 	sts	0x0D5B, r1
    b5da:	10 92 5a 0d 	sts	0x0D5A, r1
	lastStatus=0;
    b5de:	10 92 5e 0d 	sts	0x0D5E, r1
	songSpeed=0;
    b5e2:	10 92 62 0d 	sts	0x0D62, r1
	playSong=true;
    b5e6:	81 e0       	ldi	r24, 0x01	; 1
    b5e8:	80 93 c0 0c 	sts	0x0CC0, r24
}
    b5ec:	08 95       	ret

0000b5ee <StopSong>:


void StopSong(){

	for(u8 i=0;i<CHANNELS;i++){
		tracks[i].envelopeStep=-6;
    b5ee:	8a ef       	ldi	r24, 0xFA	; 250
    b5f0:	80 93 f9 0c 	sts	0x0CF9, r24
    b5f4:	80 93 0f 0d 	sts	0x0D0F, r24
    b5f8:	80 93 25 0d 	sts	0x0D25, r24
    b5fc:	80 93 3b 0d 	sts	0x0D3B, r24
    b600:	80 93 51 0d 	sts	0x0D51, r24
	}

	playSong=false;
    b604:	10 92 c0 0c 	sts	0x0CC0, r1
}
    b608:	08 95       	ret

0000b60a <ReadVarLen>:
}



unsigned int ReadVarLen(const char **songPos)
{
    b60a:	dc 01       	movw	r26, r24
    unsigned int value;
    unsigned char c;


    if ( (value = pgm_read_byte((*songPos)++)) & 0x80 )
    b60c:	ed 91       	ld	r30, X+
    b60e:	fc 91       	ld	r31, X
    b610:	11 97       	sbiw	r26, 0x01	; 1
    b612:	af 01       	movw	r20, r30
    b614:	4f 5f       	subi	r20, 0xFF	; 255
    b616:	5f 4f       	sbci	r21, 0xFF	; 255
    b618:	11 96       	adiw	r26, 0x01	; 1
    b61a:	5c 93       	st	X, r21
    b61c:	4e 93       	st	-X, r20
    b61e:	e4 91       	lpm	r30, Z+
    b620:	2e 2f       	mov	r18, r30
    b622:	30 e0       	ldi	r19, 0x00	; 0
    b624:	e7 ff       	sbrs	r30, 7
    b626:	13 c0       	rjmp	.+38     	; 0xb64e <ReadVarLen+0x44>
    {
       value &= 0x7F;
    b628:	2f 77       	andi	r18, 0x7F	; 127
    b62a:	30 70       	andi	r19, 0x00	; 0
       do
       {
         value = (value << 7) + ((c = pgm_read_byte((*songPos)++)) & 0x7F);
    b62c:	36 95       	lsr	r19
    b62e:	32 2f       	mov	r19, r18
    b630:	22 27       	eor	r18, r18
    b632:	37 95       	ror	r19
    b634:	27 95       	ror	r18
    b636:	fa 01       	movw	r30, r20
    b638:	4f 5f       	subi	r20, 0xFF	; 255
    b63a:	5f 4f       	sbci	r21, 0xFF	; 255
    b63c:	e4 91       	lpm	r30, Z+
    b63e:	8e 2f       	mov	r24, r30
    b640:	8f 77       	andi	r24, 0x7F	; 127
    b642:	28 0f       	add	r18, r24
    b644:	31 1d       	adc	r19, r1
       } while (c & 0x80);
    b646:	e7 fd       	sbrc	r30, 7
    b648:	f1 cf       	rjmp	.-30     	; 0xb62c <ReadVarLen+0x22>
    b64a:	4d 93       	st	X+, r20
    b64c:	5c 93       	st	X, r21
    }


    return value;
}
    b64e:	c9 01       	movw	r24, r18
    b650:	08 95       	ret

0000b652 <SetMasterVolume>:
}



void SetMasterVolume(unsigned char vol){
	masterVolume=vol;
    b652:	80 93 5f 0d 	sts	0x0D5F, r24
}
    b656:	08 95       	ret

0000b658 <PatchCommand08>:

/*
* Command 08: Set Note/Pitch
*/

void PatchCommand08(struct TrackStruct* track,unsigned char trackNo, char param){
    b658:	ff 92       	push	r15
    b65a:	0f 93       	push	r16
    b65c:	1f 93       	push	r17
    b65e:	8c 01       	movw	r16, r24
    b660:	86 2f       	mov	r24, r22
    b662:	f4 2e       	mov	r15, r20
	SetMixerNote(trackNo,param);
    b664:	64 2f       	mov	r22, r20
    b666:	0e 94 9a 5e 	call	0xbd34	; 0xbd34 <SetMixerNote>
	track->note=param;
    b66a:	f8 01       	movw	r30, r16
    b66c:	f1 82       	std	Z+1, r15	; 0x01
	track->flags &= ~(TRACK_FLAGS_SLIDING);	
    b66e:	80 81       	ld	r24, Z
    b670:	87 7f       	andi	r24, 0xF7	; 247
    b672:	80 83       	st	Z, r24
}
    b674:	1f 91       	pop	r17
    b676:	0f 91       	pop	r16
    b678:	ff 90       	pop	r15
    b67a:	08 95       	ret

0000b67c <PatchCommand04>:
	SetMixerNote(trackNo,track->note);
}
/*
* Command 04: Note down * param
*/
void PatchCommand04(struct TrackStruct* track,unsigned char trackNo, char param){
    b67c:	fc 01       	movw	r30, r24
    b67e:	86 2f       	mov	r24, r22
	track->note-=param;
    b680:	61 81       	ldd	r22, Z+1	; 0x01
    b682:	64 1b       	sub	r22, r20
    b684:	61 83       	std	Z+1, r22	; 0x01
	SetMixerNote(trackNo,track->note);
    b686:	0e 94 9a 5e 	call	0xbd34	; 0xbd34 <SetMixerNote>
}
    b68a:	08 95       	ret

0000b68c <PatchCommand03>:
	SetMixerWave(trackNo,param);
}
/*
* Command 03: Note up * param
*/
void PatchCommand03(struct TrackStruct* track,unsigned char trackNo, char param){
    b68c:	fc 01       	movw	r30, r24
    b68e:	86 2f       	mov	r24, r22
	track->note+=param;
    b690:	91 81       	ldd	r25, Z+1	; 0x01
    b692:	49 0f       	add	r20, r25
    b694:	41 83       	std	Z+1, r20	; 0x01
	SetMixerNote(trackNo,track->note);
    b696:	64 2f       	mov	r22, r20
    b698:	0e 94 9a 5e 	call	0xbd34	; 0xbd34 <SetMixerNote>
}
    b69c:	08 95       	ret

0000b69e <TriggerCommon>:
}




void TriggerCommon(u8 channel,u8 patch,u8 volume,u8 note){
    b69e:	ef 92       	push	r14
    b6a0:	ff 92       	push	r15
    b6a2:	0f 93       	push	r16
    b6a4:	1f 93       	push	r17
    b6a6:	cf 93       	push	r28
    b6a8:	df 93       	push	r29
    b6aa:	18 2f       	mov	r17, r24
    b6ac:	f6 2e       	mov	r15, r22
    b6ae:	02 2f       	mov	r16, r18
	struct TrackStruct* track=&tracks[channel];
    b6b0:	86 e1       	ldi	r24, 0x16	; 22
    b6b2:	18 9f       	mul	r17, r24
    b6b4:	e0 01       	movw	r28, r0
    b6b6:	11 24       	eor	r1, r1
    b6b8:	c4 51       	subi	r28, 0x14	; 20
    b6ba:	d3 4f       	sbci	r29, 0xF3	; 243
		
	bool isFx = (track->flags&TRACK_FLAGS_PRIORITY);
    b6bc:	ee 24       	eor	r14, r14
    b6be:	88 81       	ld	r24, Y
    b6c0:	87 ff       	sbrs	r24, 7
    b6c2:	02 c0       	rjmp	.+4      	; 0xb6c8 <TriggerCommon+0x2a>
    b6c4:	ee 24       	eor	r14, r14
    b6c6:	e3 94       	inc	r14

	track->patchCurrDeltaTime=0;
    b6c8:	1a 8a       	std	Y+18, r1	; 0x12
	track->envelopeStep=0; 
    b6ca:	1d 86       	std	Y+13, r1	; 0x0d
	track->envelopeVol=0xff; 
    b6cc:	9f ef       	ldi	r25, 0xFF	; 255
    b6ce:	9c 87       	std	Y+12, r25	; 0x0c
	track->noteVol=volume;
    b6d0:	4b 87       	std	Y+11, r20	; 0x0b
	track->patchPlayingTime=0;
    b6d2:	1b 8a       	std	Y+19, r1	; 0x13
	track->flags|=TRACK_FLAGS_PLAYING;
	track->flags&=(~(TRACK_FLAGS_HOLD_ENV|TRACK_FLAGS_SLIDING));
    b6d4:	88 81       	ld	r24, Y
    b6d6:	80 62       	ori	r24, 0x20	; 32
    b6d8:	87 7b       	andi	r24, 0xB7	; 183
    b6da:	88 83       	st	Y, r24
	track->tremoloLevel=0;
    b6dc:	1f 82       	std	Y+7, r1	; 0x07
	track->expressionVol=DEFAULT_EXPRESSION_VOL;
    b6de:	99 87       	std	Y+9, r25	; 0x09
	track->note=note;
    b6e0:	09 83       	std	Y+1, r16	; 0x01


	#if SOUND_MIXER == MIXER_TYPE_INLINE

		if(channel==3){
    b6e2:	13 30       	cpi	r17, 0x03	; 3
    b6e4:	69 f4       	brne	.+26     	; 0xb700 <TriggerCommon+0x62>
			//noise channel		
			if(!isFx) patch=note;			
    b6e6:	ee 20       	and	r14, r14
    b6e8:	09 f4       	brne	.+2      	; 0xb6ec <TriggerCommon+0x4e>
    b6ea:	f0 2e       	mov	r15, r16
			mixer.channels.type.noise.barrel=0x0101;				
    b6ec:	81 e0       	ldi	r24, 0x01	; 1
    b6ee:	91 e0       	ldi	r25, 0x01	; 1
    b6f0:	90 93 d7 0c 	sts	0x0CD7, r25
    b6f4:	80 93 d6 0c 	sts	0x0CD6, r24
			mixer.channels.type.noise.params=1; //default (15bits,no divider)
    b6f8:	81 e0       	ldi	r24, 0x01	; 1
    b6fa:	80 93 d5 0c 	sts	0x0CD5, r24
    b6fe:	34 c0       	rjmp	.+104    	; 0xb768 <TriggerCommon+0xca>

		#if SOUND_CHANNEL_5_ENABLE==1		

		}else if(channel==4){
    b700:	14 30       	cpi	r17, 0x04	; 4
    b702:	51 f5       	brne	.+84     	; 0xb758 <TriggerCommon+0xba>
				//PCM channel					
				mixer.channels.type.pcm.positionFrac=0;
    b704:	10 92 dd 0c 	sts	0x0CDD, r1
				const char *pos=(const char*)pgm_read_word(&(patchPointers[patch].pcmData));
    b708:	89 e0       	ldi	r24, 0x09	; 9
    b70a:	f8 9e       	mul	r15, r24
    b70c:	c0 01       	movw	r24, r0
    b70e:	11 24       	eor	r1, r1
    b710:	20 91 5c 0d 	lds	r18, 0x0D5C
    b714:	30 91 5d 0d 	lds	r19, 0x0D5D
    b718:	28 0f       	add	r18, r24
    b71a:	39 1f       	adc	r19, r25
    b71c:	f9 01       	movw	r30, r18
    b71e:	31 96       	adiw	r30, 0x01	; 1
    b720:	45 91       	lpm	r20, Z+
    b722:	54 91       	lpm	r21, Z+
				mixer.channels.type.pcm.position=pos;
    b724:	50 93 df 0c 	sts	0x0CDF, r21
    b728:	40 93 de 0c 	sts	0x0CDE, r20
				mixer.pcmLoopStart=pos+pgm_read_word(&(patchPointers[patch].loopStart));
    b72c:	f9 01       	movw	r30, r18
    b72e:	35 96       	adiw	r30, 0x05	; 5
    b730:	85 91       	lpm	r24, Z+
    b732:	94 91       	lpm	r25, Z+
    b734:	84 0f       	add	r24, r20
    b736:	95 1f       	adc	r25, r21
    b738:	90 93 e1 0c 	sts	0x0CE1, r25
    b73c:	80 93 e0 0c 	sts	0x0CE0, r24
				mixer.pcmLoopEnd=pos+pgm_read_word(&(patchPointers[patch].loopEnd));
    b740:	f9 01       	movw	r30, r18
    b742:	37 96       	adiw	r30, 0x07	; 7
    b744:	85 91       	lpm	r24, Z+
    b746:	94 91       	lpm	r25, Z+
    b748:	48 0f       	add	r20, r24
    b74a:	59 1f       	adc	r21, r25
    b74c:	50 93 e3 0c 	sts	0x0CE3, r21
    b750:	40 93 e2 0c 	sts	0x0CE2, r20
				SetMixerNote(channel,note);
    b754:	84 e0       	ldi	r24, 0x04	; 4
    b756:	05 c0       	rjmp	.+10     	; 0xb762 <TriggerCommon+0xc4>
		#endif	

		}else{					
			//wave channels					
			SetMixerWave(channel,0);//default wave
    b758:	81 2f       	mov	r24, r17
    b75a:	60 e0       	ldi	r22, 0x00	; 0
    b75c:	0e 94 b1 5e 	call	0xbd62	; 0xbd62 <SetMixerWave>
			SetMixerNote(channel,note);
    b760:	81 2f       	mov	r24, r17
    b762:	60 2f       	mov	r22, r16
    b764:	0e 94 9a 5e 	call	0xbd34	; 0xbd34 <SetMixerNote>

		#endif

	#endif //SOUND_MIXER == MIXER_TYPE_INLINE

	if(isFx){
    b768:	ee 20       	and	r14, r14
    b76a:	11 f0       	breq	.+4      	; 0xb770 <TriggerCommon+0xd2>
		track->fxPatchNo=patch;
    b76c:	ff 86       	std	Y+15, r15	; 0x0f
    b76e:	01 c0       	rjmp	.+2      	; 0xb772 <TriggerCommon+0xd4>
	}else{
		track->patchNo=patch;	
    b770:	fe 86       	std	Y+14, r15	; 0x0e
	}

	const char *pos = (const char*)pgm_read_word(&(patchPointers[patch].cmdStream));
    b772:	89 e0       	ldi	r24, 0x09	; 9
    b774:	f8 9e       	mul	r15, r24
    b776:	c0 01       	movw	r24, r0
    b778:	11 24       	eor	r1, r1
    b77a:	e0 91 5c 0d 	lds	r30, 0x0D5C
    b77e:	f0 91 5d 0d 	lds	r31, 0x0D5D
    b782:	e8 0f       	add	r30, r24
    b784:	f9 1f       	adc	r31, r25
    b786:	33 96       	adiw	r30, 0x03	; 3
    b788:	25 91       	lpm	r18, Z+
    b78a:	34 91       	lpm	r19, Z+
	if(pos==NULL){
    b78c:	21 15       	cp	r18, r1
    b78e:	31 05       	cpc	r19, r1
    b790:	19 f4       	brne	.+6      	; 0xb798 <TriggerCommon+0xfa>
		track->patchCommandStreamPos=NULL;
    b792:	1d 8a       	std	Y+21, r1	; 0x15
    b794:	1c 8a       	std	Y+20, r1	; 0x14
    b796:	07 c0       	rjmp	.+14     	; 0xb7a6 <TriggerCommon+0x108>
	}else{
		track->patchNextDeltaTime=pgm_read_byte(pos++);
    b798:	f9 01       	movw	r30, r18
    b79a:	84 91       	lpm	r24, Z+
    b79c:	89 8b       	std	Y+17, r24	; 0x11
		track->patchCommandStreamPos=pos;
    b79e:	2f 5f       	subi	r18, 0xFF	; 255
    b7a0:	3f 4f       	sbci	r19, 0xFF	; 255
    b7a2:	3d 8b       	std	Y+21, r19	; 0x15
    b7a4:	2c 8b       	std	Y+20, r18	; 0x14
	}

}
    b7a6:	cd b7       	in	r28, 0x3d	; 61
    b7a8:	de b7       	in	r29, 0x3e	; 62
    b7aa:	e6 e0       	ldi	r30, 0x06	; 6
    b7ac:	0c 94 5e 77 	jmp	0xeebc	; 0xeebc <__epilogue_restores__+0x18>

0000b7b0 <TriggerNote>:
	tracks[channel].flags|=TRACK_FLAGS_PRIORITY; //priority=1;	
	TriggerCommon(channel,patch,volume,80);
}


void TriggerNote(unsigned char channel,unsigned char patch,unsigned char note,unsigned char volume){
    b7b0:	1f 93       	push	r17
    b7b2:	78 2f       	mov	r23, r24
    b7b4:	14 2f       	mov	r17, r20

	//allow only other music notes 
	if((tracks[channel].flags&TRACK_FLAGS_PLAYING)==0 || (tracks[channel].flags&TRACK_FLAGS_PRIORITY)==0){
    b7b6:	a8 2f       	mov	r26, r24
    b7b8:	b0 e0       	ldi	r27, 0x00	; 0
    b7ba:	86 e1       	ldi	r24, 0x16	; 22
    b7bc:	90 e0       	ldi	r25, 0x00	; 0
    b7be:	a8 9f       	mul	r26, r24
    b7c0:	f0 01       	movw	r30, r0
    b7c2:	a9 9f       	mul	r26, r25
    b7c4:	f0 0d       	add	r31, r0
    b7c6:	b8 9f       	mul	r27, r24
    b7c8:	f0 0d       	add	r31, r0
    b7ca:	11 24       	eor	r1, r1
    b7cc:	e4 51       	subi	r30, 0x14	; 20
    b7ce:	f3 4f       	sbci	r31, 0xF3	; 243
    b7d0:	30 81       	ld	r19, Z
    b7d2:	53 2f       	mov	r21, r19
    b7d4:	35 ff       	sbrs	r19, 5
    b7d6:	02 c0       	rjmp	.+4      	; 0xb7dc <TriggerNote+0x2c>
    b7d8:	37 fd       	sbrc	r19, 7
    b7da:	33 c0       	rjmp	.+102    	; 0xb842 <TriggerNote+0x92>
			
		if(volume==0){ //note-off received
    b7dc:	22 23       	and	r18, r18
    b7de:	f9 f4       	brne	.+62     	; 0xb81e <TriggerNote+0x6e>

			
			//cut note if there's no envelope & no note hold
			if(tracks[channel].envelopeStep==0 && !(tracks[channel].flags&TRACK_FLAGS_HOLD_ENV)){
    b7e0:	86 e1       	ldi	r24, 0x16	; 22
    b7e2:	90 e0       	ldi	r25, 0x00	; 0
    b7e4:	a8 9f       	mul	r26, r24
    b7e6:	f0 01       	movw	r30, r0
    b7e8:	a9 9f       	mul	r26, r25
    b7ea:	f0 0d       	add	r31, r0
    b7ec:	b8 9f       	mul	r27, r24
    b7ee:	f0 0d       	add	r31, r0
    b7f0:	11 24       	eor	r1, r1
    b7f2:	e4 51       	subi	r30, 0x14	; 20
    b7f4:	f3 4f       	sbci	r31, 0xF3	; 243
    b7f6:	85 85       	ldd	r24, Z+13	; 0x0d
    b7f8:	88 23       	and	r24, r24
    b7fa:	11 f4       	brne	.+4      	; 0xb800 <TriggerNote+0x50>
    b7fc:	56 ff       	sbrs	r21, 6
				tracks[channel].noteVol=0;	
    b7fe:	13 86       	std	Z+11, r1	; 0x0b
			}

			tracks[channel].flags&=(~TRACK_FLAGS_HOLD_ENV);//patchEnvelopeHold=false;
    b800:	86 e1       	ldi	r24, 0x16	; 22
    b802:	90 e0       	ldi	r25, 0x00	; 0
    b804:	a8 9f       	mul	r26, r24
    b806:	f0 01       	movw	r30, r0
    b808:	a9 9f       	mul	r26, r25
    b80a:	f0 0d       	add	r31, r0
    b80c:	b8 9f       	mul	r27, r24
    b80e:	f0 0d       	add	r31, r0
    b810:	11 24       	eor	r1, r1
    b812:	e4 51       	subi	r30, 0x14	; 20
    b814:	f3 4f       	sbci	r31, 0xF3	; 243
    b816:	80 81       	ld	r24, Z
    b818:	8f 7b       	andi	r24, 0xBF	; 191
    b81a:	80 83       	st	Z, r24
    b81c:	12 c0       	rjmp	.+36     	; 0xb842 <TriggerNote+0x92>
		}else{
		
			tracks[channel].flags&=(~TRACK_FLAGS_PRIORITY);// priority=0;	
    b81e:	86 e1       	ldi	r24, 0x16	; 22
    b820:	90 e0       	ldi	r25, 0x00	; 0
    b822:	a8 9f       	mul	r26, r24
    b824:	f0 01       	movw	r30, r0
    b826:	a9 9f       	mul	r26, r25
    b828:	f0 0d       	add	r31, r0
    b82a:	b8 9f       	mul	r27, r24
    b82c:	f0 0d       	add	r31, r0
    b82e:	11 24       	eor	r1, r1
    b830:	e4 51       	subi	r30, 0x14	; 20
    b832:	f3 4f       	sbci	r31, 0xF3	; 243
    b834:	3f 77       	andi	r19, 0x7F	; 127
    b836:	30 83       	st	Z, r19
			TriggerCommon(channel,patch,volume,note);
    b838:	87 2f       	mov	r24, r23
    b83a:	42 2f       	mov	r20, r18
    b83c:	21 2f       	mov	r18, r17
    b83e:	0e 94 4f 5b 	call	0xb69e	; 0xb69e <TriggerCommon>
		}

	}
}
    b842:	1f 91       	pop	r17
    b844:	08 95       	ret

0000b846 <ProcessMusic>:
	}

#endif


void ProcessMusic(void){
    b846:	af 92       	push	r10
    b848:	bf 92       	push	r11
    b84a:	df 92       	push	r13
    b84c:	ef 92       	push	r14
    b84e:	ff 92       	push	r15
    b850:	0f 93       	push	r16
    b852:	1f 93       	push	r17
    b854:	cf 93       	push	r28
    b856:	df 93       	push	r29
    b858:	ac ee       	ldi	r26, 0xEC	; 236
    b85a:	bc e0       	ldi	r27, 0x0C	; 12
    b85c:	c3 ec       	ldi	r28, 0xC3	; 195
    b85e:	dc e0       	ldi	r29, 0x0C	; 12
	//process patches envelopes & pitch slides
	for(unsigned char trackNo=0;trackNo<CHANNELS;trackNo++){
		track=&tracks[trackNo];

		//update envelope
		if(track->envelopeStep!=0){
    b860:	1d 96       	adiw	r26, 0x0d	; 13
    b862:	8c 91       	ld	r24, X
    b864:	1d 97       	sbiw	r26, 0x0d	; 13
    b866:	88 23       	and	r24, r24
    b868:	b9 f0       	breq	.+46     	; 0xb898 <ProcessMusic+0x52>
			vol=track->envelopeVol+track->envelopeStep;		
    b86a:	28 2f       	mov	r18, r24
    b86c:	33 27       	eor	r19, r19
    b86e:	27 fd       	sbrc	r18, 7
    b870:	30 95       	com	r19
    b872:	1c 96       	adiw	r26, 0x0c	; 12
    b874:	8c 91       	ld	r24, X
    b876:	1c 97       	sbiw	r26, 0x0c	; 12
    b878:	28 0f       	add	r18, r24
    b87a:	31 1d       	adc	r19, r1
    b87c:	2f 3f       	cpi	r18, 0xFF	; 255
    b87e:	31 05       	cpc	r19, r1
    b880:	19 f0       	breq	.+6      	; 0xb888 <ProcessMusic+0x42>
    b882:	14 f0       	brlt	.+4      	; 0xb888 <ProcessMusic+0x42>
    b884:	2f ef       	ldi	r18, 0xFF	; 255
    b886:	30 e0       	ldi	r19, 0x00	; 0
			if(vol<0){
				vol=0;			
			}else if(vol>0xff){
				vol=0xff;						
			}
			track->envelopeVol=vol;
    b888:	c9 01       	movw	r24, r18
    b88a:	37 ff       	sbrs	r19, 7
    b88c:	02 c0       	rjmp	.+4      	; 0xb892 <ProcessMusic+0x4c>
    b88e:	80 e0       	ldi	r24, 0x00	; 0
    b890:	90 e0       	ldi	r25, 0x00	; 0
    b892:	1c 96       	adiw	r26, 0x0c	; 12
    b894:	8c 93       	st	X, r24
    b896:	1c 97       	sbiw	r26, 0x0c	; 12
		}
	
		if(track->flags & TRACK_FLAGS_SLIDING){
    b898:	8c 91       	ld	r24, X
    b89a:	83 ff       	sbrs	r24, 3
    b89c:	26 c0       	rjmp	.+76     	; 0xb8ea <ProcessMusic+0xa4>

			mixer.channels.all[trackNo].step+=track->slideStep;
    b89e:	12 96       	adiw	r26, 0x02	; 2
    b8a0:	4d 91       	ld	r20, X+
    b8a2:	5c 91       	ld	r21, X
    b8a4:	13 97       	sbiw	r26, 0x03	; 3
    b8a6:	28 81       	ld	r18, Y
    b8a8:	39 81       	ldd	r19, Y+1	; 0x01
    b8aa:	24 0f       	add	r18, r20
    b8ac:	35 1f       	adc	r19, r21
    b8ae:	39 83       	std	Y+1, r19	; 0x01
    b8b0:	28 83       	st	Y, r18
			u16 tStep=pgm_read_word(&(steptable[track->slideNote]));
    b8b2:	14 96       	adiw	r26, 0x04	; 4
    b8b4:	8c 91       	ld	r24, X
    b8b6:	14 97       	sbiw	r26, 0x04	; 4
    b8b8:	e8 2f       	mov	r30, r24
    b8ba:	f0 e0       	ldi	r31, 0x00	; 0
    b8bc:	ee 0f       	add	r30, r30
    b8be:	ff 1f       	adc	r31, r31
    b8c0:	e8 5f       	subi	r30, 0xF8	; 248
    b8c2:	f1 44       	sbci	r31, 0x41	; 65
    b8c4:	85 91       	lpm	r24, Z+
    b8c6:	94 91       	lpm	r25, Z+

			if((track->slideStep>0 && mixer.channels.all[trackNo].step>=tStep) || 
    b8c8:	14 16       	cp	r1, r20
    b8ca:	15 06       	cpc	r1, r21
    b8cc:	24 f4       	brge	.+8      	; 0xb8d6 <ProcessMusic+0x90>
    b8ce:	28 17       	cp	r18, r24
    b8d0:	39 07       	cpc	r19, r25
    b8d2:	30 f4       	brcc	.+12     	; 0xb8e0 <ProcessMusic+0x9a>
    b8d4:	0a c0       	rjmp	.+20     	; 0xb8ea <ProcessMusic+0xa4>
    b8d6:	45 2b       	or	r20, r21
    b8d8:	41 f0       	breq	.+16     	; 0xb8ea <ProcessMusic+0xa4>
    b8da:	82 17       	cp	r24, r18
    b8dc:	93 07       	cpc	r25, r19
    b8de:	28 f0       	brcs	.+10     	; 0xb8ea <ProcessMusic+0xa4>
				(track->slideStep<0 && mixer.channels.all[trackNo].step<=tStep))
			{					
				mixer.channels.all[trackNo].step = tStep;					
    b8e0:	99 83       	std	Y+1, r25	; 0x01
    b8e2:	88 83       	st	Y, r24
				track->flags &= ~(TRACK_FLAGS_SLIDING);	
    b8e4:	8c 91       	ld	r24, X
    b8e6:	87 7f       	andi	r24, 0xF7	; 247
    b8e8:	8c 93       	st	X, r24
    b8ea:	56 96       	adiw	r26, 0x16	; 22
    b8ec:	26 96       	adiw	r28, 0x06	; 6
	u16 uVol,tVol;
	struct TrackStruct* track;


	//process patches envelopes & pitch slides
	for(unsigned char trackNo=0;trackNo<CHANNELS;trackNo++){
    b8ee:	2d e0       	ldi	r18, 0x0D	; 13
    b8f0:	aa 35       	cpi	r26, 0x5A	; 90
    b8f2:	b2 07       	cpc	r27, r18
    b8f4:	09 f0       	breq	.+2      	; 0xb8f8 <ProcessMusic+0xb2>
    b8f6:	b4 cf       	rjmp	.-152    	; 0xb860 <ProcessMusic+0x1a>
	}



	//Process song MIDI notes
	if(playSong){
    b8f8:	80 91 c0 0c 	lds	r24, 0x0CC0
    b8fc:	88 23       	and	r24, r24
    b8fe:	09 f0       	breq	.+2      	; 0xb902 <ProcessMusic+0xbc>
    b900:	de c0       	rjmp	.+444    	; 0xbabe <ProcessMusic+0x278>
    b902:	f6 c0       	rjmp	.+492    	; 0xbaf0 <ProcessMusic+0x2aa>
		//process all simultaneous events
		while(currDeltaTime==nextDeltaTime){

			c1=pgm_read_byte(songPos++);
    b904:	e0 91 63 0d 	lds	r30, 0x0D63
    b908:	f0 91 64 0d 	lds	r31, 0x0D64
    b90c:	cf 01       	movw	r24, r30
    b90e:	01 96       	adiw	r24, 0x01	; 1
    b910:	90 93 64 0d 	sts	0x0D64, r25
    b914:	80 93 63 0d 	sts	0x0D63, r24
    b918:	44 91       	lpm	r20, Z+
			
			if(c1==0xff){
    b91a:	4f 3f       	cpi	r20, 0xFF	; 255
    b91c:	69 f5       	brne	.+90     	; 0xb978 <ProcessMusic+0x132>
				//META data type event
				c1=pgm_read_byte(songPos++);
    b91e:	ac 01       	movw	r20, r24
    b920:	4f 5f       	subi	r20, 0xFF	; 255
    b922:	5f 4f       	sbci	r21, 0xFF	; 255
    b924:	50 93 64 0d 	sts	0x0D64, r21
    b928:	40 93 63 0d 	sts	0x0D63, r20
    b92c:	fc 01       	movw	r30, r24
    b92e:	84 91       	lpm	r24, Z+

				
				if(c1==0x2f){ //end of song
    b930:	8f 32       	cpi	r24, 0x2F	; 47
    b932:	19 f4       	brne	.+6      	; 0xb93a <ProcessMusic+0xf4>
					playSong=false;
    b934:	10 92 c0 0c 	sts	0x0CC0, r1
    b938:	d0 c0       	rjmp	.+416    	; 0xbada <ProcessMusic+0x294>
					break;	
				}else if(c1==0x6){ //marker
    b93a:	86 30       	cpi	r24, 0x06	; 6
    b93c:	09 f0       	breq	.+2      	; 0xb940 <ProcessMusic+0xfa>
    b93e:	b2 c0       	rjmp	.+356    	; 0xbaa4 <ProcessMusic+0x25e>
					c1=pgm_read_byte(songPos++); //read len
    b940:	fa 01       	movw	r30, r20
    b942:	31 96       	adiw	r30, 0x01	; 1
					c2=pgm_read_byte(songPos++); //read data
    b944:	cf 01       	movw	r24, r30
    b946:	01 96       	adiw	r24, 0x01	; 1
    b948:	90 93 64 0d 	sts	0x0D64, r25
    b94c:	80 93 63 0d 	sts	0x0D63, r24
    b950:	e4 91       	lpm	r30, Z+
					if(c2=='S'){ //loop start
    b952:	e3 35       	cpi	r30, 0x53	; 83
    b954:	29 f4       	brne	.+10     	; 0xb960 <ProcessMusic+0x11a>
						loopStart=songPos;
    b956:	90 93 66 0d 	sts	0x0D66, r25
    b95a:	80 93 65 0d 	sts	0x0D65, r24
    b95e:	a2 c0       	rjmp	.+324    	; 0xbaa4 <ProcessMusic+0x25e>
					}else if(c2=='E'){//loop end
    b960:	e5 34       	cpi	r30, 0x45	; 69
    b962:	09 f0       	breq	.+2      	; 0xb966 <ProcessMusic+0x120>
    b964:	9f c0       	rjmp	.+318    	; 0xbaa4 <ProcessMusic+0x25e>
						songPos=loopStart;
    b966:	80 91 65 0d 	lds	r24, 0x0D65
    b96a:	90 91 66 0d 	lds	r25, 0x0D66
    b96e:	90 93 64 0d 	sts	0x0D64, r25
    b972:	80 93 63 0d 	sts	0x0D63, r24
    b976:	96 c0       	rjmp	.+300    	; 0xbaa4 <ProcessMusic+0x25e>
				}
				

			}else{

				if(c1&0x80) lastStatus=c1;					
    b978:	47 ff       	sbrs	r20, 7
    b97a:	02 c0       	rjmp	.+4      	; 0xb980 <ProcessMusic+0x13a>
    b97c:	40 93 5e 0d 	sts	0x0D5E, r20
				channel=lastStatus&0x0f;
    b980:	20 91 5e 0d 	lds	r18, 0x0D5E
    b984:	32 2f       	mov	r19, r18
    b986:	3f 70       	andi	r19, 0x0F	; 15
				
				//get next data byte
				//Note: maybe we should not advance the cursor
				//in case we receive an unsupported command				
				if(c1&0x80) c1=pgm_read_byte(songPos++); 
    b988:	47 ff       	sbrs	r20, 7
    b98a:	08 c0       	rjmp	.+16     	; 0xb99c <ProcessMusic+0x156>
    b98c:	01 96       	adiw	r24, 0x01	; 1
    b98e:	90 93 64 0d 	sts	0x0D64, r25
    b992:	80 93 63 0d 	sts	0x0D63, r24
    b996:	01 97       	sbiw	r24, 0x01	; 1
    b998:	fc 01       	movw	r30, r24
    b99a:	44 91       	lpm	r20, Z+

				switch(lastStatus&0xf0){
    b99c:	82 2f       	mov	r24, r18
    b99e:	90 e0       	ldi	r25, 0x00	; 0
    b9a0:	80 7f       	andi	r24, 0xF0	; 240
    b9a2:	90 70       	andi	r25, 0x00	; 0
    b9a4:	80 3b       	cpi	r24, 0xB0	; 176
    b9a6:	91 05       	cpc	r25, r1
    b9a8:	31 f1       	breq	.+76     	; 0xb9f6 <ProcessMusic+0x1b0>
    b9aa:	80 3c       	cpi	r24, 0xC0	; 192
    b9ac:	91 05       	cpc	r25, r1
    b9ae:	09 f4       	brne	.+2      	; 0xb9b2 <ProcessMusic+0x16c>
    b9b0:	6d c0       	rjmp	.+218    	; 0xba8c <ProcessMusic+0x246>
    b9b2:	80 39       	cpi	r24, 0x90	; 144
    b9b4:	91 05       	cpc	r25, r1
    b9b6:	09 f0       	breq	.+2      	; 0xb9ba <ProcessMusic+0x174>
    b9b8:	75 c0       	rjmp	.+234    	; 0xbaa4 <ProcessMusic+0x25e>

					//note-on
					case 0x90:
						//c1 = note						
						c2=pgm_read_byte(songPos++)<<1; //get volume
    b9ba:	e0 91 63 0d 	lds	r30, 0x0D63
    b9be:	f0 91 64 0d 	lds	r31, 0x0D64
    b9c2:	31 96       	adiw	r30, 0x01	; 1
    b9c4:	f0 93 64 0d 	sts	0x0D64, r31
    b9c8:	e0 93 63 0d 	sts	0x0D63, r30
    b9cc:	31 97       	sbiw	r30, 0x01	; 1
    b9ce:	e4 91       	lpm	r30, Z+
						
						if(tracks[channel].flags|TRACK_FLAGS_ALLOCATED){ //allocated==true
							TriggerNote(channel,tracks[channel].patchNo,c1,c2);
    b9d0:	83 2f       	mov	r24, r19
    b9d2:	90 e0       	ldi	r25, 0x00	; 0
    b9d4:	8c 9f       	mul	r24, r28
    b9d6:	d0 01       	movw	r26, r0
    b9d8:	8d 9f       	mul	r24, r29
    b9da:	b0 0d       	add	r27, r0
    b9dc:	9c 9f       	mul	r25, r28
    b9de:	b0 0d       	add	r27, r0
    b9e0:	11 24       	eor	r1, r1
    b9e2:	a4 51       	subi	r26, 0x14	; 20
    b9e4:	b3 4f       	sbci	r27, 0xF3	; 243
    b9e6:	ee 0f       	add	r30, r30
    b9e8:	83 2f       	mov	r24, r19
    b9ea:	1e 96       	adiw	r26, 0x0e	; 14
    b9ec:	6c 91       	ld	r22, X
    b9ee:	2e 2f       	mov	r18, r30
    b9f0:	0e 94 d8 5b 	call	0xb7b0	; 0xb7b0 <TriggerNote>
    b9f4:	57 c0       	rjmp	.+174    	; 0xbaa4 <ProcessMusic+0x25e>
						break;

					//controllers
					case 0xb0:
						///c1 = controller #
						c2=pgm_read_byte(songPos++); //get controller value
    b9f6:	e0 91 63 0d 	lds	r30, 0x0D63
    b9fa:	f0 91 64 0d 	lds	r31, 0x0D64
    b9fe:	31 96       	adiw	r30, 0x01	; 1
    ba00:	f0 93 64 0d 	sts	0x0D64, r31
    ba04:	e0 93 63 0d 	sts	0x0D63, r30
    ba08:	31 97       	sbiw	r30, 0x01	; 1
    ba0a:	24 91       	lpm	r18, Z+
						
						if(c1==CONTROLER_VOL){
    ba0c:	47 30       	cpi	r20, 0x07	; 7
    ba0e:	71 f4       	brne	.+28     	; 0xba2c <ProcessMusic+0x1e6>
							tracks[channel].trackVol=c2<<1;
    ba10:	83 2f       	mov	r24, r19
    ba12:	90 e0       	ldi	r25, 0x00	; 0
    ba14:	8c 9f       	mul	r24, r28
    ba16:	f0 01       	movw	r30, r0
    ba18:	8d 9f       	mul	r24, r29
    ba1a:	f0 0d       	add	r31, r0
    ba1c:	9c 9f       	mul	r25, r28
    ba1e:	f0 0d       	add	r31, r0
    ba20:	11 24       	eor	r1, r1
    ba22:	e4 51       	subi	r30, 0x14	; 20
    ba24:	f3 4f       	sbci	r31, 0xF3	; 243
    ba26:	22 0f       	add	r18, r18
    ba28:	22 87       	std	Z+10, r18	; 0x0a
    ba2a:	3c c0       	rjmp	.+120    	; 0xbaa4 <ProcessMusic+0x25e>
						}else if(c1==CONTROLER_EXPRESSION){
    ba2c:	4b 30       	cpi	r20, 0x0B	; 11
    ba2e:	71 f4       	brne	.+28     	; 0xba4c <ProcessMusic+0x206>
							tracks[channel].expressionVol=c2<<1;
    ba30:	83 2f       	mov	r24, r19
    ba32:	90 e0       	ldi	r25, 0x00	; 0
    ba34:	8c 9f       	mul	r24, r28
    ba36:	f0 01       	movw	r30, r0
    ba38:	8d 9f       	mul	r24, r29
    ba3a:	f0 0d       	add	r31, r0
    ba3c:	9c 9f       	mul	r25, r28
    ba3e:	f0 0d       	add	r31, r0
    ba40:	11 24       	eor	r1, r1
    ba42:	e4 51       	subi	r30, 0x14	; 20
    ba44:	f3 4f       	sbci	r31, 0xF3	; 243
    ba46:	22 0f       	add	r18, r18
    ba48:	21 87       	std	Z+9, r18	; 0x09
    ba4a:	2c c0       	rjmp	.+88     	; 0xbaa4 <ProcessMusic+0x25e>
						}else if(c1==CONTROLER_TREMOLO){
    ba4c:	4c 35       	cpi	r20, 0x5C	; 92
    ba4e:	71 f4       	brne	.+28     	; 0xba6c <ProcessMusic+0x226>
							tracks[channel].tremoloLevel=c2<<1;
    ba50:	83 2f       	mov	r24, r19
    ba52:	90 e0       	ldi	r25, 0x00	; 0
    ba54:	8c 9f       	mul	r24, r28
    ba56:	f0 01       	movw	r30, r0
    ba58:	8d 9f       	mul	r24, r29
    ba5a:	f0 0d       	add	r31, r0
    ba5c:	9c 9f       	mul	r25, r28
    ba5e:	f0 0d       	add	r31, r0
    ba60:	11 24       	eor	r1, r1
    ba62:	e4 51       	subi	r30, 0x14	; 20
    ba64:	f3 4f       	sbci	r31, 0xF3	; 243
    ba66:	22 0f       	add	r18, r18
    ba68:	27 83       	std	Z+7, r18	; 0x07
    ba6a:	1c c0       	rjmp	.+56     	; 0xbaa4 <ProcessMusic+0x25e>
						}else if(c1==CONTROLER_TREMOLO_RATE){
    ba6c:	44 36       	cpi	r20, 0x64	; 100
    ba6e:	d1 f4       	brne	.+52     	; 0xbaa4 <ProcessMusic+0x25e>
							tracks[channel].tremoloRate=c2<<1;
    ba70:	83 2f       	mov	r24, r19
    ba72:	90 e0       	ldi	r25, 0x00	; 0
    ba74:	8c 9f       	mul	r24, r28
    ba76:	f0 01       	movw	r30, r0
    ba78:	8d 9f       	mul	r24, r29
    ba7a:	f0 0d       	add	r31, r0
    ba7c:	9c 9f       	mul	r25, r28
    ba7e:	f0 0d       	add	r31, r0
    ba80:	11 24       	eor	r1, r1
    ba82:	e4 51       	subi	r30, 0x14	; 20
    ba84:	f3 4f       	sbci	r31, 0xF3	; 243
    ba86:	22 0f       	add	r18, r18
    ba88:	20 87       	std	Z+8, r18	; 0x08
    ba8a:	0c c0       	rjmp	.+24     	; 0xbaa4 <ProcessMusic+0x25e>
						break;

					//program change
					case 0xc0:
						// c1 = patch #						
						tracks[channel].patchNo=c1;
    ba8c:	83 2f       	mov	r24, r19
    ba8e:	90 e0       	ldi	r25, 0x00	; 0
    ba90:	8c 9f       	mul	r24, r28
    ba92:	f0 01       	movw	r30, r0
    ba94:	8d 9f       	mul	r24, r29
    ba96:	f0 0d       	add	r31, r0
    ba98:	9c 9f       	mul	r25, r28
    ba9a:	f0 0d       	add	r31, r0
    ba9c:	11 24       	eor	r1, r1
    ba9e:	e4 51       	subi	r30, 0x14	; 20
    baa0:	f3 4f       	sbci	r31, 0xF3	; 243
    baa2:	46 87       	std	Z+14, r20	; 0x0e


			}//end if(c1==0xff)

			//read next delta time
			nextDeltaTime=ReadVarLen(&songPos);			
    baa4:	83 e6       	ldi	r24, 0x63	; 99
    baa6:	9d e0       	ldi	r25, 0x0D	; 13
    baa8:	0e 94 05 5b 	call	0xb60a	; 0xb60a <ReadVarLen>
    baac:	90 93 61 0d 	sts	0x0D61, r25
    bab0:	80 93 60 0d 	sts	0x0D60, r24
			currDeltaTime=0;
    bab4:	10 92 5b 0d 	sts	0x0D5B, r1
    bab8:	10 92 5a 0d 	sts	0x0D5A, r1
    babc:	02 c0       	rjmp	.+4      	; 0xbac2 <ProcessMusic+0x27c>
						}else if(c1==CONTROLER_EXPRESSION){
							tracks[channel].expressionVol=c2<<1;
						}else if(c1==CONTROLER_TREMOLO){
							tracks[channel].tremoloLevel=c2<<1;
						}else if(c1==CONTROLER_TREMOLO_RATE){
							tracks[channel].tremoloRate=c2<<1;
    babe:	c6 e1       	ldi	r28, 0x16	; 22
    bac0:	d0 e0       	ldi	r29, 0x00	; 0


	//Process song MIDI notes
	if(playSong){
		//process all simultaneous events
		while(currDeltaTime==nextDeltaTime){
    bac2:	20 91 5a 0d 	lds	r18, 0x0D5A
    bac6:	30 91 5b 0d 	lds	r19, 0x0D5B
    baca:	80 91 60 0d 	lds	r24, 0x0D60
    bace:	90 91 61 0d 	lds	r25, 0x0D61
    bad2:	28 17       	cp	r18, r24
    bad4:	39 07       	cpc	r19, r25
    bad6:	09 f4       	brne	.+2      	; 0xbada <ProcessMusic+0x294>
    bad8:	15 cf       	rjmp	.-470    	; 0xb904 <ProcessMusic+0xbe>
				}
			#endif

		}//end while
		
		if(++currDeltaTime == 65535)
    bada:	c9 01       	movw	r24, r18
    badc:	01 96       	adiw	r24, 0x01	; 1
    bade:	90 93 5b 0d 	sts	0x0D5B, r25
    bae2:	80 93 5a 0d 	sts	0x0D5A, r24
    bae6:	8f 5f       	subi	r24, 0xFF	; 255
    bae8:	9f 4f       	sbci	r25, 0xFF	; 255
    baea:	11 f4       	brne	.+4      	; 0xbaf0 <ProcessMusic+0x2aa>
			playSong = false;
    baec:	10 92 c0 0c 	sts	0x0CC0, r1
    baf0:	cc ee       	ldi	r28, 0xEC	; 236
    baf2:	dc e0       	ldi	r29, 0x0C	; 12
    baf4:	02 ec       	ldi	r16, 0xC2	; 194
    baf6:	1c e0       	ldi	r17, 0x0C	; 12
    baf8:	ff 24       	eor	r15, r15
					tmp-=128; //convert to unsigned

					tVol=(track->tremoloLevel*tmp)+0x100;
					tVol>>=8;
					
					uVol=(uVol*(0xff-tVol))+0x100;
    bafa:	ef ef       	ldi	r30, 0xFF	; 255
    bafc:	ae 2e       	mov	r10, r30
    bafe:	b1 2c       	mov	r11, r1
			#endif

		}//end while
		
		if(++currDeltaTime == 65535)
			playSong = false;
    bb00:	dc 2e       	mov	r13, r28
    bb02:	ed 2e       	mov	r14, r29
	//	
	for(unsigned char trackNo=0;trackNo<CHANNELS;trackNo++){
		track=&tracks[trackNo];

		//process patch command stream
		if((track->flags & TRACK_FLAGS_HOLD_ENV)==0){	//patchEnvelopeHold==false
    bb04:	88 81       	ld	r24, Y
    bb06:	86 fd       	sbrc	r24, 6
    bb08:	3d c0       	rjmp	.+122    	; 0xbb84 <ProcessMusic+0x33e>

			if(track->patchCommandStreamPos!=NULL && 
    bb0a:	8c 89       	ldd	r24, Y+20	; 0x14
    bb0c:	9d 89       	ldd	r25, Y+21	; 0x15
    bb0e:	89 2b       	or	r24, r25
    bb10:	09 f4       	brne	.+2      	; 0xbb14 <ProcessMusic+0x2ce>
    bb12:	35 c0       	rjmp	.+106    	; 0xbb7e <ProcessMusic+0x338>
    bb14:	9a 89       	ldd	r25, Y+18	; 0x12
    bb16:	89 89       	ldd	r24, Y+17	; 0x11
    bb18:	98 17       	cp	r25, r24
    bb1a:	68 f5       	brcc	.+90     	; 0xbb76 <ProcessMusic+0x330>
    bb1c:	30 c0       	rjmp	.+96     	; 0xbb7e <ProcessMusic+0x338>
				track->patchCurrDeltaTime>=track->patchNextDeltaTime){			

				//process all simultaneous events
				while(track->patchCurrDeltaTime==track->patchNextDeltaTime){	
					
					c1=pgm_read_byte(track->patchCommandStreamPos++);
    bb1e:	ec 89       	ldd	r30, Y+20	; 0x14
    bb20:	fd 89       	ldd	r31, Y+21	; 0x15
    bb22:	cf 01       	movw	r24, r30
    bb24:	01 96       	adiw	r24, 0x01	; 1
    bb26:	9d 8b       	std	Y+21, r25	; 0x15
    bb28:	8c 8b       	std	Y+20, r24	; 0x14
    bb2a:	24 91       	lpm	r18, Z+
					if(c1==0xff){					
    bb2c:	2f 3f       	cpi	r18, 0xFF	; 255
    bb2e:	31 f4       	brne	.+12     	; 0xbb3c <ProcessMusic+0x2f6>
						//end of stream!
						track->flags&=(~TRACK_FLAGS_PRIORITY);// priority=0;
    bb30:	88 81       	ld	r24, Y
    bb32:	8f 77       	andi	r24, 0x7F	; 127
    bb34:	88 83       	st	Y, r24
						track->patchCommandStreamPos=NULL;
    bb36:	1d 8a       	std	Y+21, r1	; 0x15
    bb38:	1c 8a       	std	Y+20, r1	; 0x14
    bb3a:	21 c0       	rjmp	.+66     	; 0xbb7e <ProcessMusic+0x338>
						break;

					}else{
						c2=pgm_read_byte(track->patchCommandStreamPos++);
    bb3c:	01 96       	adiw	r24, 0x01	; 1
    bb3e:	9d 8b       	std	Y+21, r25	; 0x15
    bb40:	8c 8b       	std	Y+20, r24	; 0x14
    bb42:	01 97       	sbiw	r24, 0x01	; 1
    bb44:	fc 01       	movw	r30, r24
    bb46:	44 91       	lpm	r20, Z+
						//invoke patch command function
						( (PatchCommand)pgm_read_word(&patchCommands[c1]) )(track,trackNo,c2);				
    bb48:	82 2f       	mov	r24, r18
    bb4a:	90 e0       	ldi	r25, 0x00	; 0
    bb4c:	88 0f       	add	r24, r24
    bb4e:	99 1f       	adc	r25, r25
    bb50:	82 54       	subi	r24, 0x42	; 66
    bb52:	9f 4f       	sbci	r25, 0xFF	; 255
    bb54:	fc 01       	movw	r30, r24
    bb56:	25 91       	lpm	r18, Z+
    bb58:	34 91       	lpm	r19, Z+
    bb5a:	8d 2d       	mov	r24, r13
    bb5c:	9e 2d       	mov	r25, r14
    bb5e:	6f 2d       	mov	r22, r15
    bb60:	f9 01       	movw	r30, r18
    bb62:	09 95       	icall
					}			
			
					//read next delta time
					track->patchNextDeltaTime=pgm_read_byte(track->patchCommandStreamPos++);						
    bb64:	ec 89       	ldd	r30, Y+20	; 0x14
    bb66:	fd 89       	ldd	r31, Y+21	; 0x15
    bb68:	31 96       	adiw	r30, 0x01	; 1
    bb6a:	fd 8b       	std	Y+21, r31	; 0x15
    bb6c:	ec 8b       	std	Y+20, r30	; 0x14
    bb6e:	31 97       	sbiw	r30, 0x01	; 1
    bb70:	e4 91       	lpm	r30, Z+
    bb72:	e9 8b       	std	Y+17, r30	; 0x11
					
					track->patchCurrDeltaTime=0;	
    bb74:	1a 8a       	std	Y+18, r1	; 0x12

			if(track->patchCommandStreamPos!=NULL && 
				track->patchCurrDeltaTime>=track->patchNextDeltaTime){			

				//process all simultaneous events
				while(track->patchCurrDeltaTime==track->patchNextDeltaTime){	
    bb76:	9a 89       	ldd	r25, Y+18	; 0x12
    bb78:	89 89       	ldd	r24, Y+17	; 0x11
    bb7a:	98 17       	cp	r25, r24
    bb7c:	81 f2       	breq	.-96     	; 0xbb1e <ProcessMusic+0x2d8>
					track->patchCurrDeltaTime=0;	

				}		
			}				
			
			track->patchCurrDeltaTime++;
    bb7e:	8a 89       	ldd	r24, Y+18	; 0x12
    bb80:	8f 5f       	subi	r24, 0xFF	; 255
    bb82:	8a 8b       	std	Y+18, r24	; 0x12
		}
	


		if(track->flags & TRACK_FLAGS_PLAYING){
    bb84:	88 81       	ld	r24, Y
    bb86:	85 fd       	sbrc	r24, 5
    bb88:	03 c0       	rjmp	.+6      	; 0xbb90 <ProcessMusic+0x34a>
    bb8a:	20 e0       	ldi	r18, 0x00	; 0
    bb8c:	30 e0       	ldi	r19, 0x00	; 0
    bb8e:	70 c0       	rjmp	.+224    	; 0xbc70 <ProcessMusic+0x42a>
		
			if(track->patchPlayingTime<0xff){
    bb90:	8b 89       	ldd	r24, Y+19	; 0x13
    bb92:	8f 3f       	cpi	r24, 0xFF	; 255
    bb94:	11 f0       	breq	.+4      	; 0xbb9a <ProcessMusic+0x354>
				track->patchPlayingTime++;
    bb96:	8f 5f       	subi	r24, 0xFF	; 255
    bb98:	8b 8b       	std	Y+19, r24	; 0x13
			}

			//compute final frame volume
			if(track->flags&TRACK_FLAGS_PRIORITY){
    bb9a:	88 81       	ld	r24, Y
    bb9c:	87 ff       	sbrs	r24, 7
    bb9e:	02 c0       	rjmp	.+4      	; 0xbba4 <ProcessMusic+0x35e>
    bba0:	8f ef       	ldi	r24, 0xFF	; 255
    bba2:	01 c0       	rjmp	.+2      	; 0xbba6 <ProcessMusic+0x360>
				//if an FX, use full track volume.
				trackVol=0xff;
			}else{
				//if regular note, apply MIDI track volume
				trackVol= track->trackVol;
    bba4:	8a 85       	ldd	r24, Y+10	; 0x0a
			}
			if(track->noteVol!=0 && track->envelopeVol!=0 && trackVol!=0 && masterVolume!=0){
    bba6:	9b 85       	ldd	r25, Y+11	; 0x0b
    bba8:	99 23       	and	r25, r25
    bbaa:	09 f4       	brne	.+2      	; 0xbbae <ProcessMusic+0x368>
    bbac:	5b c0       	rjmp	.+182    	; 0xbc64 <ProcessMusic+0x41e>
    bbae:	2c 85       	ldd	r18, Y+12	; 0x0c
    bbb0:	22 23       	and	r18, r18
    bbb2:	09 f4       	brne	.+2      	; 0xbbb6 <ProcessMusic+0x370>
    bbb4:	57 c0       	rjmp	.+174    	; 0xbc64 <ProcessMusic+0x41e>
    bbb6:	88 23       	and	r24, r24
    bbb8:	09 f4       	brne	.+2      	; 0xbbbc <ProcessMusic+0x376>
    bbba:	54 c0       	rjmp	.+168    	; 0xbc64 <ProcessMusic+0x41e>
    bbbc:	40 91 5f 0d 	lds	r20, 0x0D5F
    bbc0:	44 23       	and	r20, r20
    bbc2:	09 f4       	brne	.+2      	; 0xbbc6 <ProcessMusic+0x380>
    bbc4:	4f c0       	rjmp	.+158    	; 0xbc64 <ProcessMusic+0x41e>

				uVol=(track->noteVol*trackVol)+0x100;
    bbc6:	89 9f       	mul	r24, r25
    bbc8:	c0 01       	movw	r24, r0
    bbca:	11 24       	eor	r1, r1
    bbcc:	80 50       	subi	r24, 0x00	; 0
    bbce:	9f 4f       	sbci	r25, 0xFF	; 255
				uVol>>=8;
				uVol=(uVol*track->envelopeVol)+0x100;
    bbd0:	89 2f       	mov	r24, r25
    bbd2:	99 27       	eor	r25, r25
    bbd4:	30 e0       	ldi	r19, 0x00	; 0
    bbd6:	b9 01       	movw	r22, r18
    bbd8:	86 9f       	mul	r24, r22
    bbda:	90 01       	movw	r18, r0
    bbdc:	87 9f       	mul	r24, r23
    bbde:	30 0d       	add	r19, r0
    bbe0:	96 9f       	mul	r25, r22
    bbe2:	30 0d       	add	r19, r0
    bbe4:	11 24       	eor	r1, r1
    bbe6:	20 50       	subi	r18, 0x00	; 0
    bbe8:	3f 4f       	sbci	r19, 0xFF	; 255
				uVol>>=8;
				uVol=(uVol*track->expressionVol)+0x100;
    bbea:	23 2f       	mov	r18, r19
    bbec:	33 27       	eor	r19, r19
    bbee:	89 85       	ldd	r24, Y+9	; 0x09
    bbf0:	90 e0       	ldi	r25, 0x00	; 0
    bbf2:	fc 01       	movw	r30, r24
    bbf4:	2e 9f       	mul	r18, r30
    bbf6:	c0 01       	movw	r24, r0
    bbf8:	2f 9f       	mul	r18, r31
    bbfa:	90 0d       	add	r25, r0
    bbfc:	3e 9f       	mul	r19, r30
    bbfe:	90 0d       	add	r25, r0
    bc00:	11 24       	eor	r1, r1
    bc02:	80 50       	subi	r24, 0x00	; 0
    bc04:	9f 4f       	sbci	r25, 0xFF	; 255
				uVol>>=8;
				uVol=(uVol*masterVolume)+0x100;
    bc06:	89 2f       	mov	r24, r25
    bc08:	99 27       	eor	r25, r25
    bc0a:	24 2f       	mov	r18, r20
    bc0c:	30 e0       	ldi	r19, 0x00	; 0
    bc0e:	ac 01       	movw	r20, r24
    bc10:	42 9f       	mul	r20, r18
    bc12:	c0 01       	movw	r24, r0
    bc14:	43 9f       	mul	r20, r19
    bc16:	90 0d       	add	r25, r0
    bc18:	52 9f       	mul	r21, r18
    bc1a:	90 0d       	add	r25, r0
    bc1c:	11 24       	eor	r1, r1
    bc1e:	80 50       	subi	r24, 0x00	; 0
    bc20:	9f 4f       	sbci	r25, 0xFF	; 255
				uVol>>=8;
    bc22:	29 2f       	mov	r18, r25
    bc24:	33 27       	eor	r19, r19

				if(track->tremoloLevel>0){					
    bc26:	8f 81       	ldd	r24, Y+7	; 0x07
    bc28:	88 23       	and	r24, r24
    bc2a:	f1 f0       	breq	.+60     	; 0xbc68 <ProcessMusic+0x422>
					tmp=pgm_read_byte(&(waves[track->tremoloPos]));
    bc2c:	ee 81       	ldd	r30, Y+6	; 0x06
    bc2e:	f0 e0       	ldi	r31, 0x00	; 0
    bc30:	e0 50       	subi	r30, 0x00	; 0
    bc32:	f0 44       	sbci	r31, 0x40	; 64
    bc34:	e4 91       	lpm	r30, Z+
					tmp-=128; //convert to unsigned

					tVol=(track->tremoloLevel*tmp)+0x100;
    bc36:	e0 58       	subi	r30, 0x80	; 128
    bc38:	e8 9f       	mul	r30, r24
    bc3a:	c0 01       	movw	r24, r0
    bc3c:	11 24       	eor	r1, r1
    bc3e:	80 50       	subi	r24, 0x00	; 0
    bc40:	9f 4f       	sbci	r25, 0xFF	; 255
					tVol>>=8;
					
					uVol=(uVol*(0xff-tVol))+0x100;
    bc42:	89 2f       	mov	r24, r25
    bc44:	99 27       	eor	r25, r25
    bc46:	b5 01       	movw	r22, r10
    bc48:	68 1b       	sub	r22, r24
    bc4a:	79 0b       	sbc	r23, r25
    bc4c:	62 9f       	mul	r22, r18
    bc4e:	c0 01       	movw	r24, r0
    bc50:	63 9f       	mul	r22, r19
    bc52:	90 0d       	add	r25, r0
    bc54:	72 9f       	mul	r23, r18
    bc56:	90 0d       	add	r25, r0
    bc58:	11 24       	eor	r1, r1
    bc5a:	80 50       	subi	r24, 0x00	; 0
    bc5c:	9f 4f       	sbci	r25, 0xFF	; 255
					uVol>>=8;
    bc5e:	29 2f       	mov	r18, r25
    bc60:	33 27       	eor	r19, r19
    bc62:	02 c0       	rjmp	.+4      	; 0xbc68 <ProcessMusic+0x422>
    bc64:	20 e0       	ldi	r18, 0x00	; 0
    bc66:	30 e0       	ldi	r19, 0x00	; 0
			
			}else{
				uVol=0;
			}	

			track->tremoloPos+=track->tremoloRate;	
    bc68:	8e 81       	ldd	r24, Y+6	; 0x06
    bc6a:	98 85       	ldd	r25, Y+8	; 0x08
    bc6c:	89 0f       	add	r24, r25
    bc6e:	8e 83       	std	Y+6, r24	; 0x06

		}else{
			uVol=0;
		}
		
		mixer.channels.all[trackNo].volume=(uVol&0xff);
    bc70:	f8 01       	movw	r30, r16
    bc72:	20 83       	st	Z, r18


	//
	// Process patches command streams & final volume
	//	
	for(unsigned char trackNo=0;trackNo<CHANNELS;trackNo++){
    bc74:	f3 94       	inc	r15
    bc76:	66 96       	adiw	r28, 0x16	; 22
    bc78:	0a 5f       	subi	r16, 0xFA	; 250
    bc7a:	1f 4f       	sbci	r17, 0xFF	; 255
    bc7c:	f5 e0       	ldi	r31, 0x05	; 5
    bc7e:	ff 16       	cp	r15, r31
    bc80:	09 f0       	breq	.+2      	; 0xbc84 <ProcessMusic+0x43e>
    bc82:	3e cf       	rjmp	.-388    	; 0xbb00 <ProcessMusic+0x2ba>
		}
		
		mixer.channels.all[trackNo].volume=(uVol&0xff);
	}
	
}
    bc84:	df 91       	pop	r29
    bc86:	cf 91       	pop	r28
    bc88:	1f 91       	pop	r17
    bc8a:	0f 91       	pop	r16
    bc8c:	ff 90       	pop	r15
    bc8e:	ef 90       	pop	r14
    bc90:	df 90       	pop	r13
    bc92:	bf 90       	pop	r11
    bc94:	af 90       	pop	r10
    bc96:	08 95       	ret

0000bc98 <TriggerFx>:

/* Trigger a sound effect.
 * Method allocates the channel based on priority.
 * Retrig: if this fx if already playing on a track, reuse same track.
 */
void TriggerFx(unsigned char patch,unsigned char volume,bool retrig){
    bc98:	58 2f       	mov	r21, r24
    bc9a:	76 2f       	mov	r23, r22
	unsigned char channel;
	
	unsigned char type=(unsigned char)pgm_read_byte(&(patchPointers[patch].type));
    bc9c:	89 e0       	ldi	r24, 0x09	; 9
    bc9e:	58 9f       	mul	r21, r24
    bca0:	c0 01       	movw	r24, r0
    bca2:	11 24       	eor	r1, r1
    bca4:	e0 91 5c 0d 	lds	r30, 0x0D5C
    bca8:	f0 91 5d 0d 	lds	r31, 0x0D5D
    bcac:	e8 0f       	add	r30, r24
    bcae:	f9 1f       	adc	r31, r25
    bcb0:	84 91       	lpm	r24, Z+

	//find the channel to play the fx
	//try to steal voice 2 then 1
	//never steal voice 0, reserve it for lead melodies
	if(type==1 || (type==2 && MIXER_CHAN4_TYPE == 1)){
    bcb2:	81 30       	cpi	r24, 0x01	; 1
    bcb4:	11 f4       	brne	.+4      	; 0xbcba <TriggerFx+0x22>
    bcb6:	43 e0       	ldi	r20, 0x03	; 3
    bcb8:	21 c0       	rjmp	.+66     	; 0xbcfc <TriggerFx+0x64>
		//noise or PCM channel fx		
		channel=3;
	}else if(type==2){
    bcba:	82 30       	cpi	r24, 0x02	; 2
    bcbc:	11 f4       	brne	.+4      	; 0xbcc2 <TriggerFx+0x2a>
    bcbe:	44 e0       	ldi	r20, 0x04	; 4
    bcc0:	1d c0       	rjmp	.+58     	; 0xbcfc <TriggerFx+0x64>
		channel=4;
	}else if( (tracks[1].flags&TRACK_FLAGS_PRIORITY)==0 || (tracks[1].fxPatchNo==patch && (tracks[1].flags&TRACK_FLAGS_PRIORITY)!=0 && retrig==true)){ //fx already playing
    bcc2:	80 91 02 0d 	lds	r24, 0x0D02
    bcc6:	87 ff       	sbrs	r24, 7
    bcc8:	16 c0       	rjmp	.+44     	; 0xbcf6 <TriggerFx+0x5e>
    bcca:	80 91 11 0d 	lds	r24, 0x0D11
    bcce:	85 17       	cp	r24, r21
    bcd0:	11 f4       	brne	.+4      	; 0xbcd6 <TriggerFx+0x3e>
    bcd2:	44 23       	and	r20, r20
    bcd4:	81 f4       	brne	.+32     	; 0xbcf6 <TriggerFx+0x5e>
		channel=1;
	}else if( (tracks[2].flags&TRACK_FLAGS_PRIORITY)==0 || (tracks[2].fxPatchNo==patch && (tracks[2].flags&TRACK_FLAGS_PRIORITY)!=0 && retrig==true)){ //fx already playing				
    bcd6:	80 91 18 0d 	lds	r24, 0x0D18
    bcda:	87 ff       	sbrs	r24, 7
    bcdc:	0e c0       	rjmp	.+28     	; 0xbcfa <TriggerFx+0x62>
    bcde:	80 91 27 0d 	lds	r24, 0x0D27
    bce2:	85 17       	cp	r24, r21
    bce4:	11 f4       	brne	.+4      	; 0xbcea <TriggerFx+0x52>
    bce6:	44 23       	and	r20, r20
    bce8:	41 f4       	brne	.+16     	; 0xbcfa <TriggerFx+0x62>
		channel=2;
	}else{
		//both channels have fx playing, use the oldest one
		if(tracks[1].patchPlayingTime>tracks[2].patchPlayingTime){
    bcea:	90 91 15 0d 	lds	r25, 0x0D15
    bcee:	80 91 2b 0d 	lds	r24, 0x0D2B
    bcf2:	89 17       	cp	r24, r25
    bcf4:	10 f4       	brcc	.+4      	; 0xbcfa <TriggerFx+0x62>
    bcf6:	41 e0       	ldi	r20, 0x01	; 1
    bcf8:	01 c0       	rjmp	.+2      	; 0xbcfc <TriggerFx+0x64>
    bcfa:	42 e0       	ldi	r20, 0x02	; 2
		}else{
			channel=2;
		}
	}				

	tracks[channel].flags|=TRACK_FLAGS_PRIORITY; //priority=1;	
    bcfc:	24 2f       	mov	r18, r20
    bcfe:	30 e0       	ldi	r19, 0x00	; 0
    bd00:	86 e1       	ldi	r24, 0x16	; 22
    bd02:	90 e0       	ldi	r25, 0x00	; 0
    bd04:	28 9f       	mul	r18, r24
    bd06:	f0 01       	movw	r30, r0
    bd08:	29 9f       	mul	r18, r25
    bd0a:	f0 0d       	add	r31, r0
    bd0c:	38 9f       	mul	r19, r24
    bd0e:	f0 0d       	add	r31, r0
    bd10:	11 24       	eor	r1, r1
    bd12:	e4 51       	subi	r30, 0x14	; 20
    bd14:	f3 4f       	sbci	r31, 0xF3	; 243
    bd16:	80 81       	ld	r24, Z
    bd18:	80 68       	ori	r24, 0x80	; 128
    bd1a:	80 83       	st	Z, r24
	TriggerCommon(channel,patch,volume,80);
    bd1c:	84 2f       	mov	r24, r20
    bd1e:	65 2f       	mov	r22, r21
    bd20:	47 2f       	mov	r20, r23
    bd22:	20 e5       	ldi	r18, 0x50	; 80
    bd24:	0e 94 4f 5b 	call	0xb69e	; 0xb69e <TriggerCommon>
}
    bd28:	08 95       	ret

0000bd2a <PatchCommand02>:
	#endif
}
/*
* Command 02: Set wave
*/
void PatchCommand02(struct TrackStruct* track,unsigned char trackNo, char param){
    bd2a:	86 2f       	mov	r24, r22
	SetMixerWave(trackNo,param);
    bd2c:	64 2f       	mov	r22, r20
    bd2e:	0e 94 b1 5e 	call	0xbd62	; 0xbd62 <SetMixerWave>
}
    bd32:	08 95       	ret

0000bd34 <SetMixerNote>:
; r22: -MIDI note, 69=A5(440) for waves channels (0,1,2)
;      -Noise params for channel 3
;***********************
.section .text.SetMixerNote
SetMixerNote:
	clr r25
    bd34:	99 27       	eor	r25, r25
	clr r23
    bd36:	77 27       	eor	r23, r23
	#if SOUND_MIXER == MIXER_TYPE_VSYNC
		cpi r24,3
		brlo set_note_waves
		ret		
	#else
		cpi r24,3
    bd38:	83 30       	cpi	r24, 0x03	; 3
		brne set_note_waves		
    bd3a:	09 f4       	brne	.+2      	; 0xbd3e <set_note_waves>
		ret
    bd3c:	08 95       	ret

0000bd3e <set_note_waves>:
	#endif
#endif

set_note_waves:
	;get step for note
	ldi ZL,lo8(steptable)
    bd3e:	e8 e0       	ldi	r30, 0x08	; 8
	ldi ZH,hi8(steptable)
    bd40:	fe eb       	ldi	r31, 0xBE	; 190
	lsl r22
    bd42:	66 0f       	add	r22, r22
	rol r23
    bd44:	77 1f       	adc	r23, r23
	add ZL,r22
    bd46:	e6 0f       	add	r30, r22
	adc ZH,r23	
    bd48:	f7 1f       	adc	r31, r23

	lpm r26,Z+
    bd4a:	a5 91       	lpm	r26, Z+
	lpm r27,Z
    bd4c:	b4 91       	lpm	r27, Z+

	ldi ZL,lo8(mixerStruct)
    bd4e:	e2 ec       	ldi	r30, 0xC2	; 194
	ldi ZH,hi8(mixerStruct)
    bd50:	fc e0       	ldi	r31, 0x0C	; 12
	ldi r18,CHANNEL_STRUCT_SIZE
    bd52:	26 e0       	ldi	r18, 0x06	; 6
	mul r18,r24
    bd54:	28 9f       	mul	r18, r24
	add ZL,r0
    bd56:	e0 0d       	add	r30, r0
	adc ZH,r1
    bd58:	f1 1d       	adc	r31, r1
	
	std Z+step_lo,r26
    bd5a:	a1 83       	std	Z+1, r26	; 0x01
	std Z+step_hi,r27
    bd5c:	b2 83       	std	Z+2, r27	; 0x02
	
	clr r1
    bd5e:	11 24       	eor	r1, r1
	

	ret
    bd60:	08 95       	ret

0000bd62 <SetMixerWave>:
;         Noise channel: 0xfe=7 bit lfsr, 0xff=15 bit lfsr
;                 
;***********************
.section .text.SetMixerWave
SetMixerWave:
	clr r25
    bd62:	99 27       	eor	r25, r25
	clr r23
    bd64:	77 27       	eor	r23, r23

	ldi ZL,lo8(mixerStruct)
    bd66:	e2 ec       	ldi	r30, 0xC2	; 194
	ldi ZH,hi8(mixerStruct)
    bd68:	fc e0       	ldi	r31, 0x0C	; 12
	ldi r18,CHANNEL_STRUCT_SIZE
    bd6a:	26 e0       	ldi	r18, 0x06	; 6
	mul r18,r24	
    bd6c:	28 9f       	mul	r18, r24
	add ZL,r0
    bd6e:	e0 0d       	add	r30, r0
	adc ZH,r1
    bd70:	f1 1d       	adc	r31, r1

#if MIXER_CHAN4_TYPE == 0
	cpi r22,0xfe	;7bit lfsr
    bd72:	6e 3f       	cpi	r22, 0xFE	; 254
	brne smw1
    bd74:	31 f4       	brne	.+12     	; 0xbd82 <smw1>
	lds r22,tr4_params
    bd76:	60 91 d5 0c 	lds	r22, 0x0CD5
	andi r22,0xfe;
    bd7a:	6e 7f       	andi	r22, 0xFE	; 254
	sts tr4_params,r22
    bd7c:	60 93 d5 0c 	sts	0x0CD5, r22
	rjmp esmw	
    bd80:	0b c0       	rjmp	.+22     	; 0xbd98 <esmw>

0000bd82 <smw1>:
smw1:
	cpi r22,0xff	;15bit lfsr
    bd82:	6f 3f       	cpi	r22, 0xFF	; 255
	brne smw2
    bd84:	31 f4       	brne	.+12     	; 0xbd92 <smw2>
	lds r22,tr4_params
    bd86:	60 91 d5 0c 	lds	r22, 0x0CD5
	ori r22,0xfe;
    bd8a:	6e 6f       	ori	r22, 0xFE	; 254
	sts tr4_params,r22	
    bd8c:	60 93 d5 0c 	sts	0x0CD5, r22
	rjmp esmw
    bd90:	03 c0       	rjmp	.+6      	; 0xbd98 <esmw>

0000bd92 <smw2>:
smw2:
#endif

	ldi r23,hi8(waves)
    bd92:	70 ec       	ldi	r23, 0xC0	; 192
	add r23,r22
    bd94:	76 0f       	add	r23, r22
	std Z+samplepos_hi,r23 ;store path No
    bd96:	75 83       	std	Z+5, r23	; 0x05

0000bd98 <esmw>:

esmw:
	clr r1	
    bd98:	11 24       	eor	r1, r1
	ret
    bd9a:	08 95       	ret
	...

0000be00 <DisableSoundEngine>:
; no CPU cycles are consumed.
; C-callable
;*****************************
.section .text.DisableSoundEngine
DisableSoundEngine:	
	ldi r24,0
    be00:	80 e0       	ldi	r24, 0x00	; 0
	sts sound_enabled,r24
    be02:	80 93 c1 0c 	sts	0x0CC1, r24
	ret
    be06:	08 95       	ret

0000be08 <steptable>:
    be08:	22 00       	.word	0x0022	; ????
    be0a:	24 00       	.word	0x0024	; ????
    be0c:	26 00       	.word	0x0026	; ????
    be0e:	28 00       	.word	0x0028	; ????
    be10:	2b 00       	.word	0x002b	; ????
    be12:	2d 00       	.word	0x002d	; ????
    be14:	30 00       	.word	0x0030	; ????
    be16:	33 00       	.word	0x0033	; ????
    be18:	36 00       	.word	0x0036	; ????
    be1a:	39 00       	.word	0x0039	; ????
    be1c:	3d 00       	.word	0x003d	; ????
    be1e:	40 00       	.word	0x0040	; ????
    be20:	44 00       	.word	0x0044	; ????
    be22:	48 00       	.word	0x0048	; ????
    be24:	4c 00       	.word	0x004c	; ????
    be26:	51 00       	.word	0x0051	; ????
    be28:	56 00       	.word	0x0056	; ????
    be2a:	5b 00       	.word	0x005b	; ????
    be2c:	60 00       	.word	0x0060	; ????
    be2e:	66 00       	.word	0x0066	; ????
    be30:	6c 00       	.word	0x006c	; ????
    be32:	73 00       	.word	0x0073	; ????
    be34:	79 00       	.word	0x0079	; ????
    be36:	81 00       	.word	0x0081	; ????
    be38:	88 00       	.word	0x0088	; ????
    be3a:	90 00       	.word	0x0090	; ????
    be3c:	99 00       	.word	0x0099	; ????
    be3e:	a2 00       	.word	0x00a2	; ????
    be40:	ac 00       	.word	0x00ac	; ????
    be42:	b6 00       	.word	0x00b6	; ????
    be44:	c1 00       	.word	0x00c1	; ????
    be46:	cc 00       	.word	0x00cc	; ????
    be48:	d8 00       	.word	0x00d8	; ????
    be4a:	e5 00       	.word	0x00e5	; ????
    be4c:	f3 00       	.word	0x00f3	; ????
    be4e:	01 01       	movw	r0, r2
    be50:	10 01       	movw	r2, r0
    be52:	21 01       	movw	r4, r2
    be54:	32 01       	movw	r6, r4
    be56:	44 01       	movw	r8, r8
    be58:	57 01       	movw	r10, r14
    be5a:	6c 01       	movw	r12, r24
    be5c:	81 01       	movw	r16, r2
    be5e:	98 01       	movw	r18, r16
    be60:	b0 01       	movw	r22, r0
    be62:	ca 01       	movw	r24, r20
    be64:	e5 01       	movw	r28, r10
    be66:	02 02       	muls	r16, r18
    be68:	21 02       	muls	r18, r17
    be6a:	41 02       	muls	r20, r17
    be6c:	64 02       	muls	r22, r20
    be6e:	88 02       	muls	r24, r24
    be70:	ae 02       	muls	r26, r30
    be72:	d7 02       	muls	r29, r23
    be74:	03 03       	mulsu	r16, r19
    be76:	30 03       	mulsu	r19, r16
    be78:	61 03       	mulsu	r22, r17
    be7a:	94 03       	fmuls	r17, r20
    be7c:	cb 03       	fmulsu	r20, r19
    be7e:	05 04       	cpc	r0, r5
    be80:	42 04       	cpc	r4, r2
    be82:	83 04       	cpc	r8, r3
    be84:	c7 04       	cpc	r12, r7
    be86:	10 05       	cpc	r17, r0
    be88:	5d 05       	cpc	r21, r13
    be8a:	af 05       	cpc	r26, r15
    be8c:	05 06       	cpc	r0, r21
    be8e:	61 06       	cpc	r6, r17
    be90:	c2 06       	cpc	r12, r18
    be92:	29 07       	cpc	r18, r25
    be94:	96 07       	cpc	r25, r22
    be96:	09 08       	sbc	r0, r9
    be98:	83 08       	sbc	r8, r3
    be9a:	05 09       	sbc	r16, r5
    be9c:	8e 09       	sbc	r24, r14
    be9e:	20 0a       	sbc	r2, r16
    bea0:	ba 0a       	sbc	r11, r26
    bea2:	5d 0b       	sbc	r21, r29
    bea4:	0a 0c       	add	r0, r10
    bea6:	c1 0c       	add	r12, r1
    bea8:	84 0d       	add	r24, r4
    beaa:	51 0e       	add	r5, r17
    beac:	2b 0f       	add	r18, r27
    beae:	12 10       	cpse	r1, r2
    beb0:	07 11       	cpse	r16, r7
    beb2:	0a 12       	cpse	r0, r26
    beb4:	1d 13       	cpse	r17, r29
    beb6:	40 14       	cp	r4, r0
    beb8:	74 15       	cp	r23, r4
    beba:	ba 16       	cp	r11, r26
    bebc:	14 18       	sub	r1, r4
    bebe:	83 19       	sub	r24, r3
    bec0:	07 1b       	sub	r16, r23
    bec2:	a3 1c       	adc	r10, r3
    bec4:	57 1e       	adc	r5, r23
    bec6:	24 20       	and	r2, r4
    bec8:	0e 22       	and	r0, r30
    beca:	14 24       	eor	r1, r4
    becc:	39 26       	eor	r3, r25
    bece:	7f 28       	or	r7, r15
    bed0:	e8 2a       	or	r14, r24
    bed2:	75 2d       	mov	r23, r5
    bed4:	29 30       	cpi	r18, 0x09	; 9
    bed6:	06 33       	cpi	r16, 0x36	; 54
    bed8:	0f 36       	cpi	r16, 0x6F	; 111
    beda:	45 39       	cpi	r20, 0x95	; 149
    bedc:	ad 3c       	cpi	r26, 0xCD	; 205
    bede:	49 40       	sbci	r20, 0x09	; 9
    bee0:	1b 44       	sbci	r17, 0x4B	; 75
    bee2:	28 48       	sbci	r18, 0x88	; 136
    bee4:	73 4c       	sbci	r23, 0xC3	; 195
    bee6:	fe 50       	subi	r31, 0x0E	; 14
    bee8:	cf 55       	subi	r28, 0x5F	; 95
    beea:	ea 5a       	subi	r30, 0xAA	; 170
    beec:	51 60       	ori	r21, 0x01	; 1
    beee:	0c 66       	ori	r16, 0x6C	; 108
    bef0:	1d 6c       	ori	r17, 0xCD	; 205
    bef2:	8b 72       	andi	r24, 0x2B	; 43
    bef4:	5a 79       	andi	r21, 0x9A	; 154
    bef6:	92 80       	ldd	r9, Z+2	; 0x02
    bef8:	37 88       	ldd	r3, Z+23	; 0x17
    befa:	50 90 e5 98 	lds	r5, 0x98E5
    befe:	fd a1       	ldd	r31, Y+37	; 0x25
    bf00:	9f ab       	std	Y+55, r25	; 0x37
    bf02:	d3 b5       	in	r29, 0x23	; 35
    bf04:	a3 c0       	rjmp	.+326    	; 0xc04c <waves+0x4c>
	...

0000c000 <waves>:
    c000:	80 81       	ld	r24, Z
    c002:	82 83       	std	Z+2, r24	; 0x02
    c004:	84 85       	ldd	r24, Z+12	; 0x0c
    c006:	86 87       	std	Z+14, r24	; 0x0e
    c008:	88 89       	ldd	r24, Y+16	; 0x10
    c00a:	8a 8b       	std	Y+18, r24	; 0x12
    c00c:	8c 8d       	ldd	r24, Y+28	; 0x1c
    c00e:	8e 8f       	std	Y+30, r24	; 0x1e
    c010:	90 91 92 93 	lds	r25, 0x9392
    c014:	94 95       	.word	0x9594	; ????
    c016:	96 97       	sbiw	r26, 0x26	; 38
    c018:	98 99       	sbic	0x13, 0	; 19
    c01a:	9a 9b       	sbis	0x13, 2	; 19
    c01c:	9c 9d       	mul	r25, r12
    c01e:	9e 9f       	mul	r25, r30
    c020:	a0 a1       	ldd	r26, Z+32	; 0x20
    c022:	a2 a3       	std	Z+34, r26	; 0x22
    c024:	a4 a5       	ldd	r26, Z+44	; 0x2c
    c026:	a6 a7       	std	Z+46, r26	; 0x2e
    c028:	a8 a9       	ldd	r26, Y+48	; 0x30
    c02a:	aa ab       	std	Y+50, r26	; 0x32
    c02c:	ac ad       	ldd	r26, Y+60	; 0x3c
    c02e:	ae af       	std	Y+62, r26	; 0x3e
    c030:	b0 b1       	in	r27, 0x00	; 0
    c032:	b2 b3       	in	r27, 0x12	; 18
    c034:	b4 b5       	in	r27, 0x24	; 36
    c036:	b6 b7       	in	r27, 0x36	; 54
    c038:	b8 b9       	out	0x08, r27	; 8
    c03a:	ba bb       	out	0x1a, r27	; 26
    c03c:	bc bd       	out	0x2c, r27	; 44
    c03e:	be bf       	out	0x3e, r27	; 62
    c040:	c0 c1       	rjmp	.+896    	; 0xc3c2 <waves+0x3c2>
    c042:	c2 c3       	rjmp	.+1924   	; 0xc7c8 <printdigitoverlaid+0x6c>
    c044:	c4 c5       	rjmp	.+2952   	; 0xcbce <SmoothMenuCorners+0x84>
    c046:	c6 c7       	rjmp	.+3980   	; 0xcfd4 <Render+0xa0>
    c048:	c8 c9       	rjmp	.-3184   	; 0xb3da <EepromWriteBlock+0x4e>
    c04a:	ca cb       	rjmp	.-2156   	; 0xb7e0 <TriggerNote+0x30>
    c04c:	cc cd       	rjmp	.-1128   	; 0xbbe6 <ProcessMusic+0x3a0>
    c04e:	ce cf       	rjmp	.-100    	; 0xbfec <steptable+0x1e4>
    c050:	d0 d1       	rcall	.+928    	; 0xc3f2 <waves+0x3f2>
    c052:	d2 d3       	rcall	.+1956   	; 0xc7f8 <HideSprites+0xe>
    c054:	d4 d5       	rcall	.+2984   	; 0xcbfe <VramFillWindow+0xe>
    c056:	d6 d7       	rcall	.+4012   	; 0xd004 <SwapTileSet+0x26>
    c058:	d8 d9       	rcall	.-3152   	; 0xb40a <EepromWriteBlock+0x7e>
    c05a:	da db       	rcall	.-2124   	; 0xb810 <TriggerNote+0x60>
    c05c:	dc dd       	rcall	.-1096   	; 0xbc16 <ProcessMusic+0x3d0>
    c05e:	de df       	rcall	.-68     	; 0xc01c <waves+0x1c>
    c060:	e0 e1       	ldi	r30, 0x10	; 16
    c062:	e2 e3       	ldi	r30, 0x32	; 50
    c064:	e4 e5       	ldi	r30, 0x54	; 84
    c066:	e6 e7       	ldi	r30, 0x76	; 118
    c068:	e8 e9       	ldi	r30, 0x98	; 152
    c06a:	ea eb       	ldi	r30, 0xBA	; 186
    c06c:	ec ed       	ldi	r30, 0xDC	; 220
    c06e:	ee ef       	ldi	r30, 0xFE	; 254
    c070:	f0 f1       	brcs	.+124    	; 0xc0ee <waves+0xee>
    c072:	f2 f3       	brmi	.-4      	; 0xc070 <waves+0x70>
    c074:	f4 f5       	brge	.+124    	; 0xc0f2 <waves+0xf2>
    c076:	f6 f7       	brtc	.-4      	; 0xc074 <waves+0x74>
    c078:	f8 f9       	.word	0xf9f8	; ????
    c07a:	fa fb       	.word	0xfbfa	; ????
    c07c:	fc fd       	.word	0xfdfc	; ????
    c07e:	fe ff       	.word	0xfffe	; ????
    c080:	00 01       	movw	r0, r0
    c082:	02 03       	mulsu	r16, r18
    c084:	04 05       	cpc	r16, r4
    c086:	06 07       	cpc	r16, r22
    c088:	08 09       	sbc	r16, r8
    c08a:	0a 0b       	sbc	r16, r26
    c08c:	0c 0d       	add	r16, r12
    c08e:	0e 0f       	add	r16, r30
    c090:	10 11       	cpse	r17, r0
    c092:	12 13       	cpse	r17, r18
    c094:	14 15       	cp	r17, r4
    c096:	16 17       	cp	r17, r22
    c098:	18 19       	sub	r17, r8
    c09a:	1a 1b       	sub	r17, r26
    c09c:	1c 1d       	adc	r17, r12
    c09e:	1e 1f       	adc	r17, r30
    c0a0:	20 21       	and	r18, r0
    c0a2:	22 23       	and	r18, r18
    c0a4:	24 25       	eor	r18, r4
    c0a6:	26 27       	eor	r18, r22
    c0a8:	28 29       	or	r18, r8
    c0aa:	2a 2b       	or	r18, r26
    c0ac:	2c 2d       	mov	r18, r12
    c0ae:	2e 2f       	mov	r18, r30
    c0b0:	30 31       	cpi	r19, 0x10	; 16
    c0b2:	32 33       	cpi	r19, 0x32	; 50
    c0b4:	34 35       	cpi	r19, 0x54	; 84
    c0b6:	36 37       	cpi	r19, 0x76	; 118
    c0b8:	38 39       	cpi	r19, 0x98	; 152
    c0ba:	3a 3b       	cpi	r19, 0xBA	; 186
    c0bc:	3c 3d       	cpi	r19, 0xDC	; 220
    c0be:	3e 3f       	cpi	r19, 0xFE	; 254
    c0c0:	40 41       	sbci	r20, 0x10	; 16
    c0c2:	42 43       	sbci	r20, 0x32	; 50
    c0c4:	44 45       	sbci	r20, 0x54	; 84
    c0c6:	46 47       	sbci	r20, 0x76	; 118
    c0c8:	48 49       	sbci	r20, 0x98	; 152
    c0ca:	4a 4b       	sbci	r20, 0xBA	; 186
    c0cc:	4c 4d       	sbci	r20, 0xDC	; 220
    c0ce:	4e 4f       	sbci	r20, 0xFE	; 254
    c0d0:	50 51       	subi	r21, 0x10	; 16
    c0d2:	52 53       	subi	r21, 0x32	; 50
    c0d4:	54 55       	subi	r21, 0x54	; 84
    c0d6:	56 57       	subi	r21, 0x76	; 118
    c0d8:	58 59       	subi	r21, 0x98	; 152
    c0da:	5a 5b       	subi	r21, 0xBA	; 186
    c0dc:	5c 5d       	subi	r21, 0xDC	; 220
    c0de:	5e 5f       	subi	r21, 0xFE	; 254
    c0e0:	60 61       	ori	r22, 0x10	; 16
    c0e2:	62 63       	ori	r22, 0x32	; 50
    c0e4:	64 65       	ori	r22, 0x54	; 84
    c0e6:	66 67       	ori	r22, 0x76	; 118
    c0e8:	68 69       	ori	r22, 0x98	; 152
    c0ea:	6a 6b       	ori	r22, 0xBA	; 186
    c0ec:	6c 6d       	ori	r22, 0xDC	; 220
    c0ee:	6e 6f       	ori	r22, 0xFE	; 254
    c0f0:	70 71       	andi	r23, 0x10	; 16
    c0f2:	72 73       	andi	r23, 0x32	; 50
    c0f4:	74 75       	andi	r23, 0x54	; 84
    c0f6:	76 77       	andi	r23, 0x76	; 118
    c0f8:	78 79       	andi	r23, 0x98	; 152
    c0fa:	7a 7b       	andi	r23, 0xBA	; 186
    c0fc:	7c 7d       	andi	r23, 0xDC	; 220
    c0fe:	7e 7f       	andi	r23, 0xFE	; 254
    c100:	00 02       	muls	r16, r16
    c102:	04 06       	cpc	r0, r20
    c104:	08 0a       	sbc	r0, r24
    c106:	0c 0e       	add	r0, r28
    c108:	10 12       	cpse	r1, r16
    c10a:	14 16       	cp	r1, r20
    c10c:	18 1a       	sub	r1, r24
    c10e:	1c 1e       	adc	r1, r28
    c110:	20 22       	and	r2, r16
    c112:	24 26       	eor	r2, r20
    c114:	28 2a       	or	r2, r24
    c116:	2c 2e       	mov	r2, r28
    c118:	30 32       	cpi	r19, 0x20	; 32
    c11a:	34 36       	cpi	r19, 0x64	; 100
    c11c:	38 3a       	cpi	r19, 0xA8	; 168
    c11e:	3c 3e       	cpi	r19, 0xEC	; 236
    c120:	40 42       	sbci	r20, 0x20	; 32
    c122:	44 46       	sbci	r20, 0x64	; 100
    c124:	48 4a       	sbci	r20, 0xA8	; 168
    c126:	4c 4e       	sbci	r20, 0xEC	; 236
    c128:	50 52       	subi	r21, 0x20	; 32
    c12a:	54 56       	subi	r21, 0x64	; 100
    c12c:	58 5a       	subi	r21, 0xA8	; 168
    c12e:	5c 5e       	subi	r21, 0xEC	; 236
    c130:	60 62       	ori	r22, 0x20	; 32
    c132:	64 66       	ori	r22, 0x64	; 100
    c134:	68 6a       	ori	r22, 0xA8	; 168
    c136:	6c 6e       	ori	r22, 0xEC	; 236
    c138:	70 72       	andi	r23, 0x20	; 32
    c13a:	74 76       	andi	r23, 0x64	; 100
    c13c:	78 7a       	andi	r23, 0xA8	; 168
    c13e:	7c 7e       	andi	r23, 0xEC	; 236
    c140:	7f 7d       	andi	r23, 0xDF	; 223
    c142:	7b 79       	andi	r23, 0x9B	; 155
    c144:	77 75       	andi	r23, 0x57	; 87
    c146:	73 71       	andi	r23, 0x13	; 19
    c148:	6f 6d       	ori	r22, 0xDF	; 223
    c14a:	6b 69       	ori	r22, 0x9B	; 155
    c14c:	67 65       	ori	r22, 0x57	; 87
    c14e:	63 61       	ori	r22, 0x13	; 19
    c150:	5f 5d       	subi	r21, 0xDF	; 223
    c152:	5b 59       	subi	r21, 0x9B	; 155
    c154:	57 55       	subi	r21, 0x57	; 87
    c156:	53 51       	subi	r21, 0x13	; 19
    c158:	4f 4d       	sbci	r20, 0xDF	; 223
    c15a:	4b 49       	sbci	r20, 0x9B	; 155
    c15c:	47 45       	sbci	r20, 0x57	; 87
    c15e:	43 41       	sbci	r20, 0x13	; 19
    c160:	3f 3d       	cpi	r19, 0xDF	; 223
    c162:	3b 39       	cpi	r19, 0x9B	; 155
    c164:	37 35       	cpi	r19, 0x57	; 87
    c166:	33 31       	cpi	r19, 0x13	; 19
    c168:	2f 2d       	mov	r18, r15
    c16a:	2b 29       	or	r18, r11
    c16c:	27 25       	eor	r18, r7
    c16e:	23 21       	and	r18, r3
    c170:	1f 1d       	adc	r17, r15
    c172:	1b 19       	sub	r17, r11
    c174:	17 15       	cp	r17, r7
    c176:	13 11       	cpse	r17, r3
    c178:	0f 0d       	add	r16, r15
    c17a:	0b 09       	sbc	r16, r11
    c17c:	07 05       	cpc	r16, r7
    c17e:	03 01       	movw	r0, r6
    c180:	ff fd       	.word	0xfdff	; ????
    c182:	fb f9       	.word	0xf9fb	; ????
    c184:	f7 f5       	brid	.+124    	; 0xc202 <waves+0x202>
    c186:	f3 f1       	brvs	.+124    	; 0xc204 <waves+0x204>
    c188:	ef ed       	ldi	r30, 0xDF	; 223
    c18a:	eb e9       	ldi	r30, 0x9B	; 155
    c18c:	e7 e5       	ldi	r30, 0x57	; 87
    c18e:	e3 e1       	ldi	r30, 0x13	; 19
    c190:	df dd       	rcall	.-1090   	; 0xbd50 <set_note_waves+0x12>
    c192:	db d9       	rcall	.-3146   	; 0xb54a <PatchCommand11+0x72>
    c194:	d7 d5       	rcall	.+2990   	; 0xcd44 <SokoMove+0x90>
    c196:	d3 d1       	rcall	.+934    	; 0xc53e <InitializeVideoMode+0xe>
    c198:	cf cd       	rjmp	.-1122   	; 0xbd38 <SetMixerNote+0x4>
    c19a:	cb c9       	rjmp	.-3178   	; 0xb532 <PatchCommand11+0x5a>
    c19c:	c7 c5       	rjmp	.+2958   	; 0xcd2c <SokoMove+0x78>
    c19e:	c3 c1       	rjmp	.+902    	; 0xc526 <RestoreBackground+0x26>
    c1a0:	bf bd       	out	0x2f, r27	; 47
    c1a2:	bb b9       	out	0x0b, r27	; 11
    c1a4:	b7 b5       	in	r27, 0x27	; 39
    c1a6:	b3 b1       	in	r27, 0x03	; 3
    c1a8:	af ad       	ldd	r26, Y+63	; 0x3f
    c1aa:	ab a9       	ldd	r26, Y+51	; 0x33
    c1ac:	a7 a5       	ldd	r26, Z+47	; 0x2f
    c1ae:	a3 a1       	ldd	r26, Z+35	; 0x23
    c1b0:	9f 9d       	mul	r25, r15
    c1b2:	9b 99       	sbic	0x13, 3	; 19
    c1b4:	97 95       	ror	r25
    c1b6:	93 91       	.word	0x9193	; ????
    c1b8:	8f 8d       	ldd	r24, Y+31	; 0x1f
    c1ba:	8b 89       	ldd	r24, Y+19	; 0x13
    c1bc:	87 85       	ldd	r24, Z+15	; 0x0f
    c1be:	83 81       	ldd	r24, Z+3	; 0x03
    c1c0:	80 82       	st	Z, r8
    c1c2:	84 86       	std	Z+12, r8	; 0x0c
    c1c4:	88 8a       	std	Y+16, r8	; 0x10
    c1c6:	8c 8e       	std	Y+28, r8	; 0x1c
    c1c8:	90 92 94 96 	sts	0x9694, r9
    c1cc:	98 9a       	sbi	0x13, 0	; 19
    c1ce:	9c 9e       	mul	r9, r28
    c1d0:	a0 a2       	std	Z+32, r10	; 0x20
    c1d2:	a4 a6       	std	Z+44, r10	; 0x2c
    c1d4:	a8 aa       	std	Y+48, r10	; 0x30
    c1d6:	ac ae       	std	Y+60, r10	; 0x3c
    c1d8:	b0 b2       	in	r11, 0x10	; 16
    c1da:	b4 b6       	in	r11, 0x34	; 52
    c1dc:	b8 ba       	out	0x18, r11	; 24
    c1de:	bc be       	out	0x3c, r11	; 60
    c1e0:	c0 c2       	rjmp	.+1408   	; 0xc762 <printdigitoverlaid+0x6>
    c1e2:	c4 c6       	rjmp	.+3464   	; 0xcf6c <Render+0x38>
    c1e4:	c8 ca       	rjmp	.-2672   	; 0xb776 <TriggerCommon+0xd8>
    c1e6:	cc ce       	rjmp	.-616    	; 0xbf80 <steptable+0x178>
    c1e8:	d0 d2       	rcall	.+1440   	; 0xc78a <printdigitoverlaid+0x2e>
    c1ea:	d4 d6       	rcall	.+3496   	; 0xcf94 <Render+0x60>
    c1ec:	d8 da       	rcall	.-2640   	; 0xb79e <TriggerCommon+0x100>
    c1ee:	dc de       	rcall	.-584    	; 0xbfa8 <steptable+0x1a0>
    c1f0:	e0 e2       	ldi	r30, 0x20	; 32
    c1f2:	e4 e6       	ldi	r30, 0x64	; 100
    c1f4:	e8 ea       	ldi	r30, 0xA8	; 168
    c1f6:	ec ee       	ldi	r30, 0xEC	; 236
    c1f8:	f0 f2       	brcs	.-68     	; 0xc1b6 <waves+0x1b6>
    c1fa:	f4 f6       	brge	.-68     	; 0xc1b8 <waves+0x1b8>
    c1fc:	f8 fa       	.word	0xfaf8	; ????
    c1fe:	fc fe       	.word	0xfefc	; ????
    c200:	7f 7f       	andi	r23, 0xFF	; 255
    c202:	7f 7f       	andi	r23, 0xFF	; 255
    c204:	7f 7f       	andi	r23, 0xFF	; 255
    c206:	7f 7f       	andi	r23, 0xFF	; 255
    c208:	7f 7f       	andi	r23, 0xFF	; 255
    c20a:	7f 7f       	andi	r23, 0xFF	; 255
    c20c:	7f 7f       	andi	r23, 0xFF	; 255
    c20e:	7f 7f       	andi	r23, 0xFF	; 255
    c210:	7f 7f       	andi	r23, 0xFF	; 255
    c212:	7f 7f       	andi	r23, 0xFF	; 255
    c214:	7f 7f       	andi	r23, 0xFF	; 255
    c216:	7f 7f       	andi	r23, 0xFF	; 255
    c218:	7f 7f       	andi	r23, 0xFF	; 255
    c21a:	7f 7f       	andi	r23, 0xFF	; 255
    c21c:	7f 7f       	andi	r23, 0xFF	; 255
    c21e:	7f 7f       	andi	r23, 0xFF	; 255
    c220:	7f 7f       	andi	r23, 0xFF	; 255
    c222:	7f 7f       	andi	r23, 0xFF	; 255
    c224:	7f 7f       	andi	r23, 0xFF	; 255
    c226:	7f 7f       	andi	r23, 0xFF	; 255
    c228:	7f 7f       	andi	r23, 0xFF	; 255
    c22a:	7f 7f       	andi	r23, 0xFF	; 255
    c22c:	7f 7f       	andi	r23, 0xFF	; 255
    c22e:	7f 7f       	andi	r23, 0xFF	; 255
    c230:	7f 7f       	andi	r23, 0xFF	; 255
    c232:	7f 7f       	andi	r23, 0xFF	; 255
    c234:	7f 7f       	andi	r23, 0xFF	; 255
    c236:	7f 7f       	andi	r23, 0xFF	; 255
    c238:	7f 7f       	andi	r23, 0xFF	; 255
    c23a:	7f 7f       	andi	r23, 0xFF	; 255
    c23c:	7f 7f       	andi	r23, 0xFF	; 255
    c23e:	7f 7f       	andi	r23, 0xFF	; 255
    c240:	7f 7f       	andi	r23, 0xFF	; 255
    c242:	7f 7f       	andi	r23, 0xFF	; 255
    c244:	7f 7f       	andi	r23, 0xFF	; 255
    c246:	7f 7f       	andi	r23, 0xFF	; 255
    c248:	7f 7f       	andi	r23, 0xFF	; 255
    c24a:	7f 7f       	andi	r23, 0xFF	; 255
    c24c:	7f 7f       	andi	r23, 0xFF	; 255
    c24e:	7f 7f       	andi	r23, 0xFF	; 255
    c250:	7f 7f       	andi	r23, 0xFF	; 255
    c252:	7f 7f       	andi	r23, 0xFF	; 255
    c254:	7f 7f       	andi	r23, 0xFF	; 255
    c256:	7f 7f       	andi	r23, 0xFF	; 255
    c258:	7f 7f       	andi	r23, 0xFF	; 255
    c25a:	7f 7f       	andi	r23, 0xFF	; 255
    c25c:	7f 7f       	andi	r23, 0xFF	; 255
    c25e:	7f 7f       	andi	r23, 0xFF	; 255
    c260:	7f 7f       	andi	r23, 0xFF	; 255
    c262:	7f 7f       	andi	r23, 0xFF	; 255
    c264:	7f 7f       	andi	r23, 0xFF	; 255
    c266:	7f 7f       	andi	r23, 0xFF	; 255
    c268:	7f 7f       	andi	r23, 0xFF	; 255
    c26a:	7f 7f       	andi	r23, 0xFF	; 255
    c26c:	7f 7f       	andi	r23, 0xFF	; 255
    c26e:	7f 7f       	andi	r23, 0xFF	; 255
    c270:	7f 7f       	andi	r23, 0xFF	; 255
    c272:	7f 7f       	andi	r23, 0xFF	; 255
    c274:	7f 7f       	andi	r23, 0xFF	; 255
    c276:	7f 7f       	andi	r23, 0xFF	; 255
    c278:	7f 7f       	andi	r23, 0xFF	; 255
    c27a:	7f 7f       	andi	r23, 0xFF	; 255
    c27c:	7f 7f       	andi	r23, 0xFF	; 255
    c27e:	7f 7f       	andi	r23, 0xFF	; 255
    c280:	80 80       	ld	r8, Z
    c282:	80 80       	ld	r8, Z
    c284:	80 80       	ld	r8, Z
    c286:	80 80       	ld	r8, Z
    c288:	80 80       	ld	r8, Z
    c28a:	80 80       	ld	r8, Z
    c28c:	80 80       	ld	r8, Z
    c28e:	80 80       	ld	r8, Z
    c290:	80 80       	ld	r8, Z
    c292:	80 80       	ld	r8, Z
    c294:	80 80       	ld	r8, Z
    c296:	80 80       	ld	r8, Z
    c298:	80 80       	ld	r8, Z
    c29a:	80 80       	ld	r8, Z
    c29c:	80 80       	ld	r8, Z
    c29e:	80 80       	ld	r8, Z
    c2a0:	80 80       	ld	r8, Z
    c2a2:	80 80       	ld	r8, Z
    c2a4:	80 80       	ld	r8, Z
    c2a6:	80 80       	ld	r8, Z
    c2a8:	80 80       	ld	r8, Z
    c2aa:	80 80       	ld	r8, Z
    c2ac:	80 80       	ld	r8, Z
    c2ae:	80 80       	ld	r8, Z
    c2b0:	80 80       	ld	r8, Z
    c2b2:	80 80       	ld	r8, Z
    c2b4:	80 80       	ld	r8, Z
    c2b6:	80 80       	ld	r8, Z
    c2b8:	80 80       	ld	r8, Z
    c2ba:	80 80       	ld	r8, Z
    c2bc:	80 80       	ld	r8, Z
    c2be:	80 80       	ld	r8, Z
    c2c0:	80 80       	ld	r8, Z
    c2c2:	80 80       	ld	r8, Z
    c2c4:	80 80       	ld	r8, Z
    c2c6:	80 80       	ld	r8, Z
    c2c8:	80 80       	ld	r8, Z
    c2ca:	80 80       	ld	r8, Z
    c2cc:	80 80       	ld	r8, Z
    c2ce:	80 80       	ld	r8, Z
    c2d0:	80 80       	ld	r8, Z
    c2d2:	80 80       	ld	r8, Z
    c2d4:	80 80       	ld	r8, Z
    c2d6:	80 80       	ld	r8, Z
    c2d8:	80 80       	ld	r8, Z
    c2da:	80 80       	ld	r8, Z
    c2dc:	80 80       	ld	r8, Z
    c2de:	80 80       	ld	r8, Z
    c2e0:	80 80       	ld	r8, Z
    c2e2:	80 80       	ld	r8, Z
    c2e4:	80 80       	ld	r8, Z
    c2e6:	80 80       	ld	r8, Z
    c2e8:	80 80       	ld	r8, Z
    c2ea:	80 80       	ld	r8, Z
    c2ec:	80 80       	ld	r8, Z
    c2ee:	80 80       	ld	r8, Z
    c2f0:	80 80       	ld	r8, Z
    c2f2:	80 80       	ld	r8, Z
    c2f4:	80 80       	ld	r8, Z
    c2f6:	80 80       	ld	r8, Z
    c2f8:	80 80       	ld	r8, Z
    c2fa:	80 80       	ld	r8, Z
    c2fc:	80 80       	ld	r8, Z
    c2fe:	80 80       	ld	r8, Z
    c300:	7f 7f       	andi	r23, 0xFF	; 255
    c302:	7f 7f       	andi	r23, 0xFF	; 255
    c304:	7f 7f       	andi	r23, 0xFF	; 255
    c306:	7f 7f       	andi	r23, 0xFF	; 255
    c308:	7f 7f       	andi	r23, 0xFF	; 255
    c30a:	7f 7f       	andi	r23, 0xFF	; 255
    c30c:	7f 7f       	andi	r23, 0xFF	; 255
    c30e:	7f 7f       	andi	r23, 0xFF	; 255
    c310:	7f 7f       	andi	r23, 0xFF	; 255
    c312:	7f 7f       	andi	r23, 0xFF	; 255
    c314:	7f 7f       	andi	r23, 0xFF	; 255
    c316:	7f 7f       	andi	r23, 0xFF	; 255
    c318:	7f 7f       	andi	r23, 0xFF	; 255
    c31a:	7f 7f       	andi	r23, 0xFF	; 255
    c31c:	7f 7f       	andi	r23, 0xFF	; 255
    c31e:	7f 7f       	andi	r23, 0xFF	; 255
    c320:	7f 7f       	andi	r23, 0xFF	; 255
    c322:	7f 7f       	andi	r23, 0xFF	; 255
    c324:	7f 7f       	andi	r23, 0xFF	; 255
    c326:	7f 7f       	andi	r23, 0xFF	; 255
    c328:	7f 7f       	andi	r23, 0xFF	; 255
    c32a:	7f 7f       	andi	r23, 0xFF	; 255
    c32c:	7f 7f       	andi	r23, 0xFF	; 255
    c32e:	7f 7f       	andi	r23, 0xFF	; 255
    c330:	7f 7f       	andi	r23, 0xFF	; 255
    c332:	7f 7f       	andi	r23, 0xFF	; 255
    c334:	7f 7f       	andi	r23, 0xFF	; 255
    c336:	7f 7f       	andi	r23, 0xFF	; 255
    c338:	7f 7f       	andi	r23, 0xFF	; 255
    c33a:	7f 7f       	andi	r23, 0xFF	; 255
    c33c:	7f 7f       	andi	r23, 0xFF	; 255
    c33e:	7f 7f       	andi	r23, 0xFF	; 255
    c340:	7f 7f       	andi	r23, 0xFF	; 255
    c342:	7f 7f       	andi	r23, 0xFF	; 255
    c344:	7f 7f       	andi	r23, 0xFF	; 255
    c346:	7f 7f       	andi	r23, 0xFF	; 255
    c348:	7f 7f       	andi	r23, 0xFF	; 255
    c34a:	7f 7f       	andi	r23, 0xFF	; 255
    c34c:	7f 7f       	andi	r23, 0xFF	; 255
    c34e:	7f 7f       	andi	r23, 0xFF	; 255
    c350:	7f 7f       	andi	r23, 0xFF	; 255
    c352:	7f 7f       	andi	r23, 0xFF	; 255
    c354:	7f 7f       	andi	r23, 0xFF	; 255
    c356:	7f 7f       	andi	r23, 0xFF	; 255
    c358:	7f 7f       	andi	r23, 0xFF	; 255
    c35a:	7f 7f       	andi	r23, 0xFF	; 255
    c35c:	7f 7f       	andi	r23, 0xFF	; 255
    c35e:	7f 7f       	andi	r23, 0xFF	; 255
    c360:	7f 7f       	andi	r23, 0xFF	; 255
    c362:	7f 7f       	andi	r23, 0xFF	; 255
    c364:	7f 7f       	andi	r23, 0xFF	; 255
    c366:	7f 7f       	andi	r23, 0xFF	; 255
    c368:	7f 7f       	andi	r23, 0xFF	; 255
    c36a:	7f 7f       	andi	r23, 0xFF	; 255
    c36c:	7f 7f       	andi	r23, 0xFF	; 255
    c36e:	7f 7f       	andi	r23, 0xFF	; 255
    c370:	7f 7f       	andi	r23, 0xFF	; 255
    c372:	7f 7f       	andi	r23, 0xFF	; 255
    c374:	7f 7f       	andi	r23, 0xFF	; 255
    c376:	7f 7f       	andi	r23, 0xFF	; 255
    c378:	7f 7f       	andi	r23, 0xFF	; 255
    c37a:	7f 7f       	andi	r23, 0xFF	; 255
    c37c:	7f 7f       	andi	r23, 0xFF	; 255
    c37e:	7f 7f       	andi	r23, 0xFF	; 255
    c380:	7f 7f       	andi	r23, 0xFF	; 255
    c382:	7f 7f       	andi	r23, 0xFF	; 255
    c384:	7f 7f       	andi	r23, 0xFF	; 255
    c386:	7f 7f       	andi	r23, 0xFF	; 255
    c388:	7f 7f       	andi	r23, 0xFF	; 255
    c38a:	7f 7f       	andi	r23, 0xFF	; 255
    c38c:	7f 7f       	andi	r23, 0xFF	; 255
    c38e:	7f 7f       	andi	r23, 0xFF	; 255
    c390:	7f 7f       	andi	r23, 0xFF	; 255
    c392:	7f 7f       	andi	r23, 0xFF	; 255
    c394:	7f 7f       	andi	r23, 0xFF	; 255
    c396:	7f 7f       	andi	r23, 0xFF	; 255
    c398:	7f 7f       	andi	r23, 0xFF	; 255
    c39a:	7f 7f       	andi	r23, 0xFF	; 255
    c39c:	7f 7f       	andi	r23, 0xFF	; 255
    c39e:	7f 7f       	andi	r23, 0xFF	; 255
    c3a0:	7f 7f       	andi	r23, 0xFF	; 255
    c3a2:	7f 7f       	andi	r23, 0xFF	; 255
    c3a4:	7f 7f       	andi	r23, 0xFF	; 255
    c3a6:	7f 7f       	andi	r23, 0xFF	; 255
    c3a8:	7f 7f       	andi	r23, 0xFF	; 255
    c3aa:	7f 7f       	andi	r23, 0xFF	; 255
    c3ac:	7f 7f       	andi	r23, 0xFF	; 255
    c3ae:	7f 7f       	andi	r23, 0xFF	; 255
    c3b0:	7f 7f       	andi	r23, 0xFF	; 255
    c3b2:	7f 7f       	andi	r23, 0xFF	; 255
    c3b4:	7f 7f       	andi	r23, 0xFF	; 255
    c3b6:	7f 7f       	andi	r23, 0xFF	; 255
    c3b8:	7f 7f       	andi	r23, 0xFF	; 255
    c3ba:	7f 7f       	andi	r23, 0xFF	; 255
    c3bc:	7f 7f       	andi	r23, 0xFF	; 255
    c3be:	7f 7f       	andi	r23, 0xFF	; 255
    c3c0:	80 80       	ld	r8, Z
    c3c2:	80 80       	ld	r8, Z
    c3c4:	80 80       	ld	r8, Z
    c3c6:	80 80       	ld	r8, Z
    c3c8:	80 80       	ld	r8, Z
    c3ca:	80 80       	ld	r8, Z
    c3cc:	80 80       	ld	r8, Z
    c3ce:	80 80       	ld	r8, Z
    c3d0:	80 80       	ld	r8, Z
    c3d2:	80 80       	ld	r8, Z
    c3d4:	80 80       	ld	r8, Z
    c3d6:	80 80       	ld	r8, Z
    c3d8:	80 80       	ld	r8, Z
    c3da:	80 80       	ld	r8, Z
    c3dc:	80 80       	ld	r8, Z
    c3de:	80 80       	ld	r8, Z
    c3e0:	80 80       	ld	r8, Z
    c3e2:	80 80       	ld	r8, Z
    c3e4:	80 80       	ld	r8, Z
    c3e6:	80 80       	ld	r8, Z
    c3e8:	80 80       	ld	r8, Z
    c3ea:	80 80       	ld	r8, Z
    c3ec:	80 80       	ld	r8, Z
    c3ee:	80 80       	ld	r8, Z
    c3f0:	80 80       	ld	r8, Z
    c3f2:	80 80       	ld	r8, Z
    c3f4:	80 80       	ld	r8, Z
    c3f6:	80 80       	ld	r8, Z
    c3f8:	80 80       	ld	r8, Z
    c3fa:	80 80       	ld	r8, Z
    c3fc:	80 80       	ld	r8, Z
    c3fe:	80 80       	ld	r8, Z
    c400:	03 09       	sbc	r16, r3
    c402:	13 1e       	adc	r1, r19
    c404:	28 31       	cpi	r18, 0x18	; 24
    c406:	3a 40       	sbci	r19, 0x0A	; 10
    c408:	46 4c       	sbci	r20, 0xC6	; 198
    c40a:	50 54       	subi	r21, 0x40	; 64
    c40c:	58 5b       	subi	r21, 0xB8	; 184
    c40e:	5e 61       	ori	r21, 0x1E	; 30
    c410:	63 65       	ori	r22, 0x53	; 83
    c412:	67 69       	ori	r22, 0x97	; 151
    c414:	6b 6c       	ori	r22, 0xCB	; 203
    c416:	6e 6f       	ori	r22, 0xFE	; 254
    c418:	70 71       	andi	r23, 0x10	; 16
    c41a:	72 73       	andi	r23, 0x32	; 50
    c41c:	74 75       	andi	r23, 0x54	; 84
    c41e:	76 77       	andi	r23, 0x76	; 118
    c420:	77 78       	andi	r23, 0x87	; 135
    c422:	79 79       	andi	r23, 0x99	; 153
    c424:	7a 7a       	andi	r23, 0xAA	; 170
    c426:	7b 7b       	andi	r23, 0xBB	; 187
    c428:	7c 7c       	andi	r23, 0xCC	; 204
    c42a:	7c 7d       	andi	r23, 0xDC	; 220
    c42c:	7d 7d       	andi	r23, 0xDD	; 221
    c42e:	7e 7e       	andi	r23, 0xEE	; 238
    c430:	7e 7e       	andi	r23, 0xEE	; 238
    c432:	7f 7f       	andi	r23, 0xFF	; 255
    c434:	7f 7f       	andi	r23, 0xFF	; 255
    c436:	7f 7f       	andi	r23, 0xFF	; 255
    c438:	7f 7f       	andi	r23, 0xFF	; 255
    c43a:	7f 7f       	andi	r23, 0xFF	; 255
    c43c:	7f 7f       	andi	r23, 0xFF	; 255
    c43e:	7f 7f       	andi	r23, 0xFF	; 255
    c440:	7f 7f       	andi	r23, 0xFF	; 255
    c442:	7f 7f       	andi	r23, 0xFF	; 255
    c444:	7f 7f       	andi	r23, 0xFF	; 255
    c446:	7f 7f       	andi	r23, 0xFF	; 255
    c448:	7f 7f       	andi	r23, 0xFF	; 255
    c44a:	7f 7f       	andi	r23, 0xFF	; 255
    c44c:	7f 7e       	andi	r23, 0xEF	; 239
    c44e:	7e 7e       	andi	r23, 0xEE	; 238
    c450:	7e 7d       	andi	r23, 0xDE	; 222
    c452:	7d 7d       	andi	r23, 0xDD	; 221
    c454:	7c 7c       	andi	r23, 0xCC	; 204
    c456:	7c 7b       	andi	r23, 0xBC	; 188
    c458:	7b 7a       	andi	r23, 0xAB	; 171
    c45a:	7a 79       	andi	r23, 0x9A	; 154
    c45c:	79 78       	andi	r23, 0x89	; 137
    c45e:	77 77       	andi	r23, 0x77	; 119
    c460:	76 75       	andi	r23, 0x56	; 86
    c462:	74 73       	andi	r23, 0x34	; 52
    c464:	72 71       	andi	r23, 0x12	; 18
    c466:	70 6f       	ori	r23, 0xF0	; 240
    c468:	6e 6c       	ori	r22, 0xCE	; 206
    c46a:	6b 69       	ori	r22, 0x9B	; 155
    c46c:	67 65       	ori	r22, 0x57	; 87
    c46e:	63 61       	ori	r22, 0x13	; 19
    c470:	5e 5b       	subi	r21, 0xBE	; 190
    c472:	58 54       	subi	r21, 0x48	; 72
    c474:	50 4c       	sbci	r21, 0xC0	; 192
    c476:	46 40       	sbci	r20, 0x06	; 6
    c478:	3a 31       	cpi	r19, 0x1A	; 26
    c47a:	28 1e       	adc	r2, r24
    c47c:	13 09       	sbc	r17, r3
    c47e:	03 00       	.word	0x0003	; ????
    c480:	c6 cc       	rjmp	.-1652   	; 0xbe0e <steptable+0x6>
    c482:	d5 db       	rcall	.-2134   	; 0xbc2e <ProcessMusic+0x3e8>
    c484:	df e3       	ldi	r29, 0x3F	; 63
    c486:	e5 e7       	ldi	r30, 0x75	; 117
    c488:	e9 ea       	ldi	r30, 0xA9	; 169
    c48a:	eb ec       	ldi	r30, 0xCB	; 203
    c48c:	ed ee       	ldi	r30, 0xED	; 237
    c48e:	ef ef       	ldi	r30, 0xFF	; 255
    c490:	f0 f0       	brcs	.+60     	; 0xc4ce <waves+0x4ce>
    c492:	f0 f1       	brcs	.+124    	; 0xc510 <RestoreBackground+0x10>
    c494:	f1 f1       	breq	.+124    	; 0xc512 <RestoreBackground+0x12>
    c496:	f1 f2       	breq	.-68     	; 0xc454 <waves+0x454>
    c498:	f2 f2       	brmi	.-68     	; 0xc456 <waves+0x456>
    c49a:	f2 f2       	brmi	.-68     	; 0xc458 <waves+0x458>
    c49c:	f2 f2       	brmi	.-68     	; 0xc45a <waves+0x45a>
    c49e:	f2 f3       	brmi	.-4      	; 0xc49c <waves+0x49c>
    c4a0:	f3 f3       	brvs	.-4      	; 0xc49e <waves+0x49e>
    c4a2:	f3 f3       	brvs	.-4      	; 0xc4a0 <waves+0x4a0>
    c4a4:	f3 f3       	brvs	.-4      	; 0xc4a2 <waves+0x4a2>
    c4a6:	f3 f3       	brvs	.-4      	; 0xc4a4 <waves+0x4a4>
    c4a8:	f3 f3       	brvs	.-4      	; 0xc4a6 <waves+0x4a6>
    c4aa:	f3 f3       	brvs	.-4      	; 0xc4a8 <waves+0x4a8>
    c4ac:	f3 f3       	brvs	.-4      	; 0xc4aa <waves+0x4aa>
    c4ae:	f3 f3       	brvs	.-4      	; 0xc4ac <waves+0x4ac>
    c4b0:	f3 f3       	brvs	.-4      	; 0xc4ae <waves+0x4ae>
    c4b2:	f3 f3       	brvs	.-4      	; 0xc4b0 <waves+0x4b0>
    c4b4:	f3 f3       	brvs	.-4      	; 0xc4b2 <waves+0x4b2>
    c4b6:	f3 f3       	brvs	.-4      	; 0xc4b4 <waves+0x4b4>
    c4b8:	f3 f3       	brvs	.-4      	; 0xc4b6 <waves+0x4b6>
    c4ba:	f3 f3       	brvs	.-4      	; 0xc4b8 <waves+0x4b8>
    c4bc:	f3 f3       	brvs	.-4      	; 0xc4ba <waves+0x4ba>
    c4be:	f3 f3       	brvs	.-4      	; 0xc4bc <waves+0x4bc>
    c4c0:	f3 f3       	brvs	.-4      	; 0xc4be <waves+0x4be>
    c4c2:	f3 f3       	brvs	.-4      	; 0xc4c0 <waves+0x4c0>
    c4c4:	f3 f3       	brvs	.-4      	; 0xc4c2 <waves+0x4c2>
    c4c6:	f3 f3       	brvs	.-4      	; 0xc4c4 <waves+0x4c4>
    c4c8:	f3 f3       	brvs	.-4      	; 0xc4c6 <waves+0x4c6>
    c4ca:	f3 f3       	brvs	.-4      	; 0xc4c8 <waves+0x4c8>
    c4cc:	f3 f3       	brvs	.-4      	; 0xc4ca <waves+0x4ca>
    c4ce:	f3 f3       	brvs	.-4      	; 0xc4cc <waves+0x4cc>
    c4d0:	f3 f3       	brvs	.-4      	; 0xc4ce <waves+0x4ce>
    c4d2:	f3 f3       	brvs	.-4      	; 0xc4d0 <waves+0x4d0>
    c4d4:	f3 f3       	brvs	.-4      	; 0xc4d2 <waves+0x4d2>
    c4d6:	f3 f3       	brvs	.-4      	; 0xc4d4 <waves+0x4d4>
    c4d8:	f3 f3       	brvs	.-4      	; 0xc4d6 <waves+0x4d6>
    c4da:	f3 f3       	brvs	.-4      	; 0xc4d8 <waves+0x4d8>
    c4dc:	f3 f3       	brvs	.-4      	; 0xc4da <waves+0x4da>
    c4de:	f3 f3       	brvs	.-4      	; 0xc4dc <waves+0x4dc>
    c4e0:	f2 f2       	brmi	.-68     	; 0xc49e <waves+0x49e>
    c4e2:	f2 f2       	brmi	.-68     	; 0xc4a0 <waves+0x4a0>
    c4e4:	f2 f2       	brmi	.-68     	; 0xc4a2 <waves+0x4a2>
    c4e6:	f2 f2       	brmi	.-68     	; 0xc4a4 <waves+0x4a4>
    c4e8:	f1 f1       	breq	.+124    	; 0xc566 <FadeIn+0x6>
    c4ea:	f1 f1       	breq	.+124    	; 0xc568 <FadeIn+0x8>
    c4ec:	f0 f0       	brcs	.+60     	; 0xc52a <RestoreBackground+0x2a>
    c4ee:	f0 ef       	ldi	r31, 0xF0	; 240
    c4f0:	ef ee       	ldi	r30, 0xEF	; 239
    c4f2:	ed ec       	ldi	r30, 0xCD	; 205
    c4f4:	eb ea       	ldi	r30, 0xAB	; 171
    c4f6:	e9 e7       	ldi	r30, 0x79	; 121
    c4f8:	e5 e3       	ldi	r30, 0x35	; 53
    c4fa:	df db       	rcall	.-2114   	; 0xbcba <TriggerFx+0x22>
    c4fc:	d5 cc       	rjmp	.-1622   	; 0xbea8 <steptable+0xa0>
    c4fe:	c6 00       	.word	0x00c6	; ????

0000c500 <RestoreBackground>:
	unsigned char free_tile_index;
	bool spritesOn=true;

	void RestoreBackground(){
		unsigned char i;
		for(i=0;i<free_tile_index;i++){			
    c500:	30 91 69 0d 	lds	r19, 0x0D69
    c504:	20 e0       	ldi	r18, 0x00	; 0
    c506:	10 c0       	rjmp	.+32     	; 0xc528 <RestoreBackground+0x28>
			vram[ram_tiles_restore[i].addr]=ram_tiles_restore[i].tileIndex;
    c508:	82 2f       	mov	r24, r18
    c50a:	90 e0       	ldi	r25, 0x00	; 0
    c50c:	fc 01       	movw	r30, r24
    c50e:	ee 0f       	add	r30, r30
    c510:	ff 1f       	adc	r31, r31
    c512:	e8 0f       	add	r30, r24
    c514:	f9 1f       	adc	r31, r25
    c516:	e8 5c       	subi	r30, 0xC8	; 200
    c518:	f3 4f       	sbci	r31, 0xF3	; 243
    c51a:	a0 81       	ld	r26, Z
    c51c:	b1 81       	ldd	r27, Z+1	; 0x01
    c51e:	a0 5e       	subi	r26, 0xE0	; 224
    c520:	be 4f       	sbci	r27, 0xFE	; 254
    c522:	82 81       	ldd	r24, Z+2	; 0x02
    c524:	8c 93       	st	X, r24
	unsigned char free_tile_index;
	bool spritesOn=true;

	void RestoreBackground(){
		unsigned char i;
		for(i=0;i<free_tile_index;i++){			
    c526:	2f 5f       	subi	r18, 0xFF	; 255
    c528:	23 17       	cp	r18, r19
    c52a:	70 f3       	brcs	.-36     	; 0xc508 <RestoreBackground+0x8>
			vram[ram_tiles_restore[i].addr]=ram_tiles_restore[i].tileIndex;
		}	
	}
    c52c:	08 95       	ret

0000c52e <DisplayLogo>:
		
			WaitVsync(65);
			ClearVram();
			WaitVsync(20);
		#endif	
	}
    c52e:	08 95       	ret

0000c530 <InitializeVideoMode>:


	//Callback invoked by UzeboxCore.Initialize()
	void InitializeVideoMode(){
    c530:	e8 e6       	ldi	r30, 0x68	; 104
    c532:	f4 e0       	ldi	r31, 0x04	; 4

		//disable sprites
		for(int i=0;i<MAX_SPRITES;i++){
			sprites[i].x=(SCREEN_TILES_H*TILE_WIDTH);		
    c534:	80 ef       	ldi	r24, 0xF0	; 240
    c536:	80 83       	st	Z, r24
    c538:	34 96       	adiw	r30, 0x04	; 4

	//Callback invoked by UzeboxCore.Initialize()
	void InitializeVideoMode(){

		//disable sprites
		for(int i=0;i<MAX_SPRITES;i++){
    c53a:	94 e0       	ldi	r25, 0x04	; 4
    c53c:	e8 3b       	cpi	r30, 0xB8	; 184
    c53e:	f9 07       	cpc	r31, r25
    c540:	d1 f7       	brne	.-12     	; 0xc536 <InitializeVideoMode+0x6>
			screenSections[i].wrapLine=0;
			screenSections[i].flags=SCT_PRIORITY_SPR;
		}
		*/

	}
    c542:	08 95       	ret

0000c544 <doFade>:
char fadeDir;
bool volatile fadeActive;


void doFade(unsigned char speed,bool blocking){
	fadeSpeed=speed;
    c544:	80 93 67 0d 	sts	0x0D67, r24
	currFadeFrame=0;
    c548:	10 92 6b 0d 	sts	0x0D6B, r1
	fadeActive=true;
    c54c:	81 e0       	ldi	r24, 0x01	; 1
    c54e:	80 93 6a 0d 	sts	0x0D6A, r24
		
	if(blocking){
    c552:	66 23       	and	r22, r22
    c554:	21 f0       	breq	.+8      	; 0xc55e <doFade+0x1a>
		while(fadeActive==true);
    c556:	80 91 6a 0d 	lds	r24, 0x0D6A
    c55a:	88 23       	and	r24, r24
    c55c:	e1 f7       	brne	.-8      	; 0xc556 <doFade+0x12>
    c55e:	08 95       	ret

0000c560 <FadeIn>:
	}
	
	
}

void FadeIn(unsigned char speed,bool blocking){
    c560:	98 2f       	mov	r25, r24
	if(speed==0){
    c562:	88 23       	and	r24, r24
    c564:	19 f4       	brne	.+6      	; 0xc56c <FadeIn+0xc>
		DDRC=0xff;
    c566:	8f ef       	ldi	r24, 0xFF	; 255
    c568:	87 b9       	out	0x07, r24	; 7
    c56a:	08 95       	ret
		return;
	}
	fadeStep=1;
    c56c:	81 e0       	ldi	r24, 0x01	; 1
    c56e:	80 93 6c 0d 	sts	0x0D6C, r24
	fadeDir=1;
    c572:	80 93 68 0d 	sts	0x0D68, r24
	doFade(speed,blocking);
    c576:	89 2f       	mov	r24, r25
    c578:	0e 94 a2 62 	call	0xc544	; 0xc544 <doFade>
    c57c:	08 95       	ret

0000c57e <FadeOut>:
}

void FadeOut(unsigned char speed,bool blocking){
    c57e:	98 2f       	mov	r25, r24
	if(speed==0){
    c580:	88 23       	and	r24, r24
    c582:	11 f4       	brne	.+4      	; 0xc588 <FadeOut+0xa>
		DDRC=0;
    c584:	17 b8       	out	0x07, r1	; 7
    c586:	08 95       	ret
		return;
	}
	
	fadeStep=FADER_STEPS;
    c588:	8c e0       	ldi	r24, 0x0C	; 12
    c58a:	80 93 6c 0d 	sts	0x0D6C, r24
	fadeDir=-1;
    c58e:	8f ef       	ldi	r24, 0xFF	; 255
    c590:	80 93 68 0d 	sts	0x0D68, r24
	doFade(speed,blocking);
    c594:	89 2f       	mov	r24, r25
    c596:	0e 94 a2 62 	call	0xc544	; 0xc544 <doFade>
    c59a:	08 95       	ret

0000c59c <ProcessFading>:
}


//called by the kernel at each field end
void ProcessFading(){
	if(fadeActive==true){
    c59c:	80 91 6a 0d 	lds	r24, 0x0D6A
    c5a0:	88 23       	and	r24, r24
    c5a2:	f9 f0       	breq	.+62     	; 0xc5e2 <ProcessFading+0x46>
		if(currFadeFrame==0){
    c5a4:	80 91 6b 0d 	lds	r24, 0x0D6B
    c5a8:	88 23       	and	r24, r24
    c5aa:	c1 f4       	brne	.+48     	; 0xc5dc <ProcessFading+0x40>
			currFadeFrame=fadeSpeed;
    c5ac:	80 91 67 0d 	lds	r24, 0x0D67
    c5b0:	80 93 6b 0d 	sts	0x0D6B, r24
			DDRC = pgm_read_byte(&(fader[fadeStep-1]));
    c5b4:	80 91 6c 0d 	lds	r24, 0x0D6C
    c5b8:	e8 2f       	mov	r30, r24
    c5ba:	f0 e0       	ldi	r31, 0x00	; 0
    c5bc:	e9 52       	subi	r30, 0x29	; 41
    c5be:	ff 4f       	sbci	r31, 0xFF	; 255
    c5c0:	e4 91       	lpm	r30, Z+
    c5c2:	e7 b9       	out	0x07, r30	; 7
			fadeStep+=fadeDir;
    c5c4:	90 91 68 0d 	lds	r25, 0x0D68
    c5c8:	98 0f       	add	r25, r24
    c5ca:	90 93 6c 0d 	sts	0x0D6C, r25
			if(fadeStep==0 || fadeStep==(FADER_STEPS+1)){
    c5ce:	99 23       	and	r25, r25
    c5d0:	11 f0       	breq	.+4      	; 0xc5d6 <ProcessFading+0x3a>
    c5d2:	9d 30       	cpi	r25, 0x0D	; 13
    c5d4:	31 f4       	brne	.+12     	; 0xc5e2 <ProcessFading+0x46>
				fadeActive=false;
    c5d6:	10 92 6a 0d 	sts	0x0D6A, r1
    c5da:	08 95       	ret
			}
		}else{
			currFadeFrame--;
    c5dc:	81 50       	subi	r24, 0x01	; 1
    c5de:	80 93 6b 0d 	sts	0x0D6B, r24
    c5e2:	08 95       	ret

0000c5e4 <WaitVsync>:
		}
	}
}

//Wait for the beginning of next frame (60hz)
void WaitVsync(int count){
    c5e4:	0f 93       	push	r16
    c5e6:	1f 93       	push	r17
    c5e8:	cf 93       	push	r28
    c5ea:	df 93       	push	r29
    c5ec:	8c 01       	movw	r16, r24
    c5ee:	c0 e0       	ldi	r28, 0x00	; 0
    c5f0:	d0 e0       	ldi	r29, 0x00	; 0
    c5f2:	07 c0       	rjmp	.+14     	; 0xc602 <WaitVsync+0x1e>
	int i;
	//ClearVsyncFlag();
	for(i=0;i<count;i++){
		while(!GetVsyncFlag());
    c5f4:	0e 94 dd 58 	call	0xb1ba	; 0xb1ba <GetVsyncFlag>
    c5f8:	88 23       	and	r24, r24
    c5fa:	e1 f3       	breq	.-8      	; 0xc5f4 <WaitVsync+0x10>
		ClearVsyncFlag();		
    c5fc:	0e 94 e1 58 	call	0xb1c2	; 0xb1c2 <ClearVsyncFlag>

//Wait for the beginning of next frame (60hz)
void WaitVsync(int count){
	int i;
	//ClearVsyncFlag();
	for(i=0;i<count;i++){
    c600:	21 96       	adiw	r28, 0x01	; 1
    c602:	c0 17       	cp	r28, r16
    c604:	d1 07       	cpc	r29, r17
    c606:	b4 f3       	brlt	.-20     	; 0xc5f4 <WaitVsync+0x10>
		while(!GetVsyncFlag());
		ClearVsyncFlag();		
	}
}
    c608:	df 91       	pop	r29
    c60a:	cf 91       	pop	r28
    c60c:	1f 91       	pop	r17
    c60e:	0f 91       	pop	r16
    c610:	08 95       	ret

0000c612 <ProcessSprites>:
		}

	}
	

void ProcessSprites(){
    c612:	a3 e0       	ldi	r26, 0x03	; 3
    c614:	b0 e0       	ldi	r27, 0x00	; 0
    c616:	ef e0       	ldi	r30, 0x0F	; 15
    c618:	f3 e6       	ldi	r31, 0x63	; 99
    c61a:	0c 94 36 77 	jmp	0xee6c	; 0xee6c <__prologue_saves__>
	
		unsigned char i,bx,by,dx,dy,bt,x,y,tx=1,ty=1,wx,wy;
		unsigned int ramPtr,ssx,ssy;

		free_tile_index=0;	
    c61e:	10 92 69 0d 	sts	0x0D69, r1
		if(!spritesOn) return;
    c622:	80 91 00 01 	lds	r24, 0x0100
    c626:	88 23       	and	r24, r24
    c628:	09 f4       	brne	.+2      	; 0xc62c <ProcessSprites+0x1a>
    c62a:	8f c0       	rjmp	.+286    	; 0xc74a <ProcessSprites+0x138>
    c62c:	e8 e6       	ldi	r30, 0x68	; 104
    c62e:	8e 2e       	mov	r8, r30
    c630:	e4 e0       	ldi	r30, 0x04	; 4
    c632:	9e 2e       	mov	r9, r30
    c634:	77 24       	eor	r7, r7
	
		for(i=0;i<MAX_SPRITES;i++){
			bx=sprites[i].x;
    c636:	f4 01       	movw	r30, r8
    c638:	80 81       	ld	r24, Z

			if(bx!=(SCREEN_TILES_H*TILE_WIDTH)){
    c63a:	80 3f       	cpi	r24, 0xF0	; 240
    c63c:	09 f4       	brne	.+2      	; 0xc640 <ProcessSprites+0x2e>
    c63e:	7a c0       	rjmp	.+244    	; 0xc734 <ProcessSprites+0x122>
				#if SCROLLING == 1
					ssx=sprites[i].x+Screen.scrollX;
					ssy=sprites[i].y+Screen.scrollY;
   				#else
					ssx=sprites[i].x;
					ssy=sprites[i].y;
    c640:	91 81       	ldd	r25, Z+1	; 0x01

				tx=1;
				ty=1;

				//get the BG tiles that are overlapped by the sprite
				bx=ssx>>3;
    c642:	f8 2f       	mov	r31, r24
    c644:	f6 95       	lsr	r31
    c646:	f6 95       	lsr	r31
    c648:	f6 95       	lsr	r31
    c64a:	f9 83       	std	Y+1, r31	; 0x01
				dx=ssx&0x7;
    c64c:	28 2f       	mov	r18, r24
    c64e:	27 70       	andi	r18, 0x07	; 7
				if(dx>0) tx++;
    c650:	19 f0       	breq	.+6      	; 0xc658 <ProcessSprites+0x46>
    c652:	72 e0       	ldi	r23, 0x02	; 2
    c654:	27 2e       	mov	r2, r23
    c656:	02 c0       	rjmp	.+4      	; 0xc65c <ProcessSprites+0x4a>
    c658:	22 24       	eor	r2, r2
    c65a:	23 94       	inc	r2

				//by=ssy>>3;
				//dy=ssy&0x7;
				by=ssy/TILE_HEIGHT;
    c65c:	39 2f       	mov	r19, r25
    c65e:	36 95       	lsr	r19
    c660:	36 95       	lsr	r19
    c662:	36 95       	lsr	r19
				dy=ssy%TILE_HEIGHT;
    c664:	89 2f       	mov	r24, r25
    c666:	87 70       	andi	r24, 0x07	; 7
				if(dy>0) ty++;			
    c668:	19 f0       	breq	.+6      	; 0xc670 <ProcessSprites+0x5e>
    c66a:	62 e0       	ldi	r22, 0x02	; 2
    c66c:	66 2e       	mov	r6, r22
    c66e:	02 c0       	rjmp	.+4      	; 0xc674 <ProcessSprites+0x62>
    c670:	66 24       	eor	r6, r6
    c672:	63 94       	inc	r6
								bt=free_tile_index;
								free_tile_index++;										
							}
				
							if(bt<RAM_TILES_COUNT){				
								BlitSprite(i,bt,(y<<8)+x,(dy<<8)+dx);						
    c674:	b8 2e       	mov	r11, r24
    c676:	aa 24       	eor	r10, r10
    c678:	25 01       	movw	r4, r10
    c67a:	42 0e       	add	r4, r18
    c67c:	51 1c       	adc	r5, r1
    c67e:	c3 2e       	mov	r12, r19
    c680:	ee 24       	eor	r14, r14
    c682:	ff 24       	eor	r15, r15
    c684:	4d c0       	rjmp	.+154    	; 0xc720 <ProcessSprites+0x10e>

							//process X-Y wrapping
                            #if SCROLLING == 0
							    if(wy>=(VRAM_TILES_V*2)){
								    wy-=(VRAM_TILES_V*2);
							    }else if(wy>=VRAM_TILES_V){
    c686:	2b e1       	ldi	r18, 0x1B	; 27
    c688:	2c 15       	cp	r18, r12
    c68a:	10 f0       	brcs	.+4      	; 0xc690 <ProcessSprites+0x7e>
    c68c:	9c 2d       	mov	r25, r12
    c68e:	01 c0       	rjmp	.+2      	; 0xc692 <ProcessSprites+0x80>
    c690:	93 2d       	mov	r25, r3
								    wy-=(Screen.scrollHeight*2);
							    }else if(wy>=Screen.scrollHeight){
							    	wy-=Screen.scrollHeight;
							    }
                            #endif
							if(wx>=VRAM_TILES_H)wx-=VRAM_TILES_H; //should always be 32
    c692:	4d e1       	ldi	r20, 0x1D	; 29
    c694:	4d 15       	cp	r20, r13
    c696:	10 f0       	brcs	.+4      	; 0xc69c <ProcessSprites+0x8a>
    c698:	8d 2d       	mov	r24, r13
    c69a:	02 c0       	rjmp	.+4      	; 0xc6a0 <ProcessSprites+0x8e>
    c69c:	8d 2d       	mov	r24, r13
    c69e:	8e 51       	subi	r24, 0x1E	; 30

							#if SCROLLING == 0
								ramPtr=(wy*VRAM_TILES_H)+wx;
    c6a0:	ee e1       	ldi	r30, 0x1E	; 30
    c6a2:	9e 9f       	mul	r25, r30
    c6a4:	90 01       	movw	r18, r0
    c6a6:	11 24       	eor	r1, r1
    c6a8:	28 0f       	add	r18, r24
    c6aa:	31 1d       	adc	r19, r1

								ramPtr=((wy>>3)*256)+(wx*8)+(wy&7);	

							#endif

							bt=vram[ramPtr];						
    c6ac:	89 01       	movw	r16, r18
    c6ae:	00 5e       	subi	r16, 0xE0	; 224
    c6b0:	1e 4f       	sbci	r17, 0xFE	; 254
    c6b2:	f8 01       	movw	r30, r16
    c6b4:	60 81       	ld	r22, Z

							if( (bt>=RAM_TILES_COUNT)  && (free_tile_index < RAM_TILES_COUNT) ){
    c6b6:	6e 31       	cpi	r22, 0x1E	; 30
    c6b8:	f0 f0       	brcs	.+60     	; 0xc6f6 <ProcessSprites+0xe4>
    c6ba:	40 91 69 0d 	lds	r20, 0x0D69
    c6be:	4e 31       	cpi	r20, 0x1E	; 30
    c6c0:	00 f5       	brcc	.+64     	; 0xc702 <ProcessSprites+0xf0>

								//tile is mapped to flash. Copy it to next free RAM tile.
								//if no ram free ignore tile
								ram_tiles_restore[free_tile_index].addr=ramPtr;
    c6c2:	84 2f       	mov	r24, r20
    c6c4:	90 e0       	ldi	r25, 0x00	; 0
    c6c6:	fc 01       	movw	r30, r24
    c6c8:	ee 0f       	add	r30, r30
    c6ca:	ff 1f       	adc	r31, r31
    c6cc:	e8 0f       	add	r30, r24
    c6ce:	f9 1f       	adc	r31, r25
    c6d0:	e8 5c       	subi	r30, 0xC8	; 200
    c6d2:	f3 4f       	sbci	r31, 0xF3	; 243
    c6d4:	31 83       	std	Z+1, r19	; 0x01
    c6d6:	20 83       	st	Z, r18
								ram_tiles_restore[free_tile_index].tileIndex=bt;
    c6d8:	62 83       	std	Z+2, r22	; 0x02
													
								CopyTileToRam(bt,free_tile_index);
    c6da:	86 2f       	mov	r24, r22
    c6dc:	64 2f       	mov	r22, r20
    c6de:	0e 94 09 56 	call	0xac12	; 0xac12 <CopyTileToRam>

								vram[ramPtr]=free_tile_index;
    c6e2:	60 91 69 0d 	lds	r22, 0x0D69
    c6e6:	f8 01       	movw	r30, r16
    c6e8:	60 83       	st	Z, r22
								bt=free_tile_index;
								free_tile_index++;										
    c6ea:	6f 5f       	subi	r22, 0xFF	; 255
    c6ec:	60 93 69 0d 	sts	0x0D69, r22
    c6f0:	61 50       	subi	r22, 0x01	; 1
							}
				
							if(bt<RAM_TILES_COUNT){				
    c6f2:	6e 31       	cpi	r22, 0x1E	; 30
    c6f4:	30 f4       	brcc	.+12     	; 0xc702 <ProcessSprites+0xf0>
								BlitSprite(i,bt,(y<<8)+x,(dy<<8)+dx);						
    c6f6:	87 2d       	mov	r24, r7
    c6f8:	4a 81       	ldd	r20, Y+2	; 0x02
    c6fa:	5b 81       	ldd	r21, Y+3	; 0x03
    c6fc:	92 01       	movw	r18, r4
    c6fe:	0e 94 9a 56 	call	0xad34	; 0xad34 <BlitSprite>
    c702:	8a 81       	ldd	r24, Y+2	; 0x02
    c704:	9b 81       	ldd	r25, Y+3	; 0x03
    c706:	01 96       	adiw	r24, 0x01	; 1
    c708:	9b 83       	std	Y+3, r25	; 0x03
    c70a:	8a 83       	std	Y+2, r24	; 0x02
    c70c:	d3 94       	inc	r13
				dy=ssy%TILE_HEIGHT;
				if(dy>0) ty++;			

				for(y=0;y<ty;y++){

					for(x=0;x<tx;x++){
    c70e:	82 15       	cp	r24, r2
    c710:	08 f4       	brcc	.+2      	; 0xc714 <ProcessSprites+0x102>
    c712:	b9 cf       	rjmp	.-142    	; 0xc686 <ProcessSprites+0x74>
    c714:	08 94       	sec
    c716:	e1 1c       	adc	r14, r1
    c718:	f1 1c       	adc	r15, r1
    c71a:	c3 94       	inc	r12
				//dy=ssy&0x7;
				by=ssy/TILE_HEIGHT;
				dy=ssy%TILE_HEIGHT;
				if(dy>0) ty++;			

				for(y=0;y<ty;y++){
    c71c:	e6 14       	cp	r14, r6
    c71e:	50 f4       	brcc	.+20     	; 0xc734 <ProcessSprites+0x122>
								bt=free_tile_index;
								free_tile_index++;										
							}
				
							if(bt<RAM_TILES_COUNT){				
								BlitSprite(i,bt,(y<<8)+x,(dy<<8)+dx);						
    c720:	80 e0       	ldi	r24, 0x00	; 0
    c722:	9e 2d       	mov	r25, r14
    c724:	9c 01       	movw	r18, r24
    c726:	3b 83       	std	Y+3, r19	; 0x03
    c728:	2a 83       	std	Y+2, r18	; 0x02
    c72a:	d9 80       	ldd	r13, Y+1	; 0x01

							//process X-Y wrapping
                            #if SCROLLING == 0
							    if(wy>=(VRAM_TILES_V*2)){
								    wy-=(VRAM_TILES_V*2);
							    }else if(wy>=VRAM_TILES_V){
    c72c:	b4 ee       	ldi	r27, 0xE4	; 228
    c72e:	3b 2e       	mov	r3, r27
    c730:	3c 0c       	add	r3, r12
    c732:	a9 cf       	rjmp	.-174    	; 0xc686 <ProcessSprites+0x74>
		unsigned int ramPtr,ssx,ssy;

		free_tile_index=0;	
		if(!spritesOn) return;
	
		for(i=0;i<MAX_SPRITES;i++){
    c734:	73 94       	inc	r7
    c736:	e4 e0       	ldi	r30, 0x04	; 4
    c738:	f0 e0       	ldi	r31, 0x00	; 0
    c73a:	8e 0e       	add	r8, r30
    c73c:	9f 1e       	adc	r9, r31
    c73e:	f4 e1       	ldi	r31, 0x14	; 20
    c740:	7f 16       	cp	r7, r31
    c742:	09 f0       	breq	.+2      	; 0xc746 <ProcessSprites+0x134>
    c744:	78 cf       	rjmp	.-272    	; 0xc636 <ProcessSprites+0x24>
			}//	if(bx<(SCREEN_TILES_H*TILE_WIDTH))		
		}


		//restore BG tiles
		RestoreBackground();
    c746:	0e 94 80 62 	call	0xc500	; 0xc500 <RestoreBackground>

	}
    c74a:	23 96       	adiw	r28, 0x03	; 3
    c74c:	e2 e1       	ldi	r30, 0x12	; 18
    c74e:	0c 94 52 77 	jmp	0xeea4	; 0xeea4 <__epilogue_restores__>

0000c752 <VideoModeVsync>:
	}

	//Callback invoked during hsync
	void VideoModeVsync(){
		
		ProcessFading();
    c752:	0e 94 ce 62 	call	0xc59c	; 0xc59c <ProcessFading>
		ProcessSprites();
    c756:	0e 94 09 63 	call	0xc612	; 0xc612 <ProcessSprites>

	}
    c75a:	08 95       	ret

0000c75c <printdigitoverlaid>:
		val=val/10;
	}

}

void printdigitoverlaid(u8 x,u8 y, u8 val, u8 ramoff, u8 ck, u8 bg){
    c75c:	ef 92       	push	r14
    c75e:	0f 93       	push	r16
    c760:	cf 93       	push	r28
    c762:	df 93       	push	r29
    c764:	38 2f       	mov	r19, r24
    c766:	ee 2d       	mov	r30, r14
    c768:	f0 e0       	ldi	r31, 0x00	; 0
    c76a:	a6 e0       	ldi	r26, 0x06	; 6
    c76c:	ee 0f       	add	r30, r30
    c76e:	ff 1f       	adc	r31, r31
    c770:	aa 95       	dec	r26
    c772:	e1 f7       	brne	.-8      	; 0xc76c <printdigitoverlaid+0x10>
    c774:	ec 51       	subi	r30, 0x1C	; 28
    c776:	ff 4f       	sbci	r31, 0xFF	; 255
    c778:	a2 2f       	mov	r26, r18
    c77a:	b0 e0       	ldi	r27, 0x00	; 0
    c77c:	76 e0       	ldi	r23, 0x06	; 6
    c77e:	aa 0f       	add	r26, r26
    c780:	bb 1f       	adc	r27, r27
    c782:	7a 95       	dec	r23
    c784:	e1 f7       	brne	.-8      	; 0xc77e <printdigitoverlaid+0x22>
    c786:	a8 54       	subi	r26, 0x48	; 72
    c788:	bb 4f       	sbci	r27, 0xFB	; 251
    c78a:	ed 01       	movw	r28, r26
    c78c:	90 e0       	ldi	r25, 0x00	; 0
	 int toff = (FONTSTART+4+c)*64;	
	 int roff = ramoff*64;
	 u8 t;

	 for(u8 i=0;i<64;i++)//copy over the background tile
		ram_tiles[roff+i] = pgm_read_byte(&GameTiles[(bg*64)+i]);
    c78e:	84 91       	lpm	r24, Z+
    c790:	89 93       	st	Y+, r24
	u8 c = val;//%10;
	 int toff = (FONTSTART+4+c)*64;	
	 int roff = ramoff*64;
	 u8 t;

	 for(u8 i=0;i<64;i++)//copy over the background tile
    c792:	9f 5f       	subi	r25, 0xFF	; 255
    c794:	31 96       	adiw	r30, 0x01	; 1
    c796:	90 34       	cpi	r25, 0x40	; 64
    c798:	d1 f7       	brne	.-12     	; 0xc78e <printdigitoverlaid+0x32>
		ram_tiles[roff+i] = pgm_read_byte(&GameTiles[(bg*64)+i]);

	vram[(y*30)+x] = ramoff;
    c79a:	86 2f       	mov	r24, r22
    c79c:	90 e0       	ldi	r25, 0x00	; 0
    c79e:	fc 01       	movw	r30, r24
    c7a0:	55 e0       	ldi	r21, 0x05	; 5
    c7a2:	ee 0f       	add	r30, r30
    c7a4:	ff 1f       	adc	r31, r31
    c7a6:	5a 95       	dec	r21
    c7a8:	e1 f7       	brne	.-8      	; 0xc7a2 <printdigitoverlaid+0x46>
    c7aa:	88 0f       	add	r24, r24
    c7ac:	99 1f       	adc	r25, r25
    c7ae:	e8 1b       	sub	r30, r24
    c7b0:	f9 0b       	sbc	r31, r25
    c7b2:	e3 0f       	add	r30, r19
    c7b4:	f1 1d       	adc	r31, r1
    c7b6:	e0 5e       	subi	r30, 0xE0	; 224
    c7b8:	fe 4f       	sbci	r31, 0xFE	; 254
    c7ba:	20 83       	st	Z, r18
    c7bc:	e4 2f       	mov	r30, r20
    c7be:	f0 e0       	ldi	r31, 0x00	; 0
    c7c0:	66 e0       	ldi	r22, 0x06	; 6
    c7c2:	ee 0f       	add	r30, r30
    c7c4:	ff 1f       	adc	r31, r31
    c7c6:	6a 95       	dec	r22
    c7c8:	e1 f7       	brne	.-8      	; 0xc7c2 <printdigitoverlaid+0x66>
    c7ca:	ec 59       	subi	r30, 0x9C	; 156
    c7cc:	fd 4d       	sbci	r31, 0xDD	; 221
    c7ce:	90 e0       	ldi	r25, 0x00	; 0
	 for(u8 i=0;i<64;i++){
		t = pgm_read_byte(&GameTiles[toff]);
    c7d0:	84 91       	lpm	r24, Z+
		if(t != ck)
    c7d2:	80 13       	cpse	r24, r16
			ram_tiles[roff] = t;
    c7d4:	8c 93       	st	X, r24

	 for(u8 i=0;i<64;i++)//copy over the background tile
		ram_tiles[roff+i] = pgm_read_byte(&GameTiles[(bg*64)+i]);

	vram[(y*30)+x] = ramoff;
	 for(u8 i=0;i<64;i++){
    c7d6:	9f 5f       	subi	r25, 0xFF	; 255
    c7d8:	31 96       	adiw	r30, 0x01	; 1
    c7da:	11 96       	adiw	r26, 0x01	; 1
    c7dc:	90 34       	cpi	r25, 0x40	; 64
    c7de:	c1 f7       	brne	.-16     	; 0xc7d0 <printdigitoverlaid+0x74>
			ram_tiles[roff] = t;

		toff++;
		roff++;
	}
}
    c7e0:	df 91       	pop	r29
    c7e2:	cf 91       	pop	r28
    c7e4:	0f 91       	pop	r16
    c7e6:	ef 90       	pop	r14
    c7e8:	08 95       	ret

0000c7ea <HideSprites>:
void Undo();
void Redo();

void HideSprites(u8 start, u8 end){
	 for(u8 i=start;i<end;i++)
		sprites[i].x = SCREEN_TILES_H*TILE_WIDTH;
    c7ea:	90 ef       	ldi	r25, 0xF0	; 240
    c7ec:	0a c0       	rjmp	.+20     	; 0xc802 <HideSprites+0x18>
    c7ee:	e8 2f       	mov	r30, r24
    c7f0:	f0 e0       	ldi	r31, 0x00	; 0
    c7f2:	ee 0f       	add	r30, r30
    c7f4:	ff 1f       	adc	r31, r31
    c7f6:	ee 0f       	add	r30, r30
    c7f8:	ff 1f       	adc	r31, r31
    c7fa:	e8 59       	subi	r30, 0x98	; 152
    c7fc:	fb 4f       	sbci	r31, 0xFB	; 251
    c7fe:	90 83       	st	Z, r25

void Undo();
void Redo();

void HideSprites(u8 start, u8 end){
	 for(u8 i=start;i<end;i++)
    c800:	8f 5f       	subi	r24, 0xFF	; 255
    c802:	86 17       	cp	r24, r22
    c804:	a0 f3       	brcs	.-24     	; 0xc7ee <HideSprites+0x4>
		sprites[i].x = SCREEN_TILES_H*TILE_WIDTH;
}
    c806:	08 95       	ret

0000c808 <IsBlock>:

void SetGuiState(u8 state);
void LoadLevel(bool flushmoves, bool fadein, bool shiftdown, bool skiptoprow, bool fromeep, bool skipsong);

void SetMapTile(u8 x, u8 y, u8 t);
bool IsBlock(u8 t){if(t==BLOCK||t==TBLOCK){return true;}return false;}
    c808:	90 e0       	ldi	r25, 0x00	; 0
    c80a:	83 50       	subi	r24, 0x03	; 3
    c80c:	82 30       	cpi	r24, 0x02	; 2
    c80e:	08 f4       	brcc	.+2      	; 0xc812 <IsBlock+0xa>
    c810:	91 e0       	ldi	r25, 0x01	; 1
    c812:	89 2f       	mov	r24, r25
    c814:	08 95       	ret

0000c816 <IsTBlock>:
bool IsTBlock(u8 t){if(t==TBLOCK){return true;}return false;}
    c816:	90 e0       	ldi	r25, 0x00	; 0
    c818:	84 30       	cpi	r24, 0x04	; 4
    c81a:	09 f4       	brne	.+2      	; 0xc81e <IsTBlock+0x8>
    c81c:	91 e0       	ldi	r25, 0x01	; 1
    c81e:	89 2f       	mov	r24, r25
    c820:	08 95       	ret

0000c822 <IsWall>:
bool IsWall(u8 t){if(t==WALL){return true;}return false;}
    c822:	90 e0       	ldi	r25, 0x00	; 0
    c824:	85 30       	cpi	r24, 0x05	; 5
    c826:	09 f4       	brne	.+2      	; 0xc82a <IsWall+0x8>
    c828:	91 e0       	ldi	r25, 0x01	; 1
    c82a:	89 2f       	mov	r24, r25
    c82c:	08 95       	ret

0000c82e <IsSolid>:
bool IsSolid(u8 t){if(IsBlock(t)||IsTBlock(t)||IsWall(t)){return true;}return false;}
    c82e:	1f 93       	push	r17
    c830:	18 2f       	mov	r17, r24
    c832:	0e 94 04 64 	call	0xc808	; 0xc808 <IsBlock>
    c836:	88 23       	and	r24, r24
    c838:	49 f4       	brne	.+18     	; 0xc84c <IsSolid+0x1e>
    c83a:	81 2f       	mov	r24, r17
    c83c:	0e 94 0b 64 	call	0xc816	; 0xc816 <IsTBlock>
    c840:	88 23       	and	r24, r24
    c842:	21 f4       	brne	.+8      	; 0xc84c <IsSolid+0x1e>
    c844:	81 2f       	mov	r24, r17
    c846:	0e 94 11 64 	call	0xc822	; 0xc822 <IsWall>
    c84a:	01 c0       	rjmp	.+2      	; 0xc84e <IsSolid+0x20>
    c84c:	81 e0       	ldi	r24, 0x01	; 1
    c84e:	1f 91       	pop	r17
    c850:	08 95       	ret

0000c852 <replaceramcolor>:
//TODO OPTIMIZE - HACKISH///
//////////////////////////////
//MUCH IS NOW OBSOLETE - USING MASKS NOW//////

void replaceramcolor(u8 to, u8 ro, u8 color){
    c852:	a6 2f       	mov	r26, r22
    c854:	b0 e0       	ldi	r27, 0x00	; 0
    c856:	96 e0       	ldi	r25, 0x06	; 6
    c858:	aa 0f       	add	r26, r26
    c85a:	bb 1f       	adc	r27, r27
    c85c:	9a 95       	dec	r25
    c85e:	e1 f7       	brne	.-8      	; 0xc858 <replaceramcolor+0x6>
    c860:	a8 54       	subi	r26, 0x48	; 72
    c862:	bb 4f       	sbci	r27, 0xFB	; 251
    c864:	e8 2f       	mov	r30, r24
    c866:	f0 e0       	ldi	r31, 0x00	; 0
    c868:	86 e0       	ldi	r24, 0x06	; 6
    c86a:	ee 0f       	add	r30, r30
    c86c:	ff 1f       	adc	r31, r31
    c86e:	8a 95       	dec	r24
    c870:	e1 f7       	brne	.-8      	; 0xc86a <replaceramcolor+0x18>
    c872:	ec 51       	subi	r30, 0x1C	; 28
    c874:	ff 4f       	sbci	r31, 0xFF	; 255
    c876:	90 e0       	ldi	r25, 0x00	; 0
	int toff = (to<<6);
	int roff = (ro<<6);
	u8 t;
	for(u8 i=0;i<64;i++){
		t = ram_tiles[roff];
	  if(t == color){ram_tiles[roff] = pgm_read_byte(&GameTiles[toff]);}//heres the color we wanted, replace it with one from the tileset
    c878:	8c 91       	ld	r24, X
    c87a:	84 17       	cp	r24, r20
    c87c:	11 f4       	brne	.+4      	; 0xc882 <replaceramcolor+0x30>
    c87e:	84 91       	lpm	r24, Z+
    c880:	8c 93       	st	X, r24

void replaceramcolor(u8 to, u8 ro, u8 color){
	int toff = (to<<6);
	int roff = (ro<<6);
	u8 t;
	for(u8 i=0;i<64;i++){
    c882:	9f 5f       	subi	r25, 0xFF	; 255
    c884:	11 96       	adiw	r26, 0x01	; 1
    c886:	31 96       	adiw	r30, 0x01	; 1
    c888:	90 34       	cpi	r25, 0x40	; 64
    c88a:	b1 f7       	brne	.-20     	; 0xc878 <replaceramcolor+0x26>
	  if(t == color){ram_tiles[roff] = pgm_read_byte(&GameTiles[toff]);}//heres the color we wanted, replace it with one from the tileset
	  
	  roff++;
	  toff++;
	}
}
    c88c:	08 95       	ret

0000c88e <ttoram>:
	  ++roff; ++toff; ++soff; off++;
	}
}


void ttoram(int toff, int roff, int len){
    c88e:	db 01       	movw	r26, r22
    c890:	fc 01       	movw	r30, r24
    c892:	ec 51       	subi	r30, 0x1C	; 28
    c894:	ff 4f       	sbci	r31, 0xFF	; 255
    c896:	a8 54       	subi	r26, 0x48	; 72
    c898:	bb 4f       	sbci	r27, 0xFB	; 251
    c89a:	03 c0       	rjmp	.+6      	; 0xc8a2 <ttoram+0x14>
	while(len--)
		ram_tiles[roff++] = pgm_read_byte(&GameTiles[toff++]);
    c89c:	84 91       	lpm	r24, Z+
    c89e:	8d 93       	st	X+, r24
    c8a0:	31 96       	adiw	r30, 0x01	; 1
	}
}


void ttoram(int toff, int roff, int len){
	while(len--)
    c8a2:	41 50       	subi	r20, 0x01	; 1
    c8a4:	50 40       	sbci	r21, 0x00	; 0
    c8a6:	8f ef       	ldi	r24, 0xFF	; 255
    c8a8:	4f 3f       	cpi	r20, 0xFF	; 255
    c8aa:	58 07       	cpc	r21, r24
    c8ac:	b9 f7       	brne	.-18     	; 0xc89c <ttoram+0xe>
		ram_tiles[roff++] = pgm_read_byte(&GameTiles[toff++]);
}
    c8ae:	08 95       	ret

0000c8b0 <printramtilesfancy>:
	if(finaldelay)
		WaitVsync(finaldelay);
}


u8 printramtilesfancy(u8 x,u8 y,const char *string,u8 ramoff,u8 sc,u8 dc,u8 sc2,u8 dc2){
    c8b0:	af 92       	push	r10
    c8b2:	cf 92       	push	r12
    c8b4:	ef 92       	push	r14
    c8b6:	ff 92       	push	r15
    c8b8:	0f 93       	push	r16
    c8ba:	1f 93       	push	r17
    c8bc:	cf 93       	push	r28
    c8be:	df 93       	push	r29
    c8c0:	f8 2e       	mov	r15, r24
    c8c2:	12 2f       	mov	r17, r18
	int i=0;
	char c;
	u8 t;
	 int off=ramoff<<6;//get our offset to the ram tile
    c8c4:	a2 2f       	mov	r26, r18
    c8c6:	b0 e0       	ldi	r27, 0x00	; 0
    c8c8:	96 e0       	ldi	r25, 0x06	; 6
    c8ca:	aa 0f       	add	r26, r26
    c8cc:	bb 1f       	adc	r27, r27
    c8ce:	9a 95       	dec	r25
    c8d0:	e1 f7       	brne	.-8      	; 0xc8ca <printramtilesfancy+0x1a>
				t = pgm_read_byte(&GameTiles[((c+FONTSTART-19)*64)+j]);
				if(t == sc){ram_tiles[off++] = dc;}
				else if(t == sc2){ram_tiles[off++] = dc2;}
				else								{ram_tiles[off++] = t;}
			}
			vram[(y*30)+x] = ramoff++;//SetTile(x++,y,c+FONTSTART-21);
    c8d2:	8e e1       	ldi	r24, 0x1E	; 30
    c8d4:	68 9f       	mul	r22, r24
    c8d6:	90 01       	movw	r18, r0
    c8d8:	11 24       	eor	r1, r1
    c8da:	ba 01       	movw	r22, r20
    c8dc:	20 5e       	subi	r18, 0xE0	; 224
    c8de:	3e 4f       	sbci	r19, 0xFE	; 254
	int i=0;
	char c;
	u8 t;
	 int off=ramoff<<6;//get our offset to the ram tile
	while(true){
		c=pgm_read_byte(&(string[i++]));		
    c8e0:	fb 01       	movw	r30, r22
    c8e2:	84 91       	lpm	r24, Z+
		if(c!=0){
    c8e4:	88 23       	and	r24, r24
    c8e6:	89 f1       	breq	.+98     	; 0xc94a <printramtilesfancy+0x9a>
			}
			vram[(y*30)+x] = ramoff++;//SetTile(x++,y,c+FONTSTART-21);
			x++;
			if(x>29){return ramoff;}//clip it to the screen
		}else{
			break;
    c8e8:	8f 77       	andi	r24, 0x7F	; 127
    c8ea:	80 52       	subi	r24, 0x20	; 32
    c8ec:	e8 2f       	mov	r30, r24
    c8ee:	ff 27       	eor	r31, r31
    c8f0:	e7 fd       	sbrc	r30, 7
    c8f2:	f0 95       	com	r31
    c8f4:	86 e0       	ldi	r24, 0x06	; 6
    c8f6:	ee 0f       	add	r30, r30
    c8f8:	ff 1f       	adc	r31, r31
    c8fa:	8a 95       	dec	r24
    c8fc:	e1 f7       	brne	.-8      	; 0xc8f6 <printramtilesfancy+0x46>
    c8fe:	ec 55       	subi	r30, 0x5C	; 92
    c900:	f3 4e       	sbci	r31, 0xE3	; 227
    c902:	ad 01       	movw	r20, r26
    c904:	4f 5f       	subi	r20, 0xFF	; 255
    c906:	5f 4f       	sbci	r21, 0xFF	; 255
    c908:	ed 01       	movw	r28, r26
    c90a:	c8 54       	subi	r28, 0x48	; 72
    c90c:	db 4f       	sbci	r29, 0xFB	; 251
    c90e:	90 e0       	ldi	r25, 0x00	; 0
		c=pgm_read_byte(&(string[i++]));		
		if(c!=0){
			c=((c&127)-32);

			for(u8 j=0;j<64;j++){//copy over the data		
				t = pgm_read_byte(&GameTiles[((c+FONTSTART-19)*64)+j]);
    c910:	84 91       	lpm	r24, Z+
				if(t == sc){ram_tiles[off++] = dc;}
    c912:	80 17       	cp	r24, r16
    c914:	11 f4       	brne	.+4      	; 0xc91a <printramtilesfancy+0x6a>
    c916:	e8 82       	st	Y, r14
    c918:	05 c0       	rjmp	.+10     	; 0xc924 <printramtilesfancy+0x74>
				else if(t == sc2){ram_tiles[off++] = dc2;}
    c91a:	8c 15       	cp	r24, r12
    c91c:	11 f4       	brne	.+4      	; 0xc922 <printramtilesfancy+0x72>
    c91e:	a8 82       	st	Y, r10
    c920:	01 c0       	rjmp	.+2      	; 0xc924 <printramtilesfancy+0x74>
				else								{ram_tiles[off++] = t;}
    c922:	88 83       	st	Y, r24
    c924:	da 01       	movw	r26, r20
	while(true){
		c=pgm_read_byte(&(string[i++]));		
		if(c!=0){
			c=((c&127)-32);

			for(u8 j=0;j<64;j++){//copy over the data		
    c926:	9f 5f       	subi	r25, 0xFF	; 255
    c928:	31 96       	adiw	r30, 0x01	; 1
    c92a:	4f 5f       	subi	r20, 0xFF	; 255
    c92c:	5f 4f       	sbci	r21, 0xFF	; 255
    c92e:	21 96       	adiw	r28, 0x01	; 1
    c930:	90 34       	cpi	r25, 0x40	; 64
    c932:	71 f7       	brne	.-36     	; 0xc910 <printramtilesfancy+0x60>
				t = pgm_read_byte(&GameTiles[((c+FONTSTART-19)*64)+j]);
				if(t == sc){ram_tiles[off++] = dc;}
				else if(t == sc2){ram_tiles[off++] = dc2;}
				else								{ram_tiles[off++] = t;}
			}
			vram[(y*30)+x] = ramoff++;//SetTile(x++,y,c+FONTSTART-21);
    c934:	f9 01       	movw	r30, r18
    c936:	ef 0d       	add	r30, r15
    c938:	f1 1d       	adc	r31, r1
    c93a:	10 83       	st	Z, r17
    c93c:	1f 5f       	subi	r17, 0xFF	; 255
			x++;
    c93e:	f3 94       	inc	r15
    c940:	6f 5f       	subi	r22, 0xFF	; 255
    c942:	7f 4f       	sbci	r23, 0xFF	; 255
			if(x>29){return ramoff;}//clip it to the screen
    c944:	fd e1       	ldi	r31, 0x1D	; 29
    c946:	ff 15       	cp	r31, r15
    c948:	58 f6       	brcc	.-106    	; 0xc8e0 <printramtilesfancy+0x30>
		}else{
			break;
		}
	}
	return ramoff;//return what ram tile offset we are at
}
    c94a:	81 2f       	mov	r24, r17
    c94c:	df 91       	pop	r29
    c94e:	cf 91       	pop	r28
    c950:	1f 91       	pop	r17
    c952:	0f 91       	pop	r16
    c954:	ff 90       	pop	r15
    c956:	ef 90       	pop	r14
    c958:	cf 90       	pop	r12
    c95a:	af 90       	pop	r10
    c95c:	08 95       	ret

0000c95e <printrainbow>:
		}
	}
	return ramoff;//return what ram tile offset we are at
}

u8 printrainbow(u8 x,u8 y,const char *string,u8 ramoff,u8 sc,u8 dc,u8 coff){
    c95e:	a0 e0       	ldi	r26, 0x00	; 0
    c960:	b0 e0       	ldi	r27, 0x00	; 0
    c962:	e5 eb       	ldi	r30, 0xB5	; 181
    c964:	f4 e6       	ldi	r31, 0x64	; 100
    c966:	0c 94 3f 77 	jmp	0xee7e	; 0xee7e <__prologue_saves__+0x12>
    c96a:	f2 2e       	mov	r15, r18
    c96c:	b0 2e       	mov	r11, r16
    c96e:	de 2c       	mov	r13, r14
	int i=0;
	char c;
	u8 t;
	u8 sc2,dc2;
	 int off=ramoff<<6;//get our offset to the ram tile
    c970:	c2 2f       	mov	r28, r18
    c972:	d0 e0       	ldi	r29, 0x00	; 0
    c974:	b6 e0       	ldi	r27, 0x06	; 6
    c976:	cc 0f       	add	r28, r28
    c978:	dd 1f       	adc	r29, r29
    c97a:	ba 95       	dec	r27
    c97c:	e1 f7       	brne	.-8      	; 0xc976 <printrainbow+0x18>
				t = pgm_read_byte(&GameTiles[((c+FONTSTART-19)*64)+j]);
				if(t == sc){ram_tiles[off++] = dc;}
				else if(t == sc2){ram_tiles[off++] = dc2;}
				else								{ram_tiles[off++] = t;}
			}
			vram[(y*30)+x] = ramoff++;
    c97e:	9e e1       	ldi	r25, 0x1E	; 30
    c980:	69 9f       	mul	r22, r25
    c982:	80 01       	movw	r16, r0
    c984:	11 24       	eor	r1, r1
    c986:	e4 2f       	mov	r30, r20
    c988:	f5 2f       	mov	r31, r21
    c98a:	bf 01       	movw	r22, r30
    c98c:	8f 5f       	subi	r24, 0xFF	; 255
    c98e:	00 5e       	subi	r16, 0xE0	; 224
    c990:	1e 4f       	sbci	r17, 0xFE	; 254
    c992:	03 c0       	rjmp	.+6      	; 0xc99a <printrainbow+0x3c>
    c994:	6f 5f       	subi	r22, 0xFF	; 255
    c996:	7f 4f       	sbci	r23, 0xFF	; 255
    c998:	8f 5f       	subi	r24, 0xFF	; 255
    c99a:	e8 2e       	mov	r14, r24
    c99c:	ea 94       	dec	r14
	char c;
	u8 t;
	u8 sc2,dc2;
	 int off=ramoff<<6;//get our offset to the ram tile
	while(true){
		c=pgm_read_byte(&(string[i++]));		
    c99e:	fb 01       	movw	r30, r22
    c9a0:	94 91       	lpm	r25, Z+
		if(c == '3'){x++;continue;}
    c9a2:	93 33       	cpi	r25, 0x33	; 51
    c9a4:	b9 f3       	breq	.-18     	; 0xc994 <printrainbow+0x36>
		if(c!=0){
    c9a6:	99 23       	and	r25, r25
    c9a8:	c1 f1       	breq	.+112    	; 0xca1a <printrainbow+0xbc>
			sc2 = 0xFF;//trade white
			dc2 = pgm_read_byte(&colormap[coff++]);
    c9aa:	ec 2d       	mov	r30, r12
    c9ac:	f0 e0       	ldi	r31, 0x00	; 0
    c9ae:	ec 55       	subi	r30, 0x5C	; 92
    c9b0:	fb 4c       	sbci	r31, 0xCB	; 203
    c9b2:	c3 94       	inc	r12
    c9b4:	54 91       	lpm	r21, Z+
			if(coff > 3){coff = 0;}
    c9b6:	f3 e0       	ldi	r31, 0x03	; 3
    c9b8:	fc 15       	cp	r31, r12
    c9ba:	08 f4       	brcc	.+2      	; 0xc9be <printrainbow+0x60>
    c9bc:	cc 24       	eor	r12, r12
    c9be:	9f 77       	andi	r25, 0x7F	; 127
    c9c0:	90 52       	subi	r25, 0x20	; 32
    c9c2:	e9 2f       	mov	r30, r25
    c9c4:	ff 27       	eor	r31, r31
    c9c6:	e7 fd       	sbrc	r30, 7
    c9c8:	f0 95       	com	r31
    c9ca:	a6 e0       	ldi	r26, 0x06	; 6
    c9cc:	ee 0f       	add	r30, r30
    c9ce:	ff 1f       	adc	r31, r31
    c9d0:	aa 95       	dec	r26
    c9d2:	e1 f7       	brne	.-8      	; 0xc9cc <printrainbow+0x6e>
    c9d4:	ec 55       	subi	r30, 0x5C	; 92
    c9d6:	f3 4e       	sbci	r31, 0xE3	; 227
    c9d8:	9e 01       	movw	r18, r28
    c9da:	2f 5f       	subi	r18, 0xFF	; 255
    c9dc:	3f 4f       	sbci	r19, 0xFF	; 255
    c9de:	de 01       	movw	r26, r28
    c9e0:	a8 54       	subi	r26, 0x48	; 72
    c9e2:	bb 4f       	sbci	r27, 0xFB	; 251
    c9e4:	40 e0       	ldi	r20, 0x00	; 0
			c=((c&127)-32);

			for(u8 j=0;j<64;j++){//copy over the data		
				t = pgm_read_byte(&GameTiles[((c+FONTSTART-19)*64)+j]);
    c9e6:	94 91       	lpm	r25, Z+
				if(t == sc){ram_tiles[off++] = dc;}
    c9e8:	9b 15       	cp	r25, r11
    c9ea:	11 f4       	brne	.+4      	; 0xc9f0 <printrainbow+0x92>
    c9ec:	dc 92       	st	X, r13
    c9ee:	05 c0       	rjmp	.+10     	; 0xc9fa <printrainbow+0x9c>
				else if(t == sc2){ram_tiles[off++] = dc2;}
    c9f0:	9f 3f       	cpi	r25, 0xFF	; 255
    c9f2:	11 f4       	brne	.+4      	; 0xc9f8 <printrainbow+0x9a>
    c9f4:	5c 93       	st	X, r21
    c9f6:	01 c0       	rjmp	.+2      	; 0xc9fa <printrainbow+0x9c>
				else								{ram_tiles[off++] = t;}
    c9f8:	9c 93       	st	X, r25
    c9fa:	e9 01       	movw	r28, r18
			sc2 = 0xFF;//trade white
			dc2 = pgm_read_byte(&colormap[coff++]);
			if(coff > 3){coff = 0;}
			c=((c&127)-32);

			for(u8 j=0;j<64;j++){//copy over the data		
    c9fc:	4f 5f       	subi	r20, 0xFF	; 255
    c9fe:	31 96       	adiw	r30, 0x01	; 1
    ca00:	2f 5f       	subi	r18, 0xFF	; 255
    ca02:	3f 4f       	sbci	r19, 0xFF	; 255
    ca04:	11 96       	adiw	r26, 0x01	; 1
    ca06:	40 34       	cpi	r20, 0x40	; 64
    ca08:	71 f7       	brne	.-36     	; 0xc9e6 <printrainbow+0x88>
				t = pgm_read_byte(&GameTiles[((c+FONTSTART-19)*64)+j]);
				if(t == sc){ram_tiles[off++] = dc;}
				else if(t == sc2){ram_tiles[off++] = dc2;}
				else								{ram_tiles[off++] = t;}
			}
			vram[(y*30)+x] = ramoff++;
    ca0a:	f8 01       	movw	r30, r16
    ca0c:	ee 0d       	add	r30, r14
    ca0e:	f1 1d       	adc	r31, r1
    ca10:	f0 82       	st	Z, r15
    ca12:	f3 94       	inc	r15
			x++;
			if(x>29){return ramoff;}//clip it to the screen
    ca14:	8e 31       	cpi	r24, 0x1E	; 30
    ca16:	08 f4       	brcc	.+2      	; 0xca1a <printrainbow+0xbc>
    ca18:	bd cf       	rjmp	.-134    	; 0xc994 <printrainbow+0x36>
		}else{
			break;
		}
	}
	return ramoff;//return what ram tile offset we are at if we had management to care
}
    ca1a:	8f 2d       	mov	r24, r15
    ca1c:	cd b7       	in	r28, 0x3d	; 61
    ca1e:	de b7       	in	r29, 0x3e	; 62
    ca20:	e9 e0       	ldi	r30, 0x09	; 9
    ca22:	0c 94 5b 77 	jmp	0xeeb6	; 0xeeb6 <__epilogue_restores__+0x12>

0000ca26 <StartDown>:
//these functions return true if the button was just pressed and not held
bool StartDown() {return((padstate  & BTN_START) && !(oldpadstate & BTN_START)) ;}
    ca26:	80 91 70 0d 	lds	r24, 0x0D70
    ca2a:	83 fd       	sbrc	r24, 3
    ca2c:	03 c0       	rjmp	.+6      	; 0xca34 <StartDown+0xe>
    ca2e:	80 e0       	ldi	r24, 0x00	; 0
    ca30:	90 e0       	ldi	r25, 0x00	; 0
    ca32:	08 95       	ret
    ca34:	80 91 6e 0d 	lds	r24, 0x0D6E
    ca38:	90 91 6f 0d 	lds	r25, 0x0D6F
    ca3c:	23 e0       	ldi	r18, 0x03	; 3
    ca3e:	96 95       	lsr	r25
    ca40:	87 95       	ror	r24
    ca42:	2a 95       	dec	r18
    ca44:	e1 f7       	brne	.-8      	; 0xca3e <StartDown+0x18>
    ca46:	80 95       	com	r24
    ca48:	81 70       	andi	r24, 0x01	; 1
    ca4a:	08 95       	ret

0000ca4c <SelectDown>:
bool SelectDown(){return((padstate  & BTN_SELECT)&& !(oldpadstate & BTN_SELECT));}
    ca4c:	80 91 70 0d 	lds	r24, 0x0D70
    ca50:	82 fd       	sbrc	r24, 2
    ca52:	03 c0       	rjmp	.+6      	; 0xca5a <SelectDown+0xe>
    ca54:	80 e0       	ldi	r24, 0x00	; 0
    ca56:	90 e0       	ldi	r25, 0x00	; 0
    ca58:	08 95       	ret
    ca5a:	80 91 6e 0d 	lds	r24, 0x0D6E
    ca5e:	90 91 6f 0d 	lds	r25, 0x0D6F
    ca62:	96 95       	lsr	r25
    ca64:	87 95       	ror	r24
    ca66:	96 95       	lsr	r25
    ca68:	87 95       	ror	r24
    ca6a:	80 95       	com	r24
    ca6c:	81 70       	andi	r24, 0x01	; 1
    ca6e:	08 95       	ret

0000ca70 <UpDown>:
bool UpDown()	 {return((padstate  & BTN_UP)	 && !(oldpadstate & BTN_UP))	;}
    ca70:	80 91 70 0d 	lds	r24, 0x0D70
    ca74:	84 fd       	sbrc	r24, 4
    ca76:	03 c0       	rjmp	.+6      	; 0xca7e <UpDown+0xe>
    ca78:	80 e0       	ldi	r24, 0x00	; 0
    ca7a:	90 e0       	ldi	r25, 0x00	; 0
    ca7c:	08 95       	ret
    ca7e:	80 91 6e 0d 	lds	r24, 0x0D6E
    ca82:	90 91 6f 0d 	lds	r25, 0x0D6F
    ca86:	44 e0       	ldi	r20, 0x04	; 4
    ca88:	96 95       	lsr	r25
    ca8a:	87 95       	ror	r24
    ca8c:	4a 95       	dec	r20
    ca8e:	e1 f7       	brne	.-8      	; 0xca88 <UpDown+0x18>
    ca90:	80 95       	com	r24
    ca92:	81 70       	andi	r24, 0x01	; 1
    ca94:	08 95       	ret

0000ca96 <DownDown>:
bool DownDown()  {return((padstate  & BTN_DOWN)  && !(oldpadstate & BTN_DOWN)) ;}
    ca96:	80 91 70 0d 	lds	r24, 0x0D70
    ca9a:	85 fd       	sbrc	r24, 5
    ca9c:	03 c0       	rjmp	.+6      	; 0xcaa4 <DownDown+0xe>
    ca9e:	80 e0       	ldi	r24, 0x00	; 0
    caa0:	90 e0       	ldi	r25, 0x00	; 0
    caa2:	08 95       	ret
    caa4:	80 91 6e 0d 	lds	r24, 0x0D6E
    caa8:	90 91 6f 0d 	lds	r25, 0x0D6F
    caac:	55 e0       	ldi	r21, 0x05	; 5
    caae:	96 95       	lsr	r25
    cab0:	87 95       	ror	r24
    cab2:	5a 95       	dec	r21
    cab4:	e1 f7       	brne	.-8      	; 0xcaae <DownDown+0x18>
    cab6:	80 95       	com	r24
    cab8:	81 70       	andi	r24, 0x01	; 1
    caba:	08 95       	ret

0000cabc <LeftDown>:
bool LeftDown()  {return((padstate  & BTN_LEFT)  && !(oldpadstate & BTN_LEFT)) ;}
    cabc:	80 91 70 0d 	lds	r24, 0x0D70
    cac0:	86 fd       	sbrc	r24, 6
    cac2:	03 c0       	rjmp	.+6      	; 0xcaca <LeftDown+0xe>
    cac4:	80 e0       	ldi	r24, 0x00	; 0
    cac6:	90 e0       	ldi	r25, 0x00	; 0
    cac8:	08 95       	ret
    caca:	80 91 6e 0d 	lds	r24, 0x0D6E
    cace:	90 91 6f 0d 	lds	r25, 0x0D6F
    cad2:	66 e0       	ldi	r22, 0x06	; 6
    cad4:	96 95       	lsr	r25
    cad6:	87 95       	ror	r24
    cad8:	6a 95       	dec	r22
    cada:	e1 f7       	brne	.-8      	; 0xcad4 <LeftDown+0x18>
    cadc:	80 95       	com	r24
    cade:	81 70       	andi	r24, 0x01	; 1
    cae0:	08 95       	ret

0000cae2 <RightDown>:
bool RightDown() {return((padstate  & BTN_RIGHT) && !(oldpadstate & BTN_RIGHT));}
    cae2:	80 91 70 0d 	lds	r24, 0x0D70
    cae6:	87 fd       	sbrc	r24, 7
    cae8:	03 c0       	rjmp	.+6      	; 0xcaf0 <RightDown+0xe>
    caea:	80 e0       	ldi	r24, 0x00	; 0
    caec:	90 e0       	ldi	r25, 0x00	; 0
    caee:	08 95       	ret
    caf0:	80 91 6e 0d 	lds	r24, 0x0D6E
    caf4:	90 91 6f 0d 	lds	r25, 0x0D6F
    caf8:	88 0f       	add	r24, r24
    cafa:	89 2f       	mov	r24, r25
    cafc:	88 1f       	adc	r24, r24
    cafe:	99 0b       	sbc	r25, r25
    cb00:	91 95       	neg	r25
    cb02:	80 95       	com	r24
    cb04:	81 70       	andi	r24, 0x01	; 1
    cb06:	08 95       	ret

0000cb08 <GetMapTile>:
	}
	return true;
}

u8 GetMapTile(u8 x, u8 y){
	u8 t = vram[((y<<1)*30)+(x<<1)]-RAM_TILES_COUNT;
    cb08:	70 e0       	ldi	r23, 0x00	; 0
    cb0a:	90 e0       	ldi	r25, 0x00	; 0
    cb0c:	88 0f       	add	r24, r24
    cb0e:	99 1f       	adc	r25, r25
    cb10:	fb 01       	movw	r30, r22
    cb12:	b6 e0       	ldi	r27, 0x06	; 6
    cb14:	ee 0f       	add	r30, r30
    cb16:	ff 1f       	adc	r31, r31
    cb18:	ba 95       	dec	r27
    cb1a:	e1 f7       	brne	.-8      	; 0xcb14 <GetMapTile+0xc>
    cb1c:	66 0f       	add	r22, r22
    cb1e:	77 1f       	adc	r23, r23
    cb20:	66 0f       	add	r22, r22
    cb22:	77 1f       	adc	r23, r23
    cb24:	e6 1b       	sub	r30, r22
    cb26:	f7 0b       	sbc	r31, r23
    cb28:	e8 0f       	add	r30, r24
    cb2a:	f9 1f       	adc	r31, r25
    cb2c:	e0 5e       	subi	r30, 0xE0	; 224
    cb2e:	fe 4f       	sbci	r31, 0xFE	; 254
    cb30:	90 81       	ld	r25, Z
    cb32:	9e 51       	subi	r25, 0x1E	; 30
	t = t>>2;//adjust it for tile size
    cb34:	96 95       	lsr	r25
    cb36:	96 95       	lsr	r25
    cb38:	80 91 86 0d 	lds	r24, 0x0D86
    cb3c:	2a ef       	ldi	r18, 0xFA	; 250
    cb3e:	3f ef       	ldi	r19, 0xFF	; 255
    cb40:	82 9f       	mul	r24, r18
    cb42:	80 2d       	mov	r24, r0
    cb44:	11 24       	eor	r1, r1
	t -= tileset*NUMTILES;//adjust for tile set
	return t;	
}
    cb46:	89 0f       	add	r24, r25
    cb48:	08 95       	ret

0000cb4a <SmoothMenuCorners>:
	
}
*/


void SmoothMenuCorners(u8 x,u8 y,u8 w,u8 h,u8 roff){//get rid of the black pixels on menu corners
    cb4a:	a0 e0       	ldi	r26, 0x00	; 0
    cb4c:	b0 e0       	ldi	r27, 0x00	; 0
    cb4e:	eb ea       	ldi	r30, 0xAB	; 171
    cb50:	f5 e6       	ldi	r31, 0x65	; 101
    cb52:	0c 94 3a 77 	jmp	0xee74	; 0xee74 <__prologue_saves__+0x8>
    cb56:	18 2f       	mov	r17, r24
    cb58:	c6 2e       	mov	r12, r22
    cb5a:	a4 2e       	mov	r10, r20
    cb5c:	62 2e       	mov	r6, r18
  
	//TODO - SPRITES ARE WAY MORE EFFICIENT
	ttoram((MENUSTART+5)*64,(26*64),(4*64));//copy over the 4 ram tiles starting from ram tile 26
    cb5e:	80 e4       	ldi	r24, 0x40	; 64
    cb60:	9f e1       	ldi	r25, 0x1F	; 31
    cb62:	60 e8       	ldi	r22, 0x80	; 128
    cb64:	76 e0       	ldi	r23, 0x06	; 6
    cb66:	40 e0       	ldi	r20, 0x00	; 0
    cb68:	51 e0       	ldi	r21, 0x01	; 1
    cb6a:	0e 94 47 64 	call	0xc88e	; 0xc88e <ttoram>
//	u8 t;
	int off = (y*30)+x;//offset to top left piece of menu
    cb6e:	4e e1       	ldi	r20, 0x1E	; 30
    cb70:	74 2e       	mov	r7, r20
    cb72:	c7 9c       	mul	r12, r7
    cb74:	60 01       	movw	r12, r0
    cb76:	11 24       	eor	r1, r1
    cb78:	c1 0e       	add	r12, r17
    cb7a:	d1 1c       	adc	r13, r1

	vram[off +0] = roff;//set the ram tile we pre rendered
    cb7c:	30 e2       	ldi	r19, 0x20	; 32
    cb7e:	83 2e       	mov	r8, r19
    cb80:	31 e0       	ldi	r19, 0x01	; 1
    cb82:	93 2e       	mov	r9, r19
    cb84:	74 01       	movw	r14, r8
    cb86:	ec 0c       	add	r14, r12
    cb88:	fd 1c       	adc	r15, r13
    cb8a:	f7 01       	movw	r30, r14
    cb8c:	00 83       	st	Z, r16
	replaceramcolor(menurestore[0],roff++,0);//replace the color black with the colors from the tile that was underneath
    cb8e:	10 2f       	mov	r17, r16
    cb90:	1f 5f       	subi	r17, 0xFF	; 255
    cb92:	80 91 7d 0d 	lds	r24, 0x0D7D
    cb96:	60 2f       	mov	r22, r16
    cb98:	40 e0       	ldi	r20, 0x00	; 0
    cb9a:	0e 94 29 64 	call	0xc852	; 0xc852 <replaceramcolor>

	vram[off+ w] = roff;
    cb9e:	bb 24       	eor	r11, r11
    cba0:	ea 0c       	add	r14, r10
    cba2:	fb 1c       	adc	r15, r11
    cba4:	f7 01       	movw	r30, r14
    cba6:	10 83       	st	Z, r17
	replaceramcolor(menurestore[1],roff++,0);
    cba8:	0e 5f       	subi	r16, 0xFE	; 254
    cbaa:	80 91 7e 0d 	lds	r24, 0x0D7E
    cbae:	61 2f       	mov	r22, r17
    cbb0:	40 e0       	ldi	r20, 0x00	; 0
    cbb2:	0e 94 29 64 	call	0xc852	; 0xc852 <replaceramcolor>

	off += (h*30);
    cbb6:	67 9c       	mul	r6, r7
    cbb8:	e0 01       	movw	r28, r0
    cbba:	11 24       	eor	r1, r1
    cbbc:	cc 0d       	add	r28, r12
    cbbe:	dd 1d       	adc	r29, r13

	vram[off+ 0] = roff;
    cbc0:	c8 0d       	add	r28, r8
    cbc2:	d9 1d       	adc	r29, r9
    cbc4:	08 83       	st	Y, r16
	replaceramcolor(menurestore[2],roff++,0);
    cbc6:	1e 5f       	subi	r17, 0xFE	; 254
    cbc8:	80 91 7f 0d 	lds	r24, 0x0D7F
    cbcc:	60 2f       	mov	r22, r16
    cbce:	40 e0       	ldi	r20, 0x00	; 0
    cbd0:	0e 94 29 64 	call	0xc852	; 0xc852 <replaceramcolor>

	vram[off+ w] = roff;
    cbd4:	ca 0d       	add	r28, r10
    cbd6:	db 1d       	adc	r29, r11
    cbd8:	18 83       	st	Y, r17
	replaceramcolor(menurestore[3],roff++,0);
    cbda:	80 91 80 0d 	lds	r24, 0x0D80
    cbde:	61 2f       	mov	r22, r17
    cbe0:	40 e0       	ldi	r20, 0x00	; 0
    cbe2:	0e 94 29 64 	call	0xc852	; 0xc852 <replaceramcolor>

}
    cbe6:	cd b7       	in	r28, 0x3d	; 61
    cbe8:	de b7       	in	r29, 0x3e	; 62
    cbea:	ee e0       	ldi	r30, 0x0E	; 14
    cbec:	0c 94 56 77 	jmp	0xeeac	; 0xeeac <__epilogue_restores__+0x8>

0000cbf0 <VramFillWindow>:

}



void VramFillWindow(u8 x, u8 y, u8 w, u8 h, u8 rt){
    cbf0:	ff 92       	push	r15
    cbf2:	0f 93       	push	r16
    cbf4:	1f 93       	push	r17
    cbf6:	cf 93       	push	r28
    cbf8:	df 93       	push	r29
    cbfa:	f8 2e       	mov	r15, r24
	int off = 0;
	int roff = rt*64;
    cbfc:	10 e0       	ldi	r17, 0x00	; 0
    cbfe:	a6 e0       	ldi	r26, 0x06	; 6
    cc00:	00 0f       	add	r16, r16
    cc02:	11 1f       	adc	r17, r17
    cc04:	aa 95       	dec	r26
    cc06:	e1 f7       	brne	.-8      	; 0xcc00 <VramFillWindow+0x10>
    cc08:	86 2f       	mov	r24, r22
    cc0a:	c0 e0       	ldi	r28, 0x00	; 0
    cc0c:	d0 e0       	ldi	r29, 0x00	; 0
	for(u8 j=y;j<y+h;j++)
    cc0e:	70 e0       	ldi	r23, 0x00	; 0
    cc10:	62 0f       	add	r22, r18
    cc12:	71 1d       	adc	r23, r1
	for(u8 i=x;i<x+w;i++)
    cc14:	af 2d       	mov	r26, r15
    cc16:	b0 e0       	ldi	r27, 0x00	; 0
    cc18:	a4 0f       	add	r26, r20
    cc1a:	b1 1d       	adc	r27, r1
    cc1c:	0b c0       	rjmp	.+22     	; 0xcc34 <VramFillWindow+0x44>
		vram[(j*30)+i+roff] = off++;
    cc1e:	e4 0f       	add	r30, r20
    cc20:	f5 1f       	adc	r31, r21
    cc22:	c0 83       	st	Z, r28
    cc24:	21 96       	adiw	r28, 0x01	; 1

void VramFillWindow(u8 x, u8 y, u8 w, u8 h, u8 rt){
	int off = 0;
	int roff = rt*64;
	for(u8 j=y;j<y+h;j++)
	for(u8 i=x;i<x+w;i++)
    cc26:	9f 5f       	subi	r25, 0xFF	; 255
    cc28:	e9 2f       	mov	r30, r25
    cc2a:	f0 e0       	ldi	r31, 0x00	; 0
    cc2c:	ea 17       	cp	r30, r26
    cc2e:	fb 07       	cpc	r31, r27
    cc30:	b4 f3       	brlt	.-20     	; 0xcc1e <VramFillWindow+0x2e>


void VramFillWindow(u8 x, u8 y, u8 w, u8 h, u8 rt){
	int off = 0;
	int roff = rt*64;
	for(u8 j=y;j<y+h;j++)
    cc32:	8f 5f       	subi	r24, 0xFF	; 255
    cc34:	28 2f       	mov	r18, r24
    cc36:	30 e0       	ldi	r19, 0x00	; 0
    cc38:	26 17       	cp	r18, r22
    cc3a:	37 07       	cpc	r19, r23
    cc3c:	84 f4       	brge	.+32     	; 0xcc5e <VramFillWindow+0x6e>
	for(u8 i=x;i<x+w;i++)
		vram[(j*30)+i+roff] = off++;
    cc3e:	a9 01       	movw	r20, r18
    cc40:	f5 e0       	ldi	r31, 0x05	; 5
    cc42:	44 0f       	add	r20, r20
    cc44:	55 1f       	adc	r21, r21
    cc46:	fa 95       	dec	r31
    cc48:	e1 f7       	brne	.-8      	; 0xcc42 <VramFillWindow+0x52>
    cc4a:	22 0f       	add	r18, r18
    cc4c:	33 1f       	adc	r19, r19
    cc4e:	42 1b       	sub	r20, r18
    cc50:	53 0b       	sbc	r21, r19
    cc52:	40 0f       	add	r20, r16
    cc54:	51 1f       	adc	r21, r17
    cc56:	9f 2d       	mov	r25, r15
    cc58:	40 5e       	subi	r20, 0xE0	; 224
    cc5a:	5e 4f       	sbci	r21, 0xFE	; 254
    cc5c:	e5 cf       	rjmp	.-54     	; 0xcc28 <VramFillWindow+0x38>
}
    cc5e:	cd b7       	in	r28, 0x3d	; 61
    cc60:	de b7       	in	r29, 0x3e	; 62
    cc62:	e5 e0       	ldi	r30, 0x05	; 5
    cc64:	0c 94 5f 77 	jmp	0xeebe	; 0xeebe <__epilogue_restores__+0x1a>

0000cc68 <SetMapTile>:
		++moff;
	}
}

void SetMapTile(u8 x, u8 y, u8 t){//this is relative to tileset
	int off = ((y<<1)*30)+(x<<1);
    cc68:	70 e0       	ldi	r23, 0x00	; 0
    cc6a:	fb 01       	movw	r30, r22
    cc6c:	96 e0       	ldi	r25, 0x06	; 6
    cc6e:	ee 0f       	add	r30, r30
    cc70:	ff 1f       	adc	r31, r31
    cc72:	9a 95       	dec	r25
    cc74:	e1 f7       	brne	.-8      	; 0xcc6e <SetMapTile+0x6>
    cc76:	66 0f       	add	r22, r22
    cc78:	77 1f       	adc	r23, r23
    cc7a:	66 0f       	add	r22, r22
    cc7c:	77 1f       	adc	r23, r23
    cc7e:	e6 1b       	sub	r30, r22
    cc80:	f7 0b       	sbc	r31, r23
    cc82:	90 e0       	ldi	r25, 0x00	; 0
    cc84:	88 0f       	add	r24, r24
    cc86:	99 1f       	adc	r25, r25
    cc88:	e8 0f       	add	r30, r24
    cc8a:	f9 1f       	adc	r31, r25
	t = (tileset*(NUMTILES<<2)) + (t<<2) + RAM_TILES_COUNT;
    cc8c:	44 0f       	add	r20, r20
    cc8e:	44 0f       	add	r20, r20
    cc90:	80 91 86 0d 	lds	r24, 0x0D86
    cc94:	28 e1       	ldi	r18, 0x18	; 24
    cc96:	82 9f       	mul	r24, r18
    cc98:	c0 01       	movw	r24, r0
    cc9a:	11 24       	eor	r1, r1
    cc9c:	82 5e       	subi	r24, 0xE2	; 226
    cc9e:	84 0f       	add	r24, r20
	
	vram[off+ 0] = t++;
    cca0:	e0 5e       	subi	r30, 0xE0	; 224
    cca2:	fe 4f       	sbci	r31, 0xFE	; 254
    cca4:	80 83       	st	Z, r24
    cca6:	8f 5f       	subi	r24, 0xFF	; 255
	vram[off+ 1] = t++;
    cca8:	81 83       	std	Z+1, r24	; 0x01
    ccaa:	8f 5f       	subi	r24, 0xFF	; 255
	vram[off+30] = t++;
    ccac:	86 8f       	std	Z+30, r24	; 0x1e
	vram[off+31] = t;
    ccae:	8f 5f       	subi	r24, 0xFF	; 255
    ccb0:	87 8f       	std	Z+31, r24	; 0x1f
}
    ccb2:	08 95       	ret

0000ccb4 <SokoMove>:
	else//pstate & MOVE
		if(pstate & PUSH){pstate ^= PUSH;}

}

bool SokoMove(){
    ccb4:	af 92       	push	r10
    ccb6:	bf 92       	push	r11
    ccb8:	cf 92       	push	r12
    ccba:	df 92       	push	r13
    ccbc:	ef 92       	push	r14
    ccbe:	ff 92       	push	r15
    ccc0:	0f 93       	push	r16
    ccc2:	1f 93       	push	r17
	u8 t,t2;//t = block player moves to, t2 = block 1 past t(where a pushed block would go)
	u8 x,x2;//same thing for x values
	u8 y,y2;//ditto
	x = x2 = px;//set defaults
    ccc4:	f0 90 92 0d 	lds	r15, 0x0D92
	y = y2 = py;
    ccc8:	00 91 76 0d 	lds	r16, 0x0D76

	if(pstate & UP){
    cccc:	a0 90 7c 0d 	lds	r10, 0x0D7C
    ccd0:	ba 2c       	mov	r11, r10
    ccd2:	a0 fe       	sbrs	r10, 0
    ccd4:	1b c0       	rjmp	.+54     	; 0xcd0c <SokoMove+0x58>
		if(py == 0){return false;}//don't let player move off the screen
    ccd6:	00 23       	and	r16, r16
    ccd8:	09 f4       	brne	.+2      	; 0xccdc <SokoMove+0x28>
    ccda:	b3 c0       	rjmp	.+358    	; 0xce42 <SokoMove+0x18e>
	  t = GetMapTile(px,py-1);
    ccdc:	c0 2e       	mov	r12, r16
    ccde:	ca 94       	dec	r12
    cce0:	8f 2d       	mov	r24, r15
    cce2:	6c 2d       	mov	r22, r12
    cce4:	0e 94 84 65 	call	0xcb08	; 0xcb08 <GetMapTile>
    cce8:	e8 2e       	mov	r14, r24
		if(py-1 == 0){t2 = FLOOR;}//don't check outside of map just let the move happen
    ccea:	01 30       	cpi	r16, 0x01	; 1
    ccec:	39 f0       	breq	.+14     	; 0xccfc <SokoMove+0x48>
		else			{t2 = GetMapTile(px,py-2);}
    ccee:	60 2f       	mov	r22, r16
    ccf0:	62 50       	subi	r22, 0x02	; 2
    ccf2:	8f 2d       	mov	r24, r15
    ccf4:	0e 94 84 65 	call	0xcb08	; 0xcb08 <GetMapTile>
    ccf8:	18 2f       	mov	r17, r24
    ccfa:	06 c0       	rjmp	.+12     	; 0xcd08 <SokoMove+0x54>
		if(py-1 == 0 && IsBlock(t)){return false;}//don't let player push a block off the map
    ccfc:	0e 94 04 64 	call	0xc808	; 0xc808 <IsBlock>
    cd00:	88 23       	and	r24, r24
    cd02:	09 f0       	breq	.+2      	; 0xcd06 <SokoMove+0x52>
    cd04:	9e c0       	rjmp	.+316    	; 0xce42 <SokoMove+0x18e>
    cd06:	11 e0       	ldi	r17, 0x01	; 1
	  y  = py-1;
	  y2 = py-2;
    cd08:	02 50       	subi	r16, 0x02	; 2
    cd0a:	1f c0       	rjmp	.+62     	; 0xcd4a <SokoMove+0x96>
	}
	else if(pstate & DOWN){
    cd0c:	a1 fe       	sbrs	r10, 1
    cd0e:	1f c0       	rjmp	.+62     	; 0xcd4e <SokoMove+0x9a>
		if(py == 13){return false;}//don't let player move off the screen
    cd10:	0d 30       	cpi	r16, 0x0D	; 13
    cd12:	09 f4       	brne	.+2      	; 0xcd16 <SokoMove+0x62>
    cd14:	96 c0       	rjmp	.+300    	; 0xce42 <SokoMove+0x18e>
	  t = GetMapTile(px,py+1);
    cd16:	c0 2e       	mov	r12, r16
    cd18:	c3 94       	inc	r12
    cd1a:	8f 2d       	mov	r24, r15
    cd1c:	6c 2d       	mov	r22, r12
    cd1e:	0e 94 84 65 	call	0xcb08	; 0xcb08 <GetMapTile>
    cd22:	e8 2e       	mov	r14, r24
		if(py+1 == 27){t2 = FLOOR;}//don't check outside of map just let the move happen
    cd24:	0a 31       	cpi	r16, 0x1A	; 26
    cd26:	11 f4       	brne	.+4      	; 0xcd2c <SokoMove+0x78>
    cd28:	11 e0       	ldi	r17, 0x01	; 1
    cd2a:	0e c0       	rjmp	.+28     	; 0xcd48 <SokoMove+0x94>
		else			 {t2 = GetMapTile(px,py+2);}
    cd2c:	60 2f       	mov	r22, r16
    cd2e:	6e 5f       	subi	r22, 0xFE	; 254
    cd30:	8f 2d       	mov	r24, r15
    cd32:	0e 94 84 65 	call	0xcb08	; 0xcb08 <GetMapTile>
    cd36:	18 2f       	mov	r17, r24
		if(py+1 == LEVELHIGH-1 && IsBlock(t)){return false;}//don't let player push a block off the map
    cd38:	0c 30       	cpi	r16, 0x0C	; 12
    cd3a:	31 f4       	brne	.+12     	; 0xcd48 <SokoMove+0x94>
    cd3c:	8e 2d       	mov	r24, r14
    cd3e:	0e 94 04 64 	call	0xc808	; 0xc808 <IsBlock>
    cd42:	88 23       	and	r24, r24
    cd44:	09 f0       	breq	.+2      	; 0xcd48 <SokoMove+0x94>
    cd46:	7d c0       	rjmp	.+250    	; 0xce42 <SokoMove+0x18e>
	  y  = py+1;
	  y2 = py+2;
    cd48:	0e 5f       	subi	r16, 0xFE	; 254
    cd4a:	df 2c       	mov	r13, r15
    cd4c:	40 c0       	rjmp	.+128    	; 0xcdce <SokoMove+0x11a>
	}
	else if(pstate & LEFT){
    cd4e:	a2 fe       	sbrs	r10, 2
    cd50:	1d c0       	rjmp	.+58     	; 0xcd8c <SokoMove+0xd8>
		if(px == 0){return false;}//don't let player move off the screen
    cd52:	ff 20       	and	r15, r15
    cd54:	09 f4       	brne	.+2      	; 0xcd58 <SokoMove+0xa4>
    cd56:	75 c0       	rjmp	.+234    	; 0xce42 <SokoMove+0x18e>
	  t = GetMapTile(px-1,py);
    cd58:	df 2c       	mov	r13, r15
    cd5a:	da 94       	dec	r13
    cd5c:	8d 2d       	mov	r24, r13
    cd5e:	60 2f       	mov	r22, r16
    cd60:	0e 94 84 65 	call	0xcb08	; 0xcb08 <GetMapTile>
    cd64:	e8 2e       	mov	r14, r24
		if(px-1 == 0){t2 = FLOOR;}//don't check outside of map just let the move happen
    cd66:	81 e0       	ldi	r24, 0x01	; 1
    cd68:	f8 16       	cp	r15, r24
    cd6a:	39 f0       	breq	.+14     	; 0xcd7a <SokoMove+0xc6>
		else			{t2 = GetMapTile(px-2,py);}
    cd6c:	8f 2d       	mov	r24, r15
    cd6e:	82 50       	subi	r24, 0x02	; 2
    cd70:	60 2f       	mov	r22, r16
    cd72:	0e 94 84 65 	call	0xcb08	; 0xcb08 <GetMapTile>
    cd76:	18 2f       	mov	r17, r24
    cd78:	07 c0       	rjmp	.+14     	; 0xcd88 <SokoMove+0xd4>
		if(px-1 == 0 && IsBlock(t)){return false;}//don't let player push a block off the map
    cd7a:	8e 2d       	mov	r24, r14
    cd7c:	0e 94 04 64 	call	0xc808	; 0xc808 <IsBlock>
    cd80:	88 23       	and	r24, r24
    cd82:	09 f0       	breq	.+2      	; 0xcd86 <SokoMove+0xd2>
    cd84:	5e c0       	rjmp	.+188    	; 0xce42 <SokoMove+0x18e>
    cd86:	11 e0       	ldi	r17, 0x01	; 1
	  x  = px-1;
	  x2 = px-2;
    cd88:	8e ef       	ldi	r24, 0xFE	; 254
    cd8a:	1f c0       	rjmp	.+62     	; 0xcdca <SokoMove+0x116>
	}
	else/*if(pstate & RIGHT)*/{
		if(px == 14){return false;}//don't let player move off the screen
    cd8c:	8e e0       	ldi	r24, 0x0E	; 14
    cd8e:	f8 16       	cp	r15, r24
    cd90:	09 f4       	brne	.+2      	; 0xcd94 <SokoMove+0xe0>
    cd92:	57 c0       	rjmp	.+174    	; 0xce42 <SokoMove+0x18e>
	  t = GetMapTile(px+1,py);
    cd94:	df 2c       	mov	r13, r15
    cd96:	d3 94       	inc	r13
    cd98:	8d 2d       	mov	r24, r13
    cd9a:	60 2f       	mov	r22, r16
    cd9c:	0e 94 84 65 	call	0xcb08	; 0xcb08 <GetMapTile>
    cda0:	e8 2e       	mov	r14, r24
		if(px+1 == 29){t2 = FLOOR;}//don't check outside of map just let the move happen
    cda2:	8c e1       	ldi	r24, 0x1C	; 28
    cda4:	f8 16       	cp	r15, r24
    cda6:	11 f4       	brne	.+4      	; 0xcdac <SokoMove+0xf8>
    cda8:	11 e0       	ldi	r17, 0x01	; 1
    cdaa:	0e c0       	rjmp	.+28     	; 0xcdc8 <SokoMove+0x114>
		else			 {t2 = GetMapTile(px+2,py);}
    cdac:	8f 2d       	mov	r24, r15
    cdae:	8e 5f       	subi	r24, 0xFE	; 254
    cdb0:	60 2f       	mov	r22, r16
    cdb2:	0e 94 84 65 	call	0xcb08	; 0xcb08 <GetMapTile>
    cdb6:	18 2f       	mov	r17, r24
		if(px+1 == LEVELWIDE-1 && IsBlock(t)){return false;}//don't let player push a block off the map
    cdb8:	8d e0       	ldi	r24, 0x0D	; 13
    cdba:	f8 16       	cp	r15, r24
    cdbc:	29 f4       	brne	.+10     	; 0xcdc8 <SokoMove+0x114>
    cdbe:	8e 2d       	mov	r24, r14
    cdc0:	0e 94 04 64 	call	0xc808	; 0xc808 <IsBlock>
    cdc4:	88 23       	and	r24, r24
    cdc6:	e9 f5       	brne	.+122    	; 0xce42 <SokoMove+0x18e>
	  x  = px+1;
	  x2 = px+2;
    cdc8:	82 e0       	ldi	r24, 0x02	; 2
    cdca:	f8 0e       	add	r15, r24
    cdcc:	c0 2e       	mov	r12, r16
	}

	//ok, we know what the player is moving into and what is beyond that(if relevant). piece of cake now.
	if(IsBlock(t)){//we're pushing a block or a block on a target
    cdce:	8e 2d       	mov	r24, r14
    cdd0:	0e 94 04 64 	call	0xc808	; 0xc808 <IsBlock>
    cdd4:	88 23       	and	r24, r24
    cdd6:	41 f1       	breq	.+80     	; 0xce28 <SokoMove+0x174>
		if(IsSolid(t2))//is something solid behind it?
    cdd8:	81 2f       	mov	r24, r17
    cdda:	0e 94 17 64 	call	0xc82e	; 0xc82e <IsSolid>
    cdde:	88 23       	and	r24, r24
    cde0:	81 f5       	brne	.+96     	; 0xce42 <SokoMove+0x18e>
		  return false;
		//if we're here then the move will suceed, check special case block on a target

	  if(IsTBlock(t)){SetMapTile(x,y,TARGET);opentargets++;}//draw the target underneath and update number of targets uncovered
    cde2:	8e 2d       	mov	r24, r14
    cde4:	0e 94 0b 64 	call	0xc816	; 0xc816 <IsTBlock>
    cde8:	88 23       	and	r24, r24
    cdea:	59 f0       	breq	.+22     	; 0xce02 <SokoMove+0x14e>
    cdec:	8d 2d       	mov	r24, r13
    cdee:	6c 2d       	mov	r22, r12
    cdf0:	42 e0       	ldi	r20, 0x02	; 2
    cdf2:	0e 94 34 66 	call	0xcc68	; 0xcc68 <SetMapTile>
    cdf6:	80 91 87 0d 	lds	r24, 0x0D87
    cdfa:	8f 5f       	subi	r24, 0xFF	; 255
    cdfc:	80 93 87 0d 	sts	0x0D87, r24
    ce00:	05 c0       	rjmp	.+10     	; 0xce0c <SokoMove+0x158>
	  else			  {SetMapTile(x,y,FLOOR);}//draw the floor underneath
    ce02:	8d 2d       	mov	r24, r13
    ce04:	6c 2d       	mov	r22, r12
    ce06:	41 e0       	ldi	r20, 0x01	; 1
    ce08:	0e 94 34 66 	call	0xcc68	; 0xcc68 <SetMapTile>
	  bx = x;//set up the block for rendering
    ce0c:	d0 92 75 0d 	sts	0x0D75, r13
	  by = y;
    ce10:	c0 92 8b 0d 	sts	0x0D8B, r12
	  bnx = x2;
    ce14:	f0 92 90 0d 	sts	0x0D90, r15
	  bny = y2;
    ce18:	00 93 93 0d 	sts	0x0D93, r16
	  pstate |= PUSH;
    ce1c:	80 91 7c 0d 	lds	r24, 0x0D7C
    ce20:	80 62       	ori	r24, 0x20	; 32
    ce22:	80 93 7c 0d 	sts	0x0D7C, r24
    ce26:	05 c0       	rjmp	.+10     	; 0xce32 <SokoMove+0x17e>
	}
	else if(IsSolid(t)){
    ce28:	8e 2d       	mov	r24, r14
    ce2a:	0e 94 17 64 	call	0xc82e	; 0xc82e <IsSolid>
    ce2e:	88 23       	and	r24, r24
    ce30:	11 f4       	brne	.+4      	; 0xce36 <SokoMove+0x182>
    ce32:	81 e0       	ldi	r24, 0x01	; 1
    ce34:	07 c0       	rjmp	.+14     	; 0xce44 <SokoMove+0x190>
		if(pstate & PUSH){pstate ^= PUSH;}
    ce36:	b5 fe       	sbrs	r11, 5
    ce38:	04 c0       	rjmp	.+8      	; 0xce42 <SokoMove+0x18e>
    ce3a:	80 e2       	ldi	r24, 0x20	; 32
    ce3c:	a8 26       	eor	r10, r24
    ce3e:	a0 92 7c 0d 	sts	0x0D7C, r10
    ce42:	80 e0       	ldi	r24, 0x00	; 0
		return false;
	}
	return true;
}
    ce44:	1f 91       	pop	r17
    ce46:	0f 91       	pop	r16
    ce48:	ff 90       	pop	r15
    ce4a:	ef 90       	pop	r14
    ce4c:	df 90       	pop	r13
    ce4e:	cf 90       	pop	r12
    ce50:	bf 90       	pop	r11
    ce52:	af 90       	pop	r10
    ce54:	08 95       	ret

0000ce56 <PutSprite>:
		y += 8;
	}
}

inline bool PutSprite(u8 x, u8 y, u8 t, bool flip){
	if(spritecount >= MAX_SPRITES){return false;}
    ce56:	90 91 79 0d 	lds	r25, 0x0D79
    ce5a:	94 31       	cpi	r25, 0x14	; 20
    ce5c:	10 f0       	brcs	.+4      	; 0xce62 <PutSprite+0xc>
    ce5e:	80 e0       	ldi	r24, 0x00	; 0
    ce60:	08 95       	ret

	sprites[spritecount].x=x; sprites[spritecount].y=y; sprites[spritecount].tileIndex=t;
    ce62:	e9 2f       	mov	r30, r25
    ce64:	f0 e0       	ldi	r31, 0x00	; 0
    ce66:	ee 0f       	add	r30, r30
    ce68:	ff 1f       	adc	r31, r31
    ce6a:	ee 0f       	add	r30, r30
    ce6c:	ff 1f       	adc	r31, r31
    ce6e:	df 01       	movw	r26, r30
    ce70:	a8 59       	subi	r26, 0x98	; 152
    ce72:	bb 4f       	sbci	r27, 0xFB	; 251
    ce74:	8c 93       	st	X, r24
    ce76:	11 96       	adiw	r26, 0x01	; 1
    ce78:	6c 93       	st	X, r22
    ce7a:	11 97       	sbiw	r26, 0x01	; 1
    ce7c:	e6 59       	subi	r30, 0x96	; 150
    ce7e:	fb 4f       	sbci	r31, 0xFB	; 251
    ce80:	40 83       	st	Z, r20

	//if(flip){sprites[spritecount].flags = SPR_FLIP_X;}
	//else	 {sprites[spritecount].flags = 0;}
	sprites[spritecount].flags = SPR_FLIP_X*flip;
    ce82:	13 96       	adiw	r26, 0x03	; 3
    ce84:	2c 93       	st	X, r18
	
	spritecount++;
    ce86:	9f 5f       	subi	r25, 0xFF	; 255
    ce88:	90 93 79 0d 	sts	0x0D79, r25
    ce8c:	81 e0       	ldi	r24, 0x01	; 1
	return true;
}
    ce8e:	08 95       	ret

0000ce90 <DrawSpriteTile>:
	}

	tileset = newset;
}

void DrawSpriteTile(u8 x, u8 y, u8 f){//not optimized, probably ok
    ce90:	a0 e0       	ldi	r26, 0x00	; 0
    ce92:	b0 e0       	ldi	r27, 0x00	; 0
    ce94:	ee e4       	ldi	r30, 0x4E	; 78
    ce96:	f7 e6       	ldi	r31, 0x67	; 103
    ce98:	0c 94 3f 77 	jmp	0xee7e	; 0xee7e <__prologue_saves__+0x12>
    ce9c:	c8 2e       	mov	r12, r24
    ce9e:	e6 2e       	mov	r14, r22
	int t,m;
	int toff = tileset*SPRITESPERTILESET ;
    cea0:	90 91 86 0d 	lds	r25, 0x0D86
	int  fo = f*5;
	int mo = (pgm_read_byte(&FrameTable[fo+4]))*4;
    cea4:	85 e0       	ldi	r24, 0x05	; 5
    cea6:	48 9f       	mul	r20, r24
    cea8:	a0 01       	movw	r20, r0
    ceaa:	11 24       	eor	r1, r1
    ceac:	fa 01       	movw	r30, r20
    ceae:	e9 5d       	subi	r30, 0xD9	; 217
    ceb0:	fb 49       	sbci	r31, 0x9B	; 155
    ceb2:	e4 91       	lpm	r30, Z+
    ceb4:	8a 01       	movw	r16, r20
    ceb6:	0d 5d       	subi	r16, 0xDD	; 221
    ceb8:	1b 49       	sbci	r17, 0x9B	; 155
    ceba:	ce 2f       	mov	r28, r30
    cebc:	d0 e0       	ldi	r29, 0x00	; 0
    cebe:	cc 0f       	add	r28, r28
    cec0:	dd 1f       	adc	r29, r29
    cec2:	cc 0f       	add	r28, r28
    cec4:	dd 1f       	adc	r29, r29
    cec6:	c8 58       	subi	r28, 0x88	; 136
    cec8:	db 49       	sbci	r29, 0x9B	; 155
    ceca:	ff 24       	eor	r15, r15
	
	for(u8 j=0;j<2;j++){
	for(u8 i=0;i<2;i++){
		t = pgm_read_byte( &FrameTable[fo+to]);
		m = pgm_read_byte(&MirrorTable[mo+to]);
		PutSprite(x,y,t+toff,m);
    cecc:	84 e2       	ldi	r24, 0x24	; 36
    cece:	98 9f       	mul	r25, r24
    ced0:	d0 2c       	mov	r13, r0
    ced2:	11 24       	eor	r1, r1
    ced4:	68 e0       	ldi	r22, 0x08	; 8
    ced6:	b6 2e       	mov	r11, r22
    ced8:	bc 0c       	add	r11, r12
    ceda:	02 c0       	rjmp	.+4      	; 0xcee0 <DrawSpriteTile+0x50>
		x += 8;
	  to++;
	}
		x -= 16;
		y += 8;
    cedc:	88 e0       	ldi	r24, 0x08	; 8
    cede:	e8 0e       	add	r14, r24
	int mo = (pgm_read_byte(&FrameTable[fo+4]))*4;
	int to = 0;
	
	for(u8 j=0;j<2;j++){
	for(u8 i=0;i<2;i++){
		t = pgm_read_byte( &FrameTable[fo+to]);
    cee0:	f8 01       	movw	r30, r16
    cee2:	44 91       	lpm	r20, Z+
		m = pgm_read_byte(&MirrorTable[mo+to]);
    cee4:	fe 01       	movw	r30, r28
    cee6:	84 91       	lpm	r24, Z+
		PutSprite(x,y,t+toff,m);
    cee8:	4d 0d       	add	r20, r13
    ceea:	20 e0       	ldi	r18, 0x00	; 0
    ceec:	81 11       	cpse	r24, r1
    ceee:	21 e0       	ldi	r18, 0x01	; 1
    cef0:	8c 2d       	mov	r24, r12
    cef2:	6e 2d       	mov	r22, r14
    cef4:	0e 94 2b 67 	call	0xce56	; 0xce56 <PutSprite>
	int mo = (pgm_read_byte(&FrameTable[fo+4]))*4;
	int to = 0;
	
	for(u8 j=0;j<2;j++){
	for(u8 i=0;i<2;i++){
		t = pgm_read_byte( &FrameTable[fo+to]);
    cef8:	0f 5f       	subi	r16, 0xFF	; 255
    cefa:	1f 4f       	sbci	r17, 0xFF	; 255
    cefc:	f8 01       	movw	r30, r16
    cefe:	44 91       	lpm	r20, Z+
    cf00:	01 50       	subi	r16, 0x01	; 1
    cf02:	10 40       	sbci	r17, 0x00	; 0
		m = pgm_read_byte(&MirrorTable[mo+to]);
    cf04:	21 96       	adiw	r28, 0x01	; 1
    cf06:	fe 01       	movw	r30, r28
    cf08:	84 91       	lpm	r24, Z+
    cf0a:	21 97       	sbiw	r28, 0x01	; 1
		PutSprite(x,y,t+toff,m);
    cf0c:	4d 0d       	add	r20, r13
    cf0e:	20 e0       	ldi	r18, 0x00	; 0
    cf10:	81 11       	cpse	r24, r1
    cf12:	21 e0       	ldi	r18, 0x01	; 1
    cf14:	8b 2d       	mov	r24, r11
    cf16:	6e 2d       	mov	r22, r14
    cf18:	0e 94 2b 67 	call	0xce56	; 0xce56 <PutSprite>
	int toff = tileset*SPRITESPERTILESET ;
	int  fo = f*5;
	int mo = (pgm_read_byte(&FrameTable[fo+4]))*4;
	int to = 0;
	
	for(u8 j=0;j<2;j++){
    cf1c:	f3 94       	inc	r15
    cf1e:	0e 5f       	subi	r16, 0xFE	; 254
    cf20:	1f 4f       	sbci	r17, 0xFF	; 255
    cf22:	22 96       	adiw	r28, 0x02	; 2
    cf24:	f2 e0       	ldi	r31, 0x02	; 2
    cf26:	ff 16       	cp	r15, r31
    cf28:	c9 f6       	brne	.-78     	; 0xcedc <DrawSpriteTile+0x4c>
	  to++;
	}
		x -= 16;
		y += 8;
	}
}
    cf2a:	cd b7       	in	r28, 0x3d	; 61
    cf2c:	de b7       	in	r29, 0x3e	; 62
    cf2e:	e9 e0       	ldi	r30, 0x09	; 9
    cf30:	0c 94 5b 77 	jmp	0xeeb6	; 0xeeb6 <__epilogue_restores__+0x12>

0000cf34 <Render>:
void PostProcess();

void Render(){
    cf34:	0f 93       	push	r16
    cf36:	1f 93       	push	r17
	if(guijuststarted){return;}
    cf38:	80 91 6d 0d 	lds	r24, 0x0D6D
    cf3c:	88 23       	and	r24, r24
    cf3e:	09 f0       	breq	.+2      	; 0xcf42 <Render+0xe>
    cf40:	4b c0       	rjmp	.+150    	; 0xcfd8 <Render+0xa4>
	char xoff = 0;
	char yoff = 0;
	u8 foff = 0;
	if(pstate & UP)		 {yoff=-poffset;foff= 1;}
    cf42:	80 91 7c 0d 	lds	r24, 0x0D7C
    cf46:	28 2f       	mov	r18, r24
    cf48:	20 ff       	sbrs	r18, 0
    cf4a:	06 c0       	rjmp	.+12     	; 0xcf58 <Render+0x24>
    cf4c:	10 91 8c 0d 	lds	r17, 0x0D8C
    cf50:	11 95       	neg	r17
    cf52:	00 e0       	ldi	r16, 0x00	; 0
    cf54:	91 e0       	ldi	r25, 0x01	; 1
    cf56:	13 c0       	rjmp	.+38     	; 0xcf7e <Render+0x4a>
	else if(pstate & DOWN){yoff= poffset;foff= 5;}
    cf58:	21 ff       	sbrs	r18, 1
    cf5a:	05 c0       	rjmp	.+10     	; 0xcf66 <Render+0x32>
    cf5c:	10 91 8c 0d 	lds	r17, 0x0D8C
    cf60:	00 e0       	ldi	r16, 0x00	; 0
    cf62:	95 e0       	ldi	r25, 0x05	; 5
    cf64:	0c c0       	rjmp	.+24     	; 0xcf7e <Render+0x4a>
    cf66:	80 91 8c 0d 	lds	r24, 0x0D8C
	else if(pstate & LEFT){xoff=-poffset;foff= 9;}
    cf6a:	22 ff       	sbrs	r18, 2
    cf6c:	05 c0       	rjmp	.+10     	; 0xcf78 <Render+0x44>
    cf6e:	08 2f       	mov	r16, r24
    cf70:	01 95       	neg	r16
    cf72:	10 e0       	ldi	r17, 0x00	; 0
    cf74:	99 e0       	ldi	r25, 0x09	; 9
    cf76:	03 c0       	rjmp	.+6      	; 0xcf7e <Render+0x4a>
	else/*pstate & RIGHT*/{xoff= poffset;foff=13;}
    cf78:	08 2f       	mov	r16, r24
    cf7a:	10 e0       	ldi	r17, 0x00	; 0
    cf7c:	9d e0       	ldi	r25, 0x0D	; 13
	foff += pframe;
    cf7e:	40 91 95 0d 	lds	r20, 0x0D95
    cf82:	49 0f       	add	r20, r25
	if(pstate & PUSH){foff+=2;}
    cf84:	25 fd       	sbrc	r18, 5
    cf86:	4e 5f       	subi	r20, 0xFE	; 254
	spritecount = 0;
    cf88:	10 92 79 0d 	sts	0x0D79, r1
	DrawSpriteTile((px<<4)+xoff,(py<<4)+yoff,foff);
    cf8c:	80 91 92 0d 	lds	r24, 0x0D92
    cf90:	82 95       	swap	r24
    cf92:	80 7f       	andi	r24, 0xF0	; 240
    cf94:	60 91 76 0d 	lds	r22, 0x0D76
    cf98:	62 95       	swap	r22
    cf9a:	60 7f       	andi	r22, 0xF0	; 240
    cf9c:	61 0f       	add	r22, r17
    cf9e:	80 0f       	add	r24, r16
    cfa0:	0e 94 48 67 	call	0xce90	; 0xce90 <DrawSpriteTile>
	if(bx != 255){DrawSpriteTile((bx<<4)+xoff,(by<<4)+yoff,0);}
    cfa4:	90 91 75 0d 	lds	r25, 0x0D75
    cfa8:	9f 3f       	cpi	r25, 0xFF	; 255
    cfaa:	69 f0       	breq	.+26     	; 0xcfc6 <Render+0x92>
    cfac:	92 95       	swap	r25
    cfae:	90 7f       	andi	r25, 0xF0	; 240
    cfb0:	80 91 8b 0d 	lds	r24, 0x0D8B
    cfb4:	82 95       	swap	r24
    cfb6:	80 7f       	andi	r24, 0xF0	; 240
    cfb8:	18 0f       	add	r17, r24
    cfba:	80 2f       	mov	r24, r16
    cfbc:	89 0f       	add	r24, r25
    cfbe:	61 2f       	mov	r22, r17
    cfc0:	40 e0       	ldi	r20, 0x00	; 0
    cfc2:	0e 94 48 67 	call	0xce90	; 0xce90 <DrawSpriteTile>
	HideSprites(spritecount,MAX_SPRITES);
    cfc6:	80 91 79 0d 	lds	r24, 0x0D79
    cfca:	64 e1       	ldi	r22, 0x14	; 20
    cfcc:	0e 94 f5 63 	call	0xc7ea	; 0xc7ea <HideSprites>
	PrintB(13,27,movelist[2]);
	PrintB(16,27,movelist[3]);
	PrintB(19,27,movelist[4]);
*/
//	PostProcess();
	WaitVsync(1);
    cfd0:	81 e0       	ldi	r24, 0x01	; 1
    cfd2:	90 e0       	ldi	r25, 0x00	; 0
    cfd4:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
}
    cfd8:	1f 91       	pop	r17
    cfda:	0f 91       	pop	r16
    cfdc:	08 95       	ret

0000cfde <SwapTileSet>:
	vram[off+ 1] = t++;
	vram[off+30] = t++;
	vram[off+31] = t;
}

void SwapTileSet(u8 newset){
    cfde:	ef 92       	push	r14
    cfe0:	ff 92       	push	r15
    cfe2:	0f 93       	push	r16
    cfe4:	1f 93       	push	r17
    cfe6:	f8 2e       	mov	r15, r24
	WaitVsync(1);
    cfe8:	81 e0       	ldi	r24, 0x01	; 1
    cfea:	90 e0       	ldi	r25, 0x00	; 0
    cfec:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
	u8 oldset,t;
	oldset = tileset;
    cff0:	e0 90 86 0d 	lds	r14, 0x0D86
    cff4:	00 e0       	ldi	r16, 0x00	; 0
    cff6:	20 c0       	rjmp	.+64     	; 0xd038 <SwapTileSet+0x5a>
	for(u8 y=0;y<14;y++){
		for(u8 x=0;x<15;x++){
			tileset = oldset;
    cff8:	e0 92 86 0d 	sts	0x0D86, r14
		  t = GetMapTile(x,y);
    cffc:	81 2f       	mov	r24, r17
    cffe:	60 2f       	mov	r22, r16
    d000:	0e 94 84 65 	call	0xcb08	; 0xcb08 <GetMapTile>
    d004:	48 2f       	mov	r20, r24
			tileset = newset;
    d006:	f0 92 86 0d 	sts	0x0D86, r15
		  SetMapTile(x,y,t);
    d00a:	81 2f       	mov	r24, r17
    d00c:	60 2f       	mov	r22, r16
    d00e:	0e 94 34 66 	call	0xcc68	; 0xcc68 <SetMapTile>
void SwapTileSet(u8 newset){
	WaitVsync(1);
	u8 oldset,t;
	oldset = tileset;
	for(u8 y=0;y<14;y++){
		for(u8 x=0;x<15;x++){
    d012:	1f 5f       	subi	r17, 0xFF	; 255
    d014:	1f 30       	cpi	r17, 0x0F	; 15
    d016:	81 f7       	brne	.-32     	; 0xcff8 <SwapTileSet+0x1a>
			tileset = oldset;
		  t = GetMapTile(x,y);
			tileset = newset;
		  SetMapTile(x,y,t);
		}
		if(y == py){
    d018:	80 91 76 0d 	lds	r24, 0x0D76
    d01c:	08 17       	cp	r16, r24
    d01e:	29 f4       	brne	.+10     	; 0xd02a <SwapTileSet+0x4c>
		  Render();
    d020:	0e 94 9a 67 	call	0xcf34	; 0xcf34 <Render>
		  WaitVsync(1);
    d024:	81 e0       	ldi	r24, 0x01	; 1
    d026:	90 e0       	ldi	r25, 0x00	; 0
    d028:	02 c0       	rjmp	.+4      	; 0xd02e <SwapTileSet+0x50>
		}
		else
			WaitVsync(2);
    d02a:	82 e0       	ldi	r24, 0x02	; 2
    d02c:	90 e0       	ldi	r25, 0x00	; 0
    d02e:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>

void SwapTileSet(u8 newset){
	WaitVsync(1);
	u8 oldset,t;
	oldset = tileset;
	for(u8 y=0;y<14;y++){
    d032:	0f 5f       	subi	r16, 0xFF	; 255
    d034:	0e 30       	cpi	r16, 0x0E	; 14
    d036:	11 f0       	breq	.+4      	; 0xd03c <SwapTileSet+0x5e>
    d038:	10 e0       	ldi	r17, 0x00	; 0
    d03a:	de cf       	rjmp	.-68     	; 0xcff8 <SwapTileSet+0x1a>
		}
		else
			WaitVsync(2);
	}

	tileset = newset;
    d03c:	f0 92 86 0d 	sts	0x0D86, r15
}
    d040:	1f 91       	pop	r17
    d042:	0f 91       	pop	r16
    d044:	ff 90       	pop	r15
    d046:	ef 90       	pop	r14
    d048:	08 95       	ret

0000d04a <RamifyScreen>:
	WaitVsync(1);//takes a long time, let the kernel go
}

void RamifyScreen(){//convert all tiles on screen to ram tile indexes corresponding to the tile number in the set
	u8 t;
	int off = (NUMTILESPERSET*tileset)+RAM_TILES_COUNT;
    d04a:	90 91 86 0d 	lds	r25, 0x0D86
    d04e:	88 e1       	ldi	r24, 0x18	; 24
    d050:	98 9f       	mul	r25, r24
    d052:	90 01       	movw	r18, r0
    d054:	11 24       	eor	r1, r1
    d056:	22 5e       	subi	r18, 0xE2	; 226
    d058:	3f 4f       	sbci	r19, 0xFF	; 255
    d05a:	e0 e2       	ldi	r30, 0x20	; 32
    d05c:	f1 e0       	ldi	r31, 0x01	; 1
	
	for(int i=(0*30);i<(30*28);i++){
		t = vram[i];
    d05e:	90 81       	ld	r25, Z
	  if(t < RAM_TILES_COUNT || t > ENDGAMETILES+RAM_TILES_COUNT){continue;}
    d060:	89 2f       	mov	r24, r25
    d062:	8e 51       	subi	r24, 0x1E	; 30
    d064:	88 37       	cpi	r24, 0x78	; 120
    d066:	10 f4       	brcc	.+4      	; 0xd06c <RamifyScreen+0x22>
	  vram[i] -= off;
    d068:	92 1b       	sub	r25, r18
    d06a:	90 83       	st	Z, r25
    d06c:	31 96       	adiw	r30, 0x01	; 1

void RamifyScreen(){//convert all tiles on screen to ram tile indexes corresponding to the tile number in the set
	u8 t;
	int off = (NUMTILESPERSET*tileset)+RAM_TILES_COUNT;
	
	for(int i=(0*30);i<(30*28);i++){
    d06e:	84 e0       	ldi	r24, 0x04	; 4
    d070:	e8 36       	cpi	r30, 0x68	; 104
    d072:	f8 07       	cpc	r31, r24
    d074:	a1 f7       	brne	.-24     	; 0xd05e <RamifyScreen+0x14>
		t = vram[i];
	  if(t < RAM_TILES_COUNT || t > ENDGAMETILES+RAM_TILES_COUNT){continue;}
	  vram[i] -= off;
	}

	WaitVsync(1);//takes a long time, let the kernel go
    d076:	81 e0       	ldi	r24, 0x01	; 1
    d078:	90 e0       	ldi	r25, 0x00	; 0
    d07a:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
}
    d07e:	08 95       	ret

0000d080 <RamifyTileSet>:
		ram_tiles[roff+((8-x)<<3)+y] = ram_tiles[doff+(y<<3)+x];
		
}


void RamifyTileSet(){//fill first 24 ram tiles with tile data
    d080:	90 91 86 0d 	lds	r25, 0x0D86
    d084:	88 e1       	ldi	r24, 0x18	; 24
    d086:	98 9f       	mul	r25, r24
    d088:	f0 01       	movw	r30, r0
    d08a:	11 24       	eor	r1, r1
    d08c:	a6 e0       	ldi	r26, 0x06	; 6
    d08e:	ee 0f       	add	r30, r30
    d090:	ff 1f       	adc	r31, r31
    d092:	aa 95       	dec	r26
    d094:	e1 f7       	brne	.-8      	; 0xd08e <RamifyTileSet+0xe>
    d096:	ec 51       	subi	r30, 0x1C	; 28
    d098:	ff 4f       	sbci	r31, 0xFF	; 255
    d09a:	a8 eb       	ldi	r26, 0xB8	; 184
    d09c:	b4 e0       	ldi	r27, 0x04	; 4
	int off = tileset*(NUMTILESPERSET)<<6;

	for(int i=0;i<(24*64);i++)
		 ram_tiles[i] = pgm_read_byte(&GameTiles[i+off]);
    d09e:	84 91       	lpm	r24, Z+
    d0a0:	8d 93       	st	X+, r24
    d0a2:	31 96       	adiw	r30, 0x01	; 1


void RamifyTileSet(){//fill first 24 ram tiles with tile data
	int off = tileset*(NUMTILESPERSET)<<6;

	for(int i=0;i<(24*64);i++)
    d0a4:	8a e0       	ldi	r24, 0x0A	; 10
    d0a6:	a8 3b       	cpi	r26, 0xB8	; 184
    d0a8:	b8 07       	cpc	r27, r24
    d0aa:	c9 f7       	brne	.-14     	; 0xd09e <RamifyTileSet+0x1e>
		 ram_tiles[i] = pgm_read_byte(&GameTiles[i+off]);

	WaitVsync(1);//takes a long time, let the kernel go
    d0ac:	81 e0       	ldi	r24, 0x01	; 1
    d0ae:	90 e0       	ldi	r25, 0x00	; 0
    d0b0:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
}
    d0b4:	08 95       	ret

0000d0b6 <BitMaskScreenOut>:
	 WaitVsync(1);

}
*/

void BitMaskScreenOut(u8 start, u8 nframes, u8 delay, bool reverse, u8 finaldelay, bool vflip){
    d0b6:	a0 e0       	ldi	r26, 0x00	; 0
    d0b8:	b0 e0       	ldi	r27, 0x00	; 0
    d0ba:	e1 e6       	ldi	r30, 0x61	; 97
    d0bc:	f8 e6       	ldi	r31, 0x68	; 104
    d0be:	0c 94 3e 77 	jmp	0xee7c	; 0xee7c <__prologue_saves__+0x10>
    d0c2:	18 2f       	mov	r17, r24
    d0c4:	d6 2e       	mov	r13, r22
    d0c6:	a4 2e       	mov	r10, r20
    d0c8:	b2 2e       	mov	r11, r18
    d0ca:	c0 2e       	mov	r12, r16
	RamifyTileSet();
    d0cc:	0e 94 40 68 	call	0xd080	; 0xd080 <RamifyTileSet>
	RamifyScreen();
    d0d0:	0e 94 25 68 	call	0xd04a	; 0xd04a <RamifyScreen>

	int t;
	int moff = (start*8);//8 bytes per frame
    d0d4:	a1 2f       	mov	r26, r17
    d0d6:	b0 e0       	ldi	r27, 0x00	; 0
    d0d8:	93 e0       	ldi	r25, 0x03	; 3
    d0da:	aa 0f       	add	r26, r26
    d0dc:	bb 1f       	adc	r27, r27
    d0de:	9a 95       	dec	r25
    d0e0:	e1 f7       	brne	.-8      	; 0xd0da <BitMaskScreenOut+0x24>
    d0e2:	41 c0       	rjmp	.+130    	; 0xd166 <BitMaskScreenOut+0xb0>

	while(nframes--){
		

		for(u8 y=0;y<8;y++){//extract 8 bytes total, 1 bit per pixel
			t = pgm_read_byte(&ScreenFadeTable[moff++]);//get our byte from the table
    d0e4:	fe 01       	movw	r30, r28
    d0e6:	84 91       	lpm	r24, Z+
    d0e8:	e8 2e       	mov	r14, r24
    d0ea:	ff 24       	eor	r15, r15
		  for(u8 x=0;x<8;x++){//read 8 bits from the byte and do a row
				if((t>>x) & 1){//is mask bit for this x position set
				for(int i=0;i<24;i++)//draw it to 24 ram tiles
					ram_tiles[(i<<6)+(y<<3)+x] = 0;
    d0ec:	8b 01       	movw	r16, r22
    d0ee:	83 e0       	ldi	r24, 0x03	; 3
    d0f0:	00 0f       	add	r16, r16
    d0f2:	11 1f       	adc	r17, r17
    d0f4:	8a 95       	dec	r24
    d0f6:	e1 f7       	brne	.-8      	; 0xd0f0 <BitMaskScreenOut+0x3a>
    d0f8:	40 e0       	ldi	r20, 0x00	; 0
    d0fa:	50 e0       	ldi	r21, 0x00	; 0
		

		for(u8 y=0;y<8;y++){//extract 8 bytes total, 1 bit per pixel
			t = pgm_read_byte(&ScreenFadeTable[moff++]);//get our byte from the table
		  for(u8 x=0;x<8;x++){//read 8 bits from the byte and do a row
				if((t>>x) & 1){//is mask bit for this x position set
    d0fc:	c7 01       	movw	r24, r14
    d0fe:	04 2e       	mov	r0, r20
    d100:	02 c0       	rjmp	.+4      	; 0xd106 <BitMaskScreenOut+0x50>
    d102:	95 95       	asr	r25
    d104:	87 95       	ror	r24
    d106:	0a 94       	dec	r0
    d108:	e2 f7       	brpl	.-8      	; 0xd102 <BitMaskScreenOut+0x4c>
    d10a:	80 ff       	sbrs	r24, 0
    d10c:	15 c0       	rjmp	.+42     	; 0xd138 <BitMaskScreenOut+0x82>
    d10e:	9a 01       	movw	r18, r20
    d110:	20 0f       	add	r18, r16
    d112:	31 1f       	adc	r19, r17
    d114:	80 e0       	ldi	r24, 0x00	; 0
    d116:	90 e0       	ldi	r25, 0x00	; 0
				for(int i=0;i<24;i++)//draw it to 24 ram tiles
					ram_tiles[(i<<6)+(y<<3)+x] = 0;
    d118:	28 54       	subi	r18, 0x48	; 72
    d11a:	3b 4f       	sbci	r19, 0xFB	; 251
    d11c:	fc 01       	movw	r30, r24
    d11e:	68 94       	set
    d120:	15 f8       	bld	r1, 5
    d122:	ee 0f       	add	r30, r30
    d124:	ff 1f       	adc	r31, r31
    d126:	16 94       	lsr	r1
    d128:	e1 f7       	brne	.-8      	; 0xd122 <BitMaskScreenOut+0x6c>
    d12a:	e2 0f       	add	r30, r18
    d12c:	f3 1f       	adc	r31, r19
    d12e:	10 82       	st	Z, r1

		for(u8 y=0;y<8;y++){//extract 8 bytes total, 1 bit per pixel
			t = pgm_read_byte(&ScreenFadeTable[moff++]);//get our byte from the table
		  for(u8 x=0;x<8;x++){//read 8 bits from the byte and do a row
				if((t>>x) & 1){//is mask bit for this x position set
				for(int i=0;i<24;i++)//draw it to 24 ram tiles
    d130:	01 96       	adiw	r24, 0x01	; 1
    d132:	88 31       	cpi	r24, 0x18	; 24
    d134:	91 05       	cpc	r25, r1
    d136:	91 f7       	brne	.-28     	; 0xd11c <BitMaskScreenOut+0x66>
    d138:	4f 5f       	subi	r20, 0xFF	; 255
    d13a:	5f 4f       	sbci	r21, 0xFF	; 255
	while(nframes--){
		

		for(u8 y=0;y<8;y++){//extract 8 bytes total, 1 bit per pixel
			t = pgm_read_byte(&ScreenFadeTable[moff++]);//get our byte from the table
		  for(u8 x=0;x<8;x++){//read 8 bits from the byte and do a row
    d13c:	48 30       	cpi	r20, 0x08	; 8
    d13e:	51 05       	cpc	r21, r1
    d140:	e9 f6       	brne	.-70     	; 0xd0fc <BitMaskScreenOut+0x46>
    d142:	6f 5f       	subi	r22, 0xFF	; 255
    d144:	7f 4f       	sbci	r23, 0xFF	; 255
    d146:	21 96       	adiw	r28, 0x01	; 1
	int moff = (start*8);//8 bytes per frame

	while(nframes--){
		

		for(u8 y=0;y<8;y++){//extract 8 bytes total, 1 bit per pixel
    d148:	68 30       	cpi	r22, 0x08	; 8
    d14a:	71 05       	cpc	r23, r1
    d14c:	59 f6       	brne	.-106    	; 0xd0e4 <BitMaskScreenOut+0x2e>
    d14e:	ed 01       	movw	r28, r26
    d150:	28 96       	adiw	r28, 0x08	; 8
					ram_tiles[(i<<6)+(y<<3)+x] = 0;
			}
		 }	
		}

	  if(reverse)//draw frames from start moving backwards(for lines left to right etc, save space)
    d152:	bb 20       	and	r11, r11
    d154:	11 f0       	breq	.+4      	; 0xd15a <BitMaskScreenOut+0xa4>
			moff -= 16;		 
    d156:	ed 01       	movw	r28, r26
    d158:	28 97       	sbiw	r28, 0x08	; 8

		WaitVsync(delay);
    d15a:	8a 2d       	mov	r24, r10
    d15c:	90 e0       	ldi	r25, 0x00	; 0
    d15e:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
    d162:	da 94       	dec	r13
    d164:	de 01       	movw	r26, r28
	RamifyScreen();

	int t;
	int moff = (start*8);//8 bytes per frame

	while(nframes--){
    d166:	dd 20       	and	r13, r13
    d168:	31 f0       	breq	.+12     	; 0xd176 <BitMaskScreenOut+0xc0>
    d16a:	ed 01       	movw	r28, r26
    d16c:	cd 5d       	subi	r28, 0xDD	; 221
    d16e:	da 4c       	sbci	r29, 0xCA	; 202
    d170:	60 e0       	ldi	r22, 0x00	; 0
    d172:	70 e0       	ldi	r23, 0x00	; 0
    d174:	b7 cf       	rjmp	.-146    	; 0xd0e4 <BitMaskScreenOut+0x2e>
			moff -= 16;		 

		WaitVsync(delay);
	}
	
	if(finaldelay)
    d176:	cc 20       	and	r12, r12
    d178:	21 f0       	breq	.+8      	; 0xd182 <BitMaskScreenOut+0xcc>
		WaitVsync(finaldelay);
    d17a:	8c 2d       	mov	r24, r12
    d17c:	90 e0       	ldi	r25, 0x00	; 0
    d17e:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
}
    d182:	cd b7       	in	r28, 0x3d	; 61
    d184:	de b7       	in	r29, 0x3e	; 62
    d186:	ea e0       	ldi	r30, 0x0A	; 10
    d188:	0c 94 5a 77 	jmp	0xeeb4	; 0xeeb4 <__epilogue_restores__+0x10>

0000d18c <DoScreenOutEffect>:
	  WaitVsync(1);
	}
}
*/

void DoScreenOutEffect(){
    d18c:	ef 92       	push	r14
    d18e:	0f 93       	push	r16
    d190:	df 93       	push	r29
    d192:	cf 93       	push	r28
    d194:	00 d0       	rcall	.+0      	; 0xd196 <DoScreenOutEffect+0xa>
    d196:	00 d0       	rcall	.+0      	; 0xd198 <DoScreenOutEffect+0xc>
    d198:	00 d0       	rcall	.+0      	; 0xd19a <DoScreenOutEffect+0xe>
    d19a:	cd b7       	in	r28, 0x3d	; 61
    d19c:	de b7       	in	r29, 0x3e	; 62
	WaitVsync(1);
    d19e:	81 e0       	ldi	r24, 0x01	; 1
    d1a0:	90 e0       	ldi	r25, 0x00	; 0
    d1a2:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
	HideSprites(0,MAX_SPRITES);
    d1a6:	80 e0       	ldi	r24, 0x00	; 0
    d1a8:	64 e1       	ldi	r22, 0x14	; 20
    d1aa:	0e 94 f5 63 	call	0xc7ea	; 0xc7ea <HideSprites>
	RamifyTileSet();
    d1ae:	0e 94 40 68 	call	0xd080	; 0xd080 <RamifyTileSet>
	RamifyScreen();
    d1b2:	0e 94 25 68 	call	0xd04a	; 0xd04a <RamifyScreen>
    d1b6:	90 91 81 0d 	lds	r25, 0x0D81
    d1ba:	86 e0       	ldi	r24, 0x06	; 6
    d1bc:	98 9f       	mul	r25, r24
    d1be:	f0 01       	movw	r30, r0
    d1c0:	11 24       	eor	r1, r1
    d1c2:	ef 51       	subi	r30, 0x1F	; 31
    d1c4:	fb 4c       	sbci	r31, 0xCB	; 203
    d1c6:	de 01       	movw	r26, r28
    d1c8:	11 96       	adiw	r26, 0x01	; 1

	int off = outeffectnum*6;
	u8 parms[6];

	for(u8 i=0;i<6;i++)
    d1ca:	9e 01       	movw	r18, r28
    d1cc:	29 5f       	subi	r18, 0xF9	; 249
    d1ce:	3f 4f       	sbci	r19, 0xFF	; 255
		parms[i] = pgm_read_byte(&ScreenFadeParms[off++]);
    d1d0:	84 91       	lpm	r24, Z+
    d1d2:	8d 93       	st	X+, r24
    d1d4:	31 96       	adiw	r30, 0x01	; 1
	RamifyScreen();

	int off = outeffectnum*6;
	u8 parms[6];

	for(u8 i=0;i<6;i++)
    d1d6:	a2 17       	cp	r26, r18
    d1d8:	b3 07       	cpc	r27, r19
    d1da:	d1 f7       	brne	.-12     	; 0xd1d0 <DoScreenOutEffect+0x44>
		parms[i] = pgm_read_byte(&ScreenFadeParms[off++]);
	
	WaitVsync(1);
    d1dc:	81 e0       	ldi	r24, 0x01	; 1
    d1de:	90 e0       	ldi	r25, 0x00	; 0
    d1e0:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
	BitMaskScreenOut(parms[0], parms[1], parms[2], parms[3], parms[4], parms[5]);
    d1e4:	20 e0       	ldi	r18, 0x00	; 0
    d1e6:	8c 81       	ldd	r24, Y+4	; 0x04
    d1e8:	81 11       	cpse	r24, r1
    d1ea:	21 e0       	ldi	r18, 0x01	; 1
    d1ec:	90 e0       	ldi	r25, 0x00	; 0
    d1ee:	8e 81       	ldd	r24, Y+6	; 0x06
    d1f0:	81 11       	cpse	r24, r1
    d1f2:	91 e0       	ldi	r25, 0x01	; 1
    d1f4:	89 81       	ldd	r24, Y+1	; 0x01
    d1f6:	6a 81       	ldd	r22, Y+2	; 0x02
    d1f8:	4b 81       	ldd	r20, Y+3	; 0x03
    d1fa:	0d 81       	ldd	r16, Y+5	; 0x05
    d1fc:	e9 2e       	mov	r14, r25
    d1fe:	0e 94 5b 68 	call	0xd0b6	; 0xd0b6 <BitMaskScreenOut>


	if((++outeffectnum)>=(NUMOUTEFFECTS)){outeffectnum=0;}
    d202:	80 91 81 0d 	lds	r24, 0x0D81
    d206:	8f 5f       	subi	r24, 0xFF	; 255
    d208:	80 93 81 0d 	sts	0x0D81, r24
    d20c:	8b 30       	cpi	r24, 0x0B	; 11
    d20e:	10 f0       	brcs	.+4      	; 0xd214 <DoScreenOutEffect+0x88>
    d210:	10 92 81 0d 	sts	0x0D81, r1
}
    d214:	26 96       	adiw	r28, 0x06	; 6
    d216:	0f b6       	in	r0, 0x3f	; 63
    d218:	f8 94       	cli
    d21a:	de bf       	out	0x3e, r29	; 62
    d21c:	0f be       	out	0x3f, r0	; 63
    d21e:	cd bf       	out	0x3d, r28	; 61
    d220:	cf 91       	pop	r28
    d222:	df 91       	pop	r29
    d224:	0f 91       	pop	r16
    d226:	ef 90       	pop	r14
    d228:	08 95       	ret

0000d22a <DemoQuit>:
void DemoSetup();
void DemoShutdown();

bool DemoQuit(){
	demoplaying=false;guijuststarted=true;guistate=GMAINMENU;//return true;
    d22a:	10 92 96 0d 	sts	0x0D96, r1
    d22e:	81 e0       	ldi	r24, 0x01	; 1
    d230:	80 93 6d 0d 	sts	0x0D6D, r24
    d234:	80 93 91 0d 	sts	0x0D91, r24
	DoScreenOutEffect();
    d238:	0e 94 c6 68 	call	0xd18c	; 0xd18c <DoScreenOutEffect>
	//FadeOut(1,true);
	//FillScreen(BLANKT);
	WaitVsync(1);
    d23c:	81 e0       	ldi	r24, 0x01	; 1
    d23e:	90 e0       	ldi	r25, 0x00	; 0
    d240:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
	return true;
}
    d244:	81 e0       	ldi	r24, 0x01	; 1
    d246:	08 95       	ret

0000d248 <FillScreen>:
	  }
	  mt++;
	}
}

void FillScreen(u8 t){
    d248:	ff 92       	push	r15
    d24a:	0f 93       	push	r16
    d24c:	1f 93       	push	r17
    d24e:	f8 2e       	mov	r15, r24
    d250:	00 e0       	ldi	r16, 0x00	; 0
    d252:	0c c0       	rjmp	.+24     	; 0xd26c <FillScreen+0x24>
	for(u8 i=0;i<30;i++)
	for(u8 j=0;j<28;j++)
		SetTile(i,j,t);
    d254:	80 2f       	mov	r24, r16
    d256:	61 2f       	mov	r22, r17
    d258:	4f 2d       	mov	r20, r15
    d25a:	50 e0       	ldi	r21, 0x00	; 0
    d25c:	0e 94 ca 58 	call	0xb194	; 0xb194 <SetTile>
	}
}

void FillScreen(u8 t){
	for(u8 i=0;i<30;i++)
	for(u8 j=0;j<28;j++)
    d260:	1f 5f       	subi	r17, 0xFF	; 255
    d262:	1c 31       	cpi	r17, 0x1C	; 28
    d264:	b9 f7       	brne	.-18     	; 0xd254 <FillScreen+0xc>
	  mt++;
	}
}

void FillScreen(u8 t){
	for(u8 i=0;i<30;i++)
    d266:	0f 5f       	subi	r16, 0xFF	; 255
    d268:	0e 31       	cpi	r16, 0x1E	; 30
    d26a:	11 f0       	breq	.+4      	; 0xd270 <FillScreen+0x28>
    d26c:	10 e0       	ldi	r17, 0x00	; 0
    d26e:	f2 cf       	rjmp	.-28     	; 0xd254 <FillScreen+0xc>
	for(u8 j=0;j<28;j++)
		SetTile(i,j,t);
}
    d270:	1f 91       	pop	r17
    d272:	0f 91       	pop	r16
    d274:	ff 90       	pop	r15
    d276:	08 95       	ret

0000d278 <DrawMenu>:
void AttractMode(){
	if(demonum==NUMDEMOS){demonum = 0;}
	PlayDemo(demonum++);
}

void DrawMenu(u8 x, u8 y, u8 w, u8 h){
    d278:	a0 e0       	ldi	r26, 0x00	; 0
    d27a:	b0 e0       	ldi	r27, 0x00	; 0
    d27c:	e2 e4       	ldi	r30, 0x42	; 66
    d27e:	f9 e6       	ldi	r31, 0x69	; 105
    d280:	0c 94 3a 77 	jmp	0xee74	; 0xee74 <__prologue_saves__+0x8>
    d284:	98 2e       	mov	r9, r24
    d286:	a6 2e       	mov	r10, r22
    d288:	14 2f       	mov	r17, r20
    d28a:	02 2f       	mov	r16, r18
	int off = (y*30)+x;
    d28c:	c6 2e       	mov	r12, r22
    d28e:	dd 24       	eor	r13, r13
    d290:	68 2e       	mov	r6, r24
    d292:	77 24       	eor	r7, r7
    d294:	c6 01       	movw	r24, r12
    d296:	88 0f       	add	r24, r24
    d298:	99 1f       	adc	r25, r25
    d29a:	96 01       	movw	r18, r12
    d29c:	65 e0       	ldi	r22, 0x05	; 5
    d29e:	22 0f       	add	r18, r18
    d2a0:	33 1f       	adc	r19, r19
    d2a2:	6a 95       	dec	r22
    d2a4:	e1 f7       	brne	.-8      	; 0xd29e <DrawMenu+0x26>
    d2a6:	28 1b       	sub	r18, r24
    d2a8:	39 0b       	sbc	r19, r25
    d2aa:	26 0d       	add	r18, r6
    d2ac:	37 1d       	adc	r19, r7

	u8 t;
	t = vram[off+0]-RAM_TILES_COUNT;
    d2ae:	f9 01       	movw	r30, r18
    d2b0:	e0 5e       	subi	r30, 0xE0	; 224
    d2b2:	fe 4f       	sbci	r31, 0xFE	; 254
    d2b4:	e0 81       	ld	r30, Z
    d2b6:	ee 51       	subi	r30, 0x1E	; 30
	if(t < MENUSTART || t == BLANKT){menurestore[0] = vram[off+ 0]-RAM_TILES_COUNT;}//save the tiles under the corners if they aren't already menu tiles
    d2b8:	e8 37       	cpi	r30, 0x78	; 120
    d2ba:	10 f0       	brcs	.+4      	; 0xd2c0 <DrawMenu+0x48>
    d2bc:	e1 38       	cpi	r30, 0x81	; 129
    d2be:	11 f4       	brne	.+4      	; 0xd2c4 <DrawMenu+0x4c>
    d2c0:	e0 93 7d 0d 	sts	0x0D7D, r30
	t = vram[off+w]-RAM_TILES_COUNT;
    d2c4:	c1 2f       	mov	r28, r17
    d2c6:	d0 e0       	ldi	r29, 0x00	; 0
    d2c8:	f9 01       	movw	r30, r18
    d2ca:	e0 5e       	subi	r30, 0xE0	; 224
    d2cc:	fe 4f       	sbci	r31, 0xFE	; 254
    d2ce:	ec 0f       	add	r30, r28
    d2d0:	fd 1f       	adc	r31, r29
    d2d2:	e0 81       	ld	r30, Z
    d2d4:	ee 51       	subi	r30, 0x1E	; 30
	if(t < MENUSTART || t == BLANKT){menurestore[1] = vram[off+ w]-RAM_TILES_COUNT;}
    d2d6:	e8 37       	cpi	r30, 0x78	; 120
    d2d8:	10 f0       	brcs	.+4      	; 0xd2de <DrawMenu+0x66>
    d2da:	e1 38       	cpi	r30, 0x81	; 129
    d2dc:	11 f4       	brne	.+4      	; 0xd2e2 <DrawMenu+0x6a>
    d2de:	e0 93 7e 0d 	sts	0x0D7E, r30
	
	off += 30*h;
    d2e2:	e0 2e       	mov	r14, r16
    d2e4:	ff 24       	eor	r15, r15
    d2e6:	c7 01       	movw	r24, r14
    d2e8:	88 0f       	add	r24, r24
    d2ea:	99 1f       	adc	r25, r25
    d2ec:	d7 01       	movw	r26, r14
    d2ee:	45 e0       	ldi	r20, 0x05	; 5
    d2f0:	aa 0f       	add	r26, r26
    d2f2:	bb 1f       	adc	r27, r27
    d2f4:	4a 95       	dec	r20
    d2f6:	e1 f7       	brne	.-8      	; 0xd2f0 <DrawMenu+0x78>
    d2f8:	a8 1b       	sub	r26, r24
    d2fa:	b9 0b       	sbc	r27, r25
    d2fc:	a2 0f       	add	r26, r18
    d2fe:	b3 1f       	adc	r27, r19
	
	t = vram[off+0]-RAM_TILES_COUNT;
    d300:	fd 01       	movw	r30, r26
    d302:	e0 5e       	subi	r30, 0xE0	; 224
    d304:	fe 4f       	sbci	r31, 0xFE	; 254
    d306:	e0 81       	ld	r30, Z
    d308:	ee 51       	subi	r30, 0x1E	; 30
	if(t < MENUSTART || t == BLANKT){menurestore[2] = vram[off+ 0]-RAM_TILES_COUNT;}
    d30a:	e8 37       	cpi	r30, 0x78	; 120
    d30c:	10 f0       	brcs	.+4      	; 0xd312 <DrawMenu+0x9a>
    d30e:	e1 38       	cpi	r30, 0x81	; 129
    d310:	11 f4       	brne	.+4      	; 0xd316 <DrawMenu+0x9e>
    d312:	e0 93 7f 0d 	sts	0x0D7F, r30
	t = vram[off+w]-RAM_TILES_COUNT;
    d316:	a0 5e       	subi	r26, 0xE0	; 224
    d318:	be 4f       	sbci	r27, 0xFE	; 254
    d31a:	ac 0f       	add	r26, r28
    d31c:	bd 1f       	adc	r27, r29
    d31e:	ec 91       	ld	r30, X
    d320:	ee 51       	subi	r30, 0x1E	; 30
	if(t < MENUSTART || t == BLANKT){menurestore[3] = vram[off+ w]-RAM_TILES_COUNT;}
    d322:	e8 37       	cpi	r30, 0x78	; 120
    d324:	10 f0       	brcs	.+4      	; 0xd32a <DrawMenu+0xb2>
    d326:	e1 38       	cpi	r30, 0x81	; 129
    d328:	11 f4       	brne	.+4      	; 0xd32e <DrawMenu+0xb6>
    d32a:	e0 93 80 0d 	sts	0x0D80, r30

	SetTile(x+0,y+0,MENUSTART+5);//draw the corners
    d32e:	89 2d       	mov	r24, r9
    d330:	6a 2d       	mov	r22, r10
    d332:	4d e7       	ldi	r20, 0x7D	; 125
    d334:	50 e0       	ldi	r21, 0x00	; 0
    d336:	0e 94 ca 58 	call	0xb194	; 0xb194 <SetTile>
	SetTile(x+w,y+0,MENUSTART+6);
    d33a:	b1 2e       	mov	r11, r17
    d33c:	b9 0c       	add	r11, r9
    d33e:	8b 2d       	mov	r24, r11
    d340:	6a 2d       	mov	r22, r10
    d342:	4e e7       	ldi	r20, 0x7E	; 126
    d344:	50 e0       	ldi	r21, 0x00	; 0
    d346:	0e 94 ca 58 	call	0xb194	; 0xb194 <SetTile>
	SetTile(x+0,y+h,MENUSTART+7);
    d34a:	0a 0d       	add	r16, r10
    d34c:	89 2d       	mov	r24, r9
    d34e:	60 2f       	mov	r22, r16
    d350:	4f e7       	ldi	r20, 0x7F	; 127
    d352:	50 e0       	ldi	r21, 0x00	; 0
    d354:	0e 94 ca 58 	call	0xb194	; 0xb194 <SetTile>
	SetTile(x+w,y+h,MENUSTART+8);
    d358:	8b 2d       	mov	r24, r11
    d35a:	60 2f       	mov	r22, r16
    d35c:	40 e8       	ldi	r20, 0x80	; 128
    d35e:	50 e0       	ldi	r21, 0x00	; 0
    d360:	0e 94 ca 58 	call	0xb194	; 0xb194 <SetTile>

	for(u8 i=x+1;i<x+w;i++){SetTile(i,y,MENUSTART+0);SetTile(i,y+h,MENUSTART+1);}//draw top and bottom
    d364:	89 2c       	mov	r8, r9
    d366:	83 94       	inc	r8
    d368:	18 2d       	mov	r17, r8
    d36a:	6c 0e       	add	r6, r28
    d36c:	7d 1e       	adc	r7, r29
    d36e:	0d c0       	rjmp	.+26     	; 0xd38a <DrawMenu+0x112>
    d370:	81 2f       	mov	r24, r17
    d372:	6a 2d       	mov	r22, r10
    d374:	48 e7       	ldi	r20, 0x78	; 120
    d376:	50 e0       	ldi	r21, 0x00	; 0
    d378:	0e 94 ca 58 	call	0xb194	; 0xb194 <SetTile>
    d37c:	81 2f       	mov	r24, r17
    d37e:	60 2f       	mov	r22, r16
    d380:	49 e7       	ldi	r20, 0x79	; 121
    d382:	50 e0       	ldi	r21, 0x00	; 0
    d384:	0e 94 ca 58 	call	0xb194	; 0xb194 <SetTile>
    d388:	1f 5f       	subi	r17, 0xFF	; 255
    d38a:	81 2f       	mov	r24, r17
    d38c:	90 e0       	ldi	r25, 0x00	; 0
    d38e:	86 15       	cp	r24, r6
    d390:	97 05       	cpc	r25, r7
    d392:	74 f3       	brlt	.-36     	; 0xd370 <DrawMenu+0xf8>
	for(u8 i=y+1;i<y+h;i++){SetTile(x,i,MENUSTART+2);SetTile(x+w,i,MENUSTART+3);}
    d394:	0a 2d       	mov	r16, r10
    d396:	0f 5f       	subi	r16, 0xFF	; 255
    d398:	10 2f       	mov	r17, r16
    d39a:	e7 01       	movw	r28, r14
    d39c:	cc 0d       	add	r28, r12
    d39e:	dd 1d       	adc	r29, r13
    d3a0:	0d c0       	rjmp	.+26     	; 0xd3bc <DrawMenu+0x144>
    d3a2:	89 2d       	mov	r24, r9
    d3a4:	61 2f       	mov	r22, r17
    d3a6:	4a e7       	ldi	r20, 0x7A	; 122
    d3a8:	50 e0       	ldi	r21, 0x00	; 0
    d3aa:	0e 94 ca 58 	call	0xb194	; 0xb194 <SetTile>
    d3ae:	8b 2d       	mov	r24, r11
    d3b0:	61 2f       	mov	r22, r17
    d3b2:	4b e7       	ldi	r20, 0x7B	; 123
    d3b4:	50 e0       	ldi	r21, 0x00	; 0
    d3b6:	0e 94 ca 58 	call	0xb194	; 0xb194 <SetTile>
    d3ba:	1f 5f       	subi	r17, 0xFF	; 255
    d3bc:	81 2f       	mov	r24, r17
    d3be:	90 e0       	ldi	r25, 0x00	; 0
    d3c0:	8c 17       	cp	r24, r28
    d3c2:	9d 07       	cpc	r25, r29
    d3c4:	74 f3       	brlt	.-36     	; 0xd3a2 <DrawMenu+0x12a>
    d3c6:	0d c0       	rjmp	.+26     	; 0xd3e2 <DrawMenu+0x16a>

	for(u8 i=y+1;i<y+h;i++)
	for(u8 j=x+1;j<x+w;j++)
		SetTile(j,i,FONTSTART);
    d3c8:	81 2f       	mov	r24, r17
    d3ca:	60 2f       	mov	r22, r16
    d3cc:	42 e8       	ldi	r20, 0x82	; 130
    d3ce:	50 e0       	ldi	r21, 0x00	; 0
    d3d0:	0e 94 ca 58 	call	0xb194	; 0xb194 <SetTile>

	for(u8 i=x+1;i<x+w;i++){SetTile(i,y,MENUSTART+0);SetTile(i,y+h,MENUSTART+1);}//draw top and bottom
	for(u8 i=y+1;i<y+h;i++){SetTile(x,i,MENUSTART+2);SetTile(x+w,i,MENUSTART+3);}

	for(u8 i=y+1;i<y+h;i++)
	for(u8 j=x+1;j<x+w;j++)
    d3d4:	1f 5f       	subi	r17, 0xFF	; 255
    d3d6:	81 2f       	mov	r24, r17
    d3d8:	90 e0       	ldi	r25, 0x00	; 0
    d3da:	86 15       	cp	r24, r6
    d3dc:	97 05       	cpc	r25, r7
    d3de:	a4 f3       	brlt	.-24     	; 0xd3c8 <DrawMenu+0x150>
	SetTile(x+w,y+h,MENUSTART+8);

	for(u8 i=x+1;i<x+w;i++){SetTile(i,y,MENUSTART+0);SetTile(i,y+h,MENUSTART+1);}//draw top and bottom
	for(u8 i=y+1;i<y+h;i++){SetTile(x,i,MENUSTART+2);SetTile(x+w,i,MENUSTART+3);}

	for(u8 i=y+1;i<y+h;i++)
    d3e0:	0f 5f       	subi	r16, 0xFF	; 255
    d3e2:	80 2f       	mov	r24, r16
    d3e4:	90 e0       	ldi	r25, 0x00	; 0
    d3e6:	8c 17       	cp	r24, r28
    d3e8:	9d 07       	cpc	r25, r29
    d3ea:	14 f4       	brge	.+4      	; 0xd3f0 <DrawMenu+0x178>
    d3ec:	18 2d       	mov	r17, r8
    d3ee:	f3 cf       	rjmp	.-26     	; 0xd3d6 <DrawMenu+0x15e>
	for(u8 j=x+1;j<x+w;j++)
		SetTile(j,i,FONTSTART);
	
}
    d3f0:	cd b7       	in	r28, 0x3d	; 61
    d3f2:	de b7       	in	r29, 0x3e	; 62
    d3f4:	ee e0       	ldi	r30, 0x0E	; 14
    d3f6:	0c 94 56 77 	jmp	0xeeac	; 0xeeac <__epilogue_restores__+0x8>

0000d3fa <DrawOpeningMenu>:
	replaceramcolor(menurestore[3],roff++,0);

}


void DrawOpeningMenu(u8 x, u8 y, u8 w, u8 h, int speed, bool smooth){
    d3fa:	a0 e0       	ldi	r26, 0x00	; 0
    d3fc:	b0 e0       	ldi	r27, 0x00	; 0
    d3fe:	e3 e0       	ldi	r30, 0x03	; 3
    d400:	fa e6       	ldi	r31, 0x6A	; 106
    d402:	0c 94 39 77 	jmp	0xee72	; 0xee72 <__prologue_saves__+0x6>
    d406:	c8 2e       	mov	r12, r24
    d408:	d6 2e       	mov	r13, r22
    d40a:	74 2e       	mov	r7, r20
    d40c:	62 2e       	mov	r6, r18
    d40e:	e8 01       	movw	r28, r16
    d410:	5e 2c       	mov	r5, r14
	u8 mt;
	u8 count;
	mt = 1;
	count = speed;
    d412:	e0 2e       	mov	r14, r16
    d414:	f0 2e       	mov	r15, r16
    d416:	11 e0       	ldi	r17, 0x01	; 1
	while(mt<w+1){//open horizontally
    d418:	84 2e       	mov	r8, r20
    d41a:	99 24       	eor	r9, r9
		DrawMenu(x,y,mt,1);
	  if(smooth){SmoothMenuCorners(x,y,mt,1,26);}
	  if(speed < 0){
			WaitVsync(abs(speed));
    d41c:	aa 24       	eor	r10, r10
    d41e:	bb 24       	eor	r11, r11
    d420:	ac 1a       	sub	r10, r28
    d422:	bd 0a       	sbc	r11, r29
    d424:	1f c0       	rjmp	.+62     	; 0xd464 <DrawOpeningMenu+0x6a>
	u8 mt;
	u8 count;
	mt = 1;
	count = speed;
	while(mt<w+1){//open horizontally
		DrawMenu(x,y,mt,1);
    d426:	8c 2d       	mov	r24, r12
    d428:	6d 2d       	mov	r22, r13
    d42a:	41 2f       	mov	r20, r17
    d42c:	21 e0       	ldi	r18, 0x01	; 1
    d42e:	0e 94 3c 69 	call	0xd278	; 0xd278 <DrawMenu>
	  if(smooth){SmoothMenuCorners(x,y,mt,1,26);}
    d432:	55 20       	and	r5, r5
    d434:	39 f0       	breq	.+14     	; 0xd444 <DrawOpeningMenu+0x4a>
    d436:	8c 2d       	mov	r24, r12
    d438:	6d 2d       	mov	r22, r13
    d43a:	41 2f       	mov	r20, r17
    d43c:	21 e0       	ldi	r18, 0x01	; 1
    d43e:	0a e1       	ldi	r16, 0x1A	; 26
    d440:	0e 94 a5 65 	call	0xcb4a	; 0xcb4a <SmoothMenuCorners>
	  if(speed < 0){
    d444:	d7 ff       	sbrs	r29, 7
    d446:	04 c0       	rjmp	.+8      	; 0xd450 <DrawOpeningMenu+0x56>
			WaitVsync(abs(speed));
    d448:	c5 01       	movw	r24, r10
    d44a:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
    d44e:	09 c0       	rjmp	.+18     	; 0xd462 <DrawOpeningMenu+0x68>
	  }
	  else{
		  if(!count){WaitVsync(1);count=speed;}else{count--;}
    d450:	ff 20       	and	r15, r15
    d452:	31 f4       	brne	.+12     	; 0xd460 <DrawOpeningMenu+0x66>
    d454:	81 e0       	ldi	r24, 0x01	; 1
    d456:	90 e0       	ldi	r25, 0x00	; 0
    d458:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
    d45c:	fe 2c       	mov	r15, r14
    d45e:	01 c0       	rjmp	.+2      	; 0xd462 <DrawOpeningMenu+0x68>
    d460:	fa 94       	dec	r15
	  }
	  mt++;
    d462:	1f 5f       	subi	r17, 0xFF	; 255
void DrawOpeningMenu(u8 x, u8 y, u8 w, u8 h, int speed, bool smooth){
	u8 mt;
	u8 count;
	mt = 1;
	count = speed;
	while(mt<w+1){//open horizontally
    d464:	81 2f       	mov	r24, r17
    d466:	90 e0       	ldi	r25, 0x00	; 0
    d468:	88 16       	cp	r8, r24
    d46a:	99 06       	cpc	r9, r25
    d46c:	e4 f6       	brge	.-72     	; 0xd426 <DrawOpeningMenu+0x2c>
    d46e:	fe 2c       	mov	r15, r14
    d470:	11 e0       	ldi	r17, 0x01	; 1
	  }
	  mt++;
	}
	mt = 1;
	count = speed;
	while(mt<h+1){
    d472:	86 2c       	mov	r8, r6
    d474:	99 24       	eor	r9, r9
		DrawMenu(x,y,w,mt);
	  if(smooth){SmoothMenuCorners(x,y,w,mt,26);}
	  if(speed < 0){
			WaitVsync(abs(speed));
    d476:	aa 24       	eor	r10, r10
    d478:	bb 24       	eor	r11, r11
    d47a:	ac 1a       	sub	r10, r28
    d47c:	bd 0a       	sbc	r11, r29
    d47e:	1f c0       	rjmp	.+62     	; 0xd4be <DrawOpeningMenu+0xc4>
	  mt++;
	}
	mt = 1;
	count = speed;
	while(mt<h+1){
		DrawMenu(x,y,w,mt);
    d480:	8c 2d       	mov	r24, r12
    d482:	6d 2d       	mov	r22, r13
    d484:	47 2d       	mov	r20, r7
    d486:	21 2f       	mov	r18, r17
    d488:	0e 94 3c 69 	call	0xd278	; 0xd278 <DrawMenu>
	  if(smooth){SmoothMenuCorners(x,y,w,mt,26);}
    d48c:	55 20       	and	r5, r5
    d48e:	39 f0       	breq	.+14     	; 0xd49e <DrawOpeningMenu+0xa4>
    d490:	8c 2d       	mov	r24, r12
    d492:	6d 2d       	mov	r22, r13
    d494:	47 2d       	mov	r20, r7
    d496:	21 2f       	mov	r18, r17
    d498:	0a e1       	ldi	r16, 0x1A	; 26
    d49a:	0e 94 a5 65 	call	0xcb4a	; 0xcb4a <SmoothMenuCorners>
	  if(speed < 0){
    d49e:	d7 ff       	sbrs	r29, 7
    d4a0:	04 c0       	rjmp	.+8      	; 0xd4aa <DrawOpeningMenu+0xb0>
			WaitVsync(abs(speed));
    d4a2:	c5 01       	movw	r24, r10
    d4a4:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
    d4a8:	09 c0       	rjmp	.+18     	; 0xd4bc <DrawOpeningMenu+0xc2>
	  }
	  else{
		  if(!count){WaitVsync(1);count=speed;}else{count--;}
    d4aa:	ff 20       	and	r15, r15
    d4ac:	31 f4       	brne	.+12     	; 0xd4ba <DrawOpeningMenu+0xc0>
    d4ae:	81 e0       	ldi	r24, 0x01	; 1
    d4b0:	90 e0       	ldi	r25, 0x00	; 0
    d4b2:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
    d4b6:	fe 2c       	mov	r15, r14
    d4b8:	01 c0       	rjmp	.+2      	; 0xd4bc <DrawOpeningMenu+0xc2>
    d4ba:	fa 94       	dec	r15
	  }
	  mt++;
    d4bc:	1f 5f       	subi	r17, 0xFF	; 255
	  }
	  mt++;
	}
	mt = 1;
	count = speed;
	while(mt<h+1){
    d4be:	81 2f       	mov	r24, r17
    d4c0:	90 e0       	ldi	r25, 0x00	; 0
    d4c2:	88 16       	cp	r8, r24
    d4c4:	99 06       	cpc	r9, r25
    d4c6:	e4 f6       	brge	.-72     	; 0xd480 <DrawOpeningMenu+0x86>
	  else{
		  if(!count){WaitVsync(1);count=speed;}else{count--;}
	  }
	  mt++;
	}
}
    d4c8:	cd b7       	in	r28, 0x3d	; 61
    d4ca:	de b7       	in	r29, 0x3e	; 62
    d4cc:	ef e0       	ldi	r30, 0x0F	; 15
    d4ce:	0c 94 55 77 	jmp	0xeeaa	; 0xeeaa <__epilogue_restores__+0x6>

0000d4d2 <print>:
		toff++;
		roff++;
	}
}

void print(u8 x,u8 y,const char *string){
    d4d2:	0f 93       	push	r16
    d4d4:	1f 93       	push	r17
    d4d6:	cf 93       	push	r28
    d4d8:	df 93       	push	r29
    d4da:	18 2f       	mov	r17, r24
    d4dc:	06 2f       	mov	r16, r22
    d4de:	ea 01       	movw	r28, r20
	int i=0;
	char c;

	while(true){
		c=pgm_read_byte(&(string[i++]));		
    d4e0:	fe 01       	movw	r30, r28
    d4e2:	44 91       	lpm	r20, Z+
    d4e4:	21 96       	adiw	r28, 0x01	; 1
		if(c!=0){
    d4e6:	44 23       	and	r20, r20
    d4e8:	69 f0       	breq	.+26     	; 0xd504 <print+0x32>
			c=((c&127)-32);		

			SetTile(x++,y,c+FONTSTART-19);
		}else{
			break;
    d4ea:	81 2f       	mov	r24, r17
	while(true){
		c=pgm_read_byte(&(string[i++]));		
		if(c!=0){
			c=((c&127)-32);		

			SetTile(x++,y,c+FONTSTART-19);
    d4ec:	1f 5f       	subi	r17, 0xFF	; 255
    d4ee:	4f 77       	andi	r20, 0x7F	; 127
    d4f0:	40 52       	subi	r20, 0x20	; 32
    d4f2:	55 27       	eor	r21, r21
    d4f4:	47 fd       	sbrc	r20, 7
    d4f6:	50 95       	com	r21
    d4f8:	41 59       	subi	r20, 0x91	; 145
    d4fa:	5f 4f       	sbci	r21, 0xFF	; 255
    d4fc:	60 2f       	mov	r22, r16
    d4fe:	0e 94 ca 58 	call	0xb194	; 0xb194 <SetTile>
    d502:	ee cf       	rjmp	.-36     	; 0xd4e0 <print+0xe>
		}else{
			break;
		}
	}	
}
    d504:	df 91       	pop	r29
    d506:	cf 91       	pop	r28
    d508:	1f 91       	pop	r17
    d50a:	0f 91       	pop	r16
    d50c:	08 95       	ret

0000d50e <GameEnding>:
const char strEnd11[] PROGMEM = "I3AM3JUST3OUT3OF3TIME3NOW";
const char strEnd12[] PROGMEM = "CREATED3BY3LEE3WEBER";
//const char strWasteSpace[] PROGMEM = "5WASTE3THE3SPACE33";
#endif

void GameEnding(){
    d50e:	cf 93       	push	r28
    d510:	df 93       	push	r29
#ifndef NOENDING
	FadeIn(3,false);
    d512:	83 e0       	ldi	r24, 0x03	; 3
    d514:	60 e0       	ldi	r22, 0x00	; 0
    d516:	0e 94 b0 62 	call	0xc560	; 0xc560 <FadeIn>
	//print(0,0,strWasteSpace);
	//print(1,0,strWasteMore);
	FillScreen(BLANKT+1);
    d51a:	82 e8       	ldi	r24, 0x82	; 130
    d51c:	0e 94 24 69 	call	0xd248	; 0xd248 <FillScreen>
	WaitVsync(1);
    d520:	81 e0       	ldi	r24, 0x01	; 1
    d522:	90 e0       	ldi	r25, 0x00	; 0
    d524:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
    d528:	c0 e0       	ldi	r28, 0x00	; 0
    d52a:	d0 e0       	ldi	r29, 0x00	; 0
	
	for(u8 i=0;i<sizeof(strEnd1)-1;i++){
		SetTile(6+i,4,(pgm_read_byte(&strEnd1[i])&127)+FONTSTART-51);
    d52c:	fe 01       	movw	r30, r28
    d52e:	ec 57       	subi	r30, 0x7C	; 124
    d530:	f8 45       	sbci	r31, 0x58	; 88
    d532:	e4 91       	lpm	r30, Z+
    d534:	4e 2f       	mov	r20, r30
    d536:	50 e0       	ldi	r21, 0x00	; 0
    d538:	4f 77       	andi	r20, 0x7F	; 127
    d53a:	50 70       	andi	r21, 0x00	; 0
    d53c:	41 5b       	subi	r20, 0xB1	; 177
    d53e:	5f 4f       	sbci	r21, 0xFF	; 255
    d540:	9e 01       	movw	r18, r28
    d542:	2a 5f       	subi	r18, 0xFA	; 250
    d544:	82 2f       	mov	r24, r18
    d546:	64 e0       	ldi	r22, 0x04	; 4
    d548:	0e 94 ca 58 	call	0xb194	; 0xb194 <SetTile>
	  WaitVsync(8);
    d54c:	88 e0       	ldi	r24, 0x08	; 8
    d54e:	90 e0       	ldi	r25, 0x00	; 0
    d550:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
    d554:	21 96       	adiw	r28, 0x01	; 1
	//print(0,0,strWasteSpace);
	//print(1,0,strWasteMore);
	FillScreen(BLANKT+1);
	WaitVsync(1);
	
	for(u8 i=0;i<sizeof(strEnd1)-1;i++){
    d556:	c4 31       	cpi	r28, 0x14	; 20
    d558:	d1 05       	cpc	r29, r1
    d55a:	41 f7       	brne	.-48     	; 0xd52c <GameEnding+0x1e>
    d55c:	c0 e0       	ldi	r28, 0x00	; 0
    d55e:	d0 e0       	ldi	r29, 0x00	; 0
		SetTile(6+i,4,(pgm_read_byte(&strEnd1[i])&127)+FONTSTART-51);
	  WaitVsync(8);
	}

	for(u8 i=0;i<sizeof(strEnd2)-1;i++){
		SetTile(4+i,5,(pgm_read_byte(&strEnd2[i])&127)+FONTSTART-51);
    d560:	fe 01       	movw	r30, r28
    d562:	e7 56       	subi	r30, 0x67	; 103
    d564:	f8 45       	sbci	r31, 0x58	; 88
    d566:	e4 91       	lpm	r30, Z+
    d568:	4e 2f       	mov	r20, r30
    d56a:	50 e0       	ldi	r21, 0x00	; 0
    d56c:	4f 77       	andi	r20, 0x7F	; 127
    d56e:	50 70       	andi	r21, 0x00	; 0
    d570:	41 5b       	subi	r20, 0xB1	; 177
    d572:	5f 4f       	sbci	r21, 0xFF	; 255
    d574:	9e 01       	movw	r18, r28
    d576:	2c 5f       	subi	r18, 0xFC	; 252
    d578:	82 2f       	mov	r24, r18
    d57a:	65 e0       	ldi	r22, 0x05	; 5
    d57c:	0e 94 ca 58 	call	0xb194	; 0xb194 <SetTile>
	  WaitVsync(8);
    d580:	88 e0       	ldi	r24, 0x08	; 8
    d582:	90 e0       	ldi	r25, 0x00	; 0
    d584:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
    d588:	21 96       	adiw	r28, 0x01	; 1
	for(u8 i=0;i<sizeof(strEnd1)-1;i++){
		SetTile(6+i,4,(pgm_read_byte(&strEnd1[i])&127)+FONTSTART-51);
	  WaitVsync(8);
	}

	for(u8 i=0;i<sizeof(strEnd2)-1;i++){
    d58a:	c8 31       	cpi	r28, 0x18	; 24
    d58c:	d1 05       	cpc	r29, r1
    d58e:	41 f7       	brne	.-48     	; 0xd560 <GameEnding+0x52>
    d590:	c0 e0       	ldi	r28, 0x00	; 0
    d592:	d0 e0       	ldi	r29, 0x00	; 0
		SetTile(4+i,5,(pgm_read_byte(&strEnd2[i])&127)+FONTSTART-51);
	  WaitVsync(8);
	}

	for(u8 i=0;i<sizeof(strEnd3)-1;i++){
		SetTile(8+i,6,(pgm_read_byte(&strEnd3[i])&127)+FONTSTART-51);
    d594:	fe 01       	movw	r30, r28
    d596:	ee 54       	subi	r30, 0x4E	; 78
    d598:	f8 45       	sbci	r31, 0x58	; 88
    d59a:	e4 91       	lpm	r30, Z+
    d59c:	4e 2f       	mov	r20, r30
    d59e:	50 e0       	ldi	r21, 0x00	; 0
    d5a0:	4f 77       	andi	r20, 0x7F	; 127
    d5a2:	50 70       	andi	r21, 0x00	; 0
    d5a4:	41 5b       	subi	r20, 0xB1	; 177
    d5a6:	5f 4f       	sbci	r21, 0xFF	; 255
    d5a8:	9e 01       	movw	r18, r28
    d5aa:	28 5f       	subi	r18, 0xF8	; 248
    d5ac:	82 2f       	mov	r24, r18
    d5ae:	66 e0       	ldi	r22, 0x06	; 6
    d5b0:	0e 94 ca 58 	call	0xb194	; 0xb194 <SetTile>
	  WaitVsync(8);
    d5b4:	88 e0       	ldi	r24, 0x08	; 8
    d5b6:	90 e0       	ldi	r25, 0x00	; 0
    d5b8:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
    d5bc:	21 96       	adiw	r28, 0x01	; 1
	for(u8 i=0;i<sizeof(strEnd2)-1;i++){
		SetTile(4+i,5,(pgm_read_byte(&strEnd2[i])&127)+FONTSTART-51);
	  WaitVsync(8);
	}

	for(u8 i=0;i<sizeof(strEnd3)-1;i++){
    d5be:	c1 31       	cpi	r28, 0x11	; 17
    d5c0:	d1 05       	cpc	r29, r1
    d5c2:	41 f7       	brne	.-48     	; 0xd594 <GameEnding+0x86>
    d5c4:	c0 e0       	ldi	r28, 0x00	; 0
    d5c6:	d0 e0       	ldi	r29, 0x00	; 0
		SetTile(8+i,6,(pgm_read_byte(&strEnd3[i])&127)+FONTSTART-51);
	  WaitVsync(8);
	}

	for(u8 i=0;i<sizeof(strEnd4)-1;i++){
		SetTile(4+i,8,(pgm_read_byte(&strEnd4[i])&127)+FONTSTART-51);
    d5c8:	fe 01       	movw	r30, r28
    d5ca:	ec 53       	subi	r30, 0x3C	; 60
    d5cc:	f8 45       	sbci	r31, 0x58	; 88
    d5ce:	e4 91       	lpm	r30, Z+
    d5d0:	4e 2f       	mov	r20, r30
    d5d2:	50 e0       	ldi	r21, 0x00	; 0
    d5d4:	4f 77       	andi	r20, 0x7F	; 127
    d5d6:	50 70       	andi	r21, 0x00	; 0
    d5d8:	41 5b       	subi	r20, 0xB1	; 177
    d5da:	5f 4f       	sbci	r21, 0xFF	; 255
    d5dc:	9e 01       	movw	r18, r28
    d5de:	2c 5f       	subi	r18, 0xFC	; 252
    d5e0:	82 2f       	mov	r24, r18
    d5e2:	68 e0       	ldi	r22, 0x08	; 8
    d5e4:	0e 94 ca 58 	call	0xb194	; 0xb194 <SetTile>
	  WaitVsync(8);
    d5e8:	88 e0       	ldi	r24, 0x08	; 8
    d5ea:	90 e0       	ldi	r25, 0x00	; 0
    d5ec:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
    d5f0:	21 96       	adiw	r28, 0x01	; 1
	for(u8 i=0;i<sizeof(strEnd3)-1;i++){
		SetTile(8+i,6,(pgm_read_byte(&strEnd3[i])&127)+FONTSTART-51);
	  WaitVsync(8);
	}

	for(u8 i=0;i<sizeof(strEnd4)-1;i++){
    d5f2:	c7 31       	cpi	r28, 0x17	; 23
    d5f4:	d1 05       	cpc	r29, r1
    d5f6:	41 f7       	brne	.-48     	; 0xd5c8 <GameEnding+0xba>
    d5f8:	c0 e0       	ldi	r28, 0x00	; 0
    d5fa:	d0 e0       	ldi	r29, 0x00	; 0
		SetTile(4+i,8,(pgm_read_byte(&strEnd4[i])&127)+FONTSTART-51);
	  WaitVsync(8);
	}

	for(u8 i=0;i<sizeof(strEnd5)-1;i++){
		SetTile(4+i,9,(pgm_read_byte(&strEnd5[i])&127)+FONTSTART-51);
    d5fc:	fe 01       	movw	r30, r28
    d5fe:	e4 52       	subi	r30, 0x24	; 36
    d600:	f8 45       	sbci	r31, 0x58	; 88
    d602:	e4 91       	lpm	r30, Z+
    d604:	4e 2f       	mov	r20, r30
    d606:	50 e0       	ldi	r21, 0x00	; 0
    d608:	4f 77       	andi	r20, 0x7F	; 127
    d60a:	50 70       	andi	r21, 0x00	; 0
    d60c:	41 5b       	subi	r20, 0xB1	; 177
    d60e:	5f 4f       	sbci	r21, 0xFF	; 255
    d610:	9e 01       	movw	r18, r28
    d612:	2c 5f       	subi	r18, 0xFC	; 252
    d614:	82 2f       	mov	r24, r18
    d616:	69 e0       	ldi	r22, 0x09	; 9
    d618:	0e 94 ca 58 	call	0xb194	; 0xb194 <SetTile>
	  WaitVsync(8);
    d61c:	88 e0       	ldi	r24, 0x08	; 8
    d61e:	90 e0       	ldi	r25, 0x00	; 0
    d620:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
    d624:	21 96       	adiw	r28, 0x01	; 1
	for(u8 i=0;i<sizeof(strEnd4)-1;i++){
		SetTile(4+i,8,(pgm_read_byte(&strEnd4[i])&127)+FONTSTART-51);
	  WaitVsync(8);
	}

	for(u8 i=0;i<sizeof(strEnd5)-1;i++){
    d626:	c8 31       	cpi	r28, 0x18	; 24
    d628:	d1 05       	cpc	r29, r1
    d62a:	41 f7       	brne	.-48     	; 0xd5fc <GameEnding+0xee>
    d62c:	c0 e0       	ldi	r28, 0x00	; 0
    d62e:	d0 e0       	ldi	r29, 0x00	; 0
		SetTile(4+i,9,(pgm_read_byte(&strEnd5[i])&127)+FONTSTART-51);
	  WaitVsync(8);
	}

	for(u8 i=0;i<sizeof(strEnd6)-1;i++){
		SetTile(3+i,12,(pgm_read_byte(&strEnd6[i])&127)+FONTSTART-51);
    d630:	fe 01       	movw	r30, r28
    d632:	eb 50       	subi	r30, 0x0B	; 11
    d634:	f8 45       	sbci	r31, 0x58	; 88
    d636:	e4 91       	lpm	r30, Z+
    d638:	4e 2f       	mov	r20, r30
    d63a:	50 e0       	ldi	r21, 0x00	; 0
    d63c:	4f 77       	andi	r20, 0x7F	; 127
    d63e:	50 70       	andi	r21, 0x00	; 0
    d640:	41 5b       	subi	r20, 0xB1	; 177
    d642:	5f 4f       	sbci	r21, 0xFF	; 255
    d644:	9e 01       	movw	r18, r28
    d646:	2d 5f       	subi	r18, 0xFD	; 253
    d648:	82 2f       	mov	r24, r18
    d64a:	6c e0       	ldi	r22, 0x0C	; 12
    d64c:	0e 94 ca 58 	call	0xb194	; 0xb194 <SetTile>
	  WaitVsync(8);
    d650:	88 e0       	ldi	r24, 0x08	; 8
    d652:	90 e0       	ldi	r25, 0x00	; 0
    d654:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
    d658:	21 96       	adiw	r28, 0x01	; 1
	for(u8 i=0;i<sizeof(strEnd5)-1;i++){
		SetTile(4+i,9,(pgm_read_byte(&strEnd5[i])&127)+FONTSTART-51);
	  WaitVsync(8);
	}

	for(u8 i=0;i<sizeof(strEnd6)-1;i++){
    d65a:	ca 31       	cpi	r28, 0x1A	; 26
    d65c:	d1 05       	cpc	r29, r1
    d65e:	41 f7       	brne	.-48     	; 0xd630 <GameEnding+0x122>
    d660:	c0 e0       	ldi	r28, 0x00	; 0
    d662:	d0 e0       	ldi	r29, 0x00	; 0
		SetTile(3+i,12,(pgm_read_byte(&strEnd6[i])&127)+FONTSTART-51);
	  WaitVsync(8);
	}

	for(u8 i=0;i<sizeof(strEnd7)-1;i++){
		SetTile(3+i,13,(pgm_read_byte(&strEnd7[i])&127)+FONTSTART-51);
    d664:	fe 01       	movw	r30, r28
    d666:	e0 5f       	subi	r30, 0xF0	; 240
    d668:	f7 45       	sbci	r31, 0x57	; 87
    d66a:	e4 91       	lpm	r30, Z+
    d66c:	4e 2f       	mov	r20, r30
    d66e:	50 e0       	ldi	r21, 0x00	; 0
    d670:	4f 77       	andi	r20, 0x7F	; 127
    d672:	50 70       	andi	r21, 0x00	; 0
    d674:	41 5b       	subi	r20, 0xB1	; 177
    d676:	5f 4f       	sbci	r21, 0xFF	; 255
    d678:	9e 01       	movw	r18, r28
    d67a:	2d 5f       	subi	r18, 0xFD	; 253
    d67c:	82 2f       	mov	r24, r18
    d67e:	6d e0       	ldi	r22, 0x0D	; 13
    d680:	0e 94 ca 58 	call	0xb194	; 0xb194 <SetTile>
	  WaitVsync(8);
    d684:	88 e0       	ldi	r24, 0x08	; 8
    d686:	90 e0       	ldi	r25, 0x00	; 0
    d688:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
    d68c:	21 96       	adiw	r28, 0x01	; 1
	for(u8 i=0;i<sizeof(strEnd6)-1;i++){
		SetTile(3+i,12,(pgm_read_byte(&strEnd6[i])&127)+FONTSTART-51);
	  WaitVsync(8);
	}

	for(u8 i=0;i<sizeof(strEnd7)-1;i++){
    d68e:	ca 31       	cpi	r28, 0x1A	; 26
    d690:	d1 05       	cpc	r29, r1
    d692:	41 f7       	brne	.-48     	; 0xd664 <GameEnding+0x156>
		SetTile(3+i,13,(pgm_read_byte(&strEnd7[i])&127)+FONTSTART-51);
	  WaitVsync(8);
	}

	WaitVsync(60);
    d694:	8c e3       	ldi	r24, 0x3C	; 60
    d696:	90 e0       	ldi	r25, 0x00	; 0
    d698:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
    d69c:	c0 e0       	ldi	r28, 0x00	; 0
    d69e:	d0 e0       	ldi	r29, 0x00	; 0

	for(u8 i=0;i<sizeof(strEnd8)-1;i++){
		SetTile(3+i,15,(pgm_read_byte(&strEnd8[i])&127)+FONTSTART-51);
    d6a0:	fe 01       	movw	r30, r28
    d6a2:	e5 5d       	subi	r30, 0xD5	; 213
    d6a4:	f7 45       	sbci	r31, 0x57	; 87
    d6a6:	e4 91       	lpm	r30, Z+
    d6a8:	4e 2f       	mov	r20, r30
    d6aa:	50 e0       	ldi	r21, 0x00	; 0
    d6ac:	4f 77       	andi	r20, 0x7F	; 127
    d6ae:	50 70       	andi	r21, 0x00	; 0
    d6b0:	41 5b       	subi	r20, 0xB1	; 177
    d6b2:	5f 4f       	sbci	r21, 0xFF	; 255
    d6b4:	9e 01       	movw	r18, r28
    d6b6:	2d 5f       	subi	r18, 0xFD	; 253
    d6b8:	82 2f       	mov	r24, r18
    d6ba:	6f e0       	ldi	r22, 0x0F	; 15
    d6bc:	0e 94 ca 58 	call	0xb194	; 0xb194 <SetTile>
	  WaitVsync(8);
    d6c0:	88 e0       	ldi	r24, 0x08	; 8
    d6c2:	90 e0       	ldi	r25, 0x00	; 0
    d6c4:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
    d6c8:	21 96       	adiw	r28, 0x01	; 1
	  WaitVsync(8);
	}

	WaitVsync(60);

	for(u8 i=0;i<sizeof(strEnd8)-1;i++){
    d6ca:	ca 31       	cpi	r28, 0x1A	; 26
    d6cc:	d1 05       	cpc	r29, r1
    d6ce:	41 f7       	brne	.-48     	; 0xd6a0 <GameEnding+0x192>
    d6d0:	c0 e0       	ldi	r28, 0x00	; 0
    d6d2:	d0 e0       	ldi	r29, 0x00	; 0
		SetTile(3+i,15,(pgm_read_byte(&strEnd8[i])&127)+FONTSTART-51);
	  WaitVsync(8);
	}

	for(u8 i=0;i<sizeof(strEnd9)-1;i++){
		SetTile(1+i,16,(pgm_read_byte(&strEnd9[i])&127)+FONTSTART-51);
    d6d4:	fe 01       	movw	r30, r28
    d6d6:	ea 5b       	subi	r30, 0xBA	; 186
    d6d8:	f7 45       	sbci	r31, 0x57	; 87
    d6da:	e4 91       	lpm	r30, Z+
    d6dc:	4e 2f       	mov	r20, r30
    d6de:	50 e0       	ldi	r21, 0x00	; 0
    d6e0:	4f 77       	andi	r20, 0x7F	; 127
    d6e2:	50 70       	andi	r21, 0x00	; 0
    d6e4:	41 5b       	subi	r20, 0xB1	; 177
    d6e6:	5f 4f       	sbci	r21, 0xFF	; 255
    d6e8:	9e 01       	movw	r18, r28
    d6ea:	2f 5f       	subi	r18, 0xFF	; 255
    d6ec:	82 2f       	mov	r24, r18
    d6ee:	60 e1       	ldi	r22, 0x10	; 16
    d6f0:	0e 94 ca 58 	call	0xb194	; 0xb194 <SetTile>
	  WaitVsync(8);
    d6f4:	88 e0       	ldi	r24, 0x08	; 8
    d6f6:	90 e0       	ldi	r25, 0x00	; 0
    d6f8:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
    d6fc:	21 96       	adiw	r28, 0x01	; 1
	for(u8 i=0;i<sizeof(strEnd8)-1;i++){
		SetTile(3+i,15,(pgm_read_byte(&strEnd8[i])&127)+FONTSTART-51);
	  WaitVsync(8);
	}

	for(u8 i=0;i<sizeof(strEnd9)-1;i++){
    d6fe:	cd 31       	cpi	r28, 0x1D	; 29
    d700:	d1 05       	cpc	r29, r1
    d702:	41 f7       	brne	.-48     	; 0xd6d4 <GameEnding+0x1c6>
    d704:	c0 e0       	ldi	r28, 0x00	; 0
    d706:	d0 e0       	ldi	r29, 0x00	; 0
		SetTile(1+i,16,(pgm_read_byte(&strEnd9[i])&127)+FONTSTART-51);
	  WaitVsync(8);
	}

	for(u8 i=0;i<sizeof(strEnd10)-1;i++){
		SetTile(3+i,18,(pgm_read_byte(&strEnd10[i])&127)+FONTSTART-51);
    d708:	fe 01       	movw	r30, r28
    d70a:	ec 59       	subi	r30, 0x9C	; 156
    d70c:	f7 45       	sbci	r31, 0x57	; 87
    d70e:	e4 91       	lpm	r30, Z+
    d710:	4e 2f       	mov	r20, r30
    d712:	50 e0       	ldi	r21, 0x00	; 0
    d714:	4f 77       	andi	r20, 0x7F	; 127
    d716:	50 70       	andi	r21, 0x00	; 0
    d718:	41 5b       	subi	r20, 0xB1	; 177
    d71a:	5f 4f       	sbci	r21, 0xFF	; 255
    d71c:	9e 01       	movw	r18, r28
    d71e:	2d 5f       	subi	r18, 0xFD	; 253
    d720:	82 2f       	mov	r24, r18
    d722:	62 e1       	ldi	r22, 0x12	; 18
    d724:	0e 94 ca 58 	call	0xb194	; 0xb194 <SetTile>
	  WaitVsync(8);
    d728:	88 e0       	ldi	r24, 0x08	; 8
    d72a:	90 e0       	ldi	r25, 0x00	; 0
    d72c:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
    d730:	21 96       	adiw	r28, 0x01	; 1
	for(u8 i=0;i<sizeof(strEnd9)-1;i++){
		SetTile(1+i,16,(pgm_read_byte(&strEnd9[i])&127)+FONTSTART-51);
	  WaitVsync(8);
	}

	for(u8 i=0;i<sizeof(strEnd10)-1;i++){
    d732:	c9 31       	cpi	r28, 0x19	; 25
    d734:	d1 05       	cpc	r29, r1
    d736:	41 f7       	brne	.-48     	; 0xd708 <GameEnding+0x1fa>
    d738:	c0 e0       	ldi	r28, 0x00	; 0
    d73a:	d0 e0       	ldi	r29, 0x00	; 0
		SetTile(3+i,18,(pgm_read_byte(&strEnd10[i])&127)+FONTSTART-51);
	  WaitVsync(8);
	}

	for(u8 i=0;i<sizeof(strEnd11)-1;i++){
		SetTile(3+i,19,(pgm_read_byte(&strEnd11[i])&127)+FONTSTART-51);
    d73c:	fe 01       	movw	r30, r28
    d73e:	e2 58       	subi	r30, 0x82	; 130
    d740:	f7 45       	sbci	r31, 0x57	; 87
    d742:	e4 91       	lpm	r30, Z+
    d744:	4e 2f       	mov	r20, r30
    d746:	50 e0       	ldi	r21, 0x00	; 0
    d748:	4f 77       	andi	r20, 0x7F	; 127
    d74a:	50 70       	andi	r21, 0x00	; 0
    d74c:	41 5b       	subi	r20, 0xB1	; 177
    d74e:	5f 4f       	sbci	r21, 0xFF	; 255
    d750:	9e 01       	movw	r18, r28
    d752:	2d 5f       	subi	r18, 0xFD	; 253
    d754:	82 2f       	mov	r24, r18
    d756:	63 e1       	ldi	r22, 0x13	; 19
    d758:	0e 94 ca 58 	call	0xb194	; 0xb194 <SetTile>
	  WaitVsync(8);
    d75c:	88 e0       	ldi	r24, 0x08	; 8
    d75e:	90 e0       	ldi	r25, 0x00	; 0
    d760:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
    d764:	21 96       	adiw	r28, 0x01	; 1
	for(u8 i=0;i<sizeof(strEnd10)-1;i++){
		SetTile(3+i,18,(pgm_read_byte(&strEnd10[i])&127)+FONTSTART-51);
	  WaitVsync(8);
	}

	for(u8 i=0;i<sizeof(strEnd11)-1;i++){
    d766:	c9 31       	cpi	r28, 0x19	; 25
    d768:	d1 05       	cpc	r29, r1
    d76a:	41 f7       	brne	.-48     	; 0xd73c <GameEnding+0x22e>
		SetTile(3+i,19,(pgm_read_byte(&strEnd11[i])&127)+FONTSTART-51);
	  WaitVsync(8);
	}

	print(4,24,strEnd12);
    d76c:	84 e0       	ldi	r24, 0x04	; 4
    d76e:	68 e1       	ldi	r22, 0x18	; 24
    d770:	48 e9       	ldi	r20, 0x98	; 152
    d772:	58 ea       	ldi	r21, 0xA8	; 168
    d774:	0e 94 69 6a 	call	0xd4d2	; 0xd4d2 <print>
	//printb(12,25,20);
	//printb(14,25,10);

	

	WaitVsync(255);
    d778:	8f ef       	ldi	r24, 0xFF	; 255
    d77a:	90 e0       	ldi	r25, 0x00	; 0
    d77c:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
#endif
}
    d780:	df 91       	pop	r29
    d782:	cf 91       	pop	r28
    d784:	08 95       	ret

0000d786 <printi>:
	if(!c){SetTile(x,y,BLANKT+1);}else{SetTile(x,y,FONTSTART+4+c);}
}



void printi(u8 x,u8 y, int val){
    d786:	ff 92       	push	r15
    d788:	0f 93       	push	r16
    d78a:	1f 93       	push	r17
    d78c:	cf 93       	push	r28
    d78e:	df 93       	push	r29
    d790:	08 2f       	mov	r16, r24
    d792:	f6 2e       	mov	r15, r22
    d794:	ea 01       	movw	r28, r20
    d796:	83 e0       	ldi	r24, 0x03	; 3
    d798:	48 3e       	cpi	r20, 0xE8	; 232
    d79a:	58 07       	cpc	r21, r24
    d79c:	14 f0       	brlt	.+4      	; 0xd7a2 <printi+0x1c>
    d79e:	c7 ee       	ldi	r28, 0xE7	; 231
    d7a0:	d3 e0       	ldi	r29, 0x03	; 3
    d7a2:	10 e0       	ldi	r17, 0x00	; 0

	unsigned char c,i;

	for(i=0;i<4;i++){
		c=val%10;
		if(val>0 || i==0){
    d7a4:	1c 16       	cp	r1, r28
    d7a6:	1d 06       	cpc	r1, r29
    d7a8:	14 f0       	brlt	.+4      	; 0xd7ae <printi+0x28>
    d7aa:	11 23       	and	r17, r17
    d7ac:	61 f4       	brne	.+24     	; 0xd7c6 <printi+0x40>
			SetTile(x--,y,c+FONTSTART+4);
    d7ae:	ce 01       	movw	r24, r28
    d7b0:	6a e0       	ldi	r22, 0x0A	; 10
    d7b2:	70 e0       	ldi	r23, 0x00	; 0
    d7b4:	0e 94 23 77 	call	0xee46	; 0xee46 <__divmodhi4>
    d7b8:	48 2f       	mov	r20, r24
    d7ba:	50 e0       	ldi	r21, 0x00	; 0
    d7bc:	4a 57       	subi	r20, 0x7A	; 122
    d7be:	5f 4f       	sbci	r21, 0xFF	; 255
    d7c0:	80 2f       	mov	r24, r16
    d7c2:	6f 2d       	mov	r22, r15
    d7c4:	04 c0       	rjmp	.+8      	; 0xd7ce <printi+0x48>
		}else{
		//	if(zeropad){
		//		SetFont(x--,y,CHAR_ZERO+RAM_TILES_COUNT);
		//	}else{
				SetTile(x--,y,FONTSTART);
    d7c6:	80 2f       	mov	r24, r16
    d7c8:	6f 2d       	mov	r22, r15
    d7ca:	42 e8       	ldi	r20, 0x82	; 130
    d7cc:	50 e0       	ldi	r21, 0x00	; 0
    d7ce:	0e 94 ca 58 	call	0xb194	; 0xb194 <SetTile>
	 if(val > 999)
		val = 999;

	unsigned char c,i;

	for(i=0;i<4;i++){
    d7d2:	1f 5f       	subi	r17, 0xFF	; 255
    d7d4:	01 50       	subi	r16, 0x01	; 1
    d7d6:	14 30       	cpi	r17, 0x04	; 4
    d7d8:	39 f0       	breq	.+14     	; 0xd7e8 <printi+0x62>
		//		SetFont(x--,y,CHAR_ZERO+RAM_TILES_COUNT);
		//	}else{
				SetTile(x--,y,FONTSTART);
		//	}
		}
		val=val/10;
    d7da:	ce 01       	movw	r24, r28
    d7dc:	6a e0       	ldi	r22, 0x0A	; 10
    d7de:	70 e0       	ldi	r23, 0x00	; 0
    d7e0:	0e 94 23 77 	call	0xee46	; 0xee46 <__divmodhi4>
    d7e4:	eb 01       	movw	r28, r22
    d7e6:	de cf       	rjmp	.-68     	; 0xd7a4 <printi+0x1e>
	}

}
    d7e8:	cd b7       	in	r28, 0x3d	; 61
    d7ea:	de b7       	in	r29, 0x3e	; 62
    d7ec:	e5 e0       	ldi	r30, 0x05	; 5
    d7ee:	0c 94 5f 77 	jmp	0xeebe	; 0xeebe <__epilogue_restores__+0x1a>

0000d7f2 <printb>:

void SetVram(u8 x, u8 y, u8 t){//direct vram, bypass RAM_TILES_COUNT
	vram[(y*30)+x] = t;
}

void printb(u8 x,u8 y, u8 val){
    d7f2:	ff 92       	push	r15
    d7f4:	0f 93       	push	r16
    d7f6:	1f 93       	push	r17
    d7f8:	08 2f       	mov	r16, r24
    d7fa:	f6 2e       	mov	r15, r22
    d7fc:	14 2f       	mov	r17, r20
	u8 c = val%10;
	SetTile(x+1,y,FONTSTART+4+c);
    d7fe:	84 2f       	mov	r24, r20
    d800:	6a e0       	ldi	r22, 0x0A	; 10
    d802:	0e 94 03 77 	call	0xee06	; 0xee06 <__udivmodqi4>
    d806:	49 2f       	mov	r20, r25
    d808:	50 e0       	ldi	r21, 0x00	; 0
    d80a:	4a 57       	subi	r20, 0x7A	; 122
    d80c:	5f 4f       	sbci	r21, 0xFF	; 255
    d80e:	80 2f       	mov	r24, r16
    d810:	8f 5f       	subi	r24, 0xFF	; 255
    d812:	6f 2d       	mov	r22, r15
    d814:	0e 94 ca 58 	call	0xb194	; 0xb194 <SetTile>
	
	c=(val/10);
    d818:	81 2f       	mov	r24, r17
    d81a:	6a e0       	ldi	r22, 0x0A	; 10
    d81c:	0e 94 03 77 	call	0xee06	; 0xee06 <__udivmodqi4>
	if(!c){SetTile(x,y,BLANKT+1);}else{SetTile(x,y,FONTSTART+4+c);}
    d820:	88 23       	and	r24, r24
    d822:	29 f4       	brne	.+10     	; 0xd82e <printb+0x3c>
    d824:	80 2f       	mov	r24, r16
    d826:	6f 2d       	mov	r22, r15
    d828:	42 e8       	ldi	r20, 0x82	; 130
    d82a:	50 e0       	ldi	r21, 0x00	; 0
    d82c:	06 c0       	rjmp	.+12     	; 0xd83a <printb+0x48>
    d82e:	48 2f       	mov	r20, r24
    d830:	50 e0       	ldi	r21, 0x00	; 0
    d832:	4a 57       	subi	r20, 0x7A	; 122
    d834:	5f 4f       	sbci	r21, 0xFF	; 255
    d836:	80 2f       	mov	r24, r16
    d838:	6f 2d       	mov	r22, r15
    d83a:	0e 94 ca 58 	call	0xb194	; 0xb194 <SetTile>
}
    d83e:	1f 91       	pop	r17
    d840:	0f 91       	pop	r16
    d842:	ff 90       	pop	r15
    d844:	08 95       	ret

0000d846 <GameIntro>:
	for(u8 i=0;i<64;i++){ram_tiles[off++] = c;}
}

const char strIntro1[] PROGMEM = "UZEBOX";

void GameIntro(){
    d846:	af 92       	push	r10
    d848:	cf 92       	push	r12
    d84a:	ef 92       	push	r14
    d84c:	0f 93       	push	r16
    d84e:	1f 93       	push	r17
#ifndef NOINTRO
	FillScreen(FONTSTART-1);//ColorSection(0,0,29,27,255,29);
    d850:	81 e8       	ldi	r24, 0x81	; 129
    d852:	0e 94 24 69 	call	0xd248	; 0xd248 <FillScreen>
	FadeIn(2,false);
    d856:	82 e0       	ldi	r24, 0x02	; 2
    d858:	60 e0       	ldi	r22, 0x00	; 0
    d85a:	0e 94 b0 62 	call	0xc560	; 0xc560 <FadeIn>
    d85e:	18 e0       	ldi	r17, 0x08	; 8
	
	for(u8 i=0;i<3;i++){
		printramtilesfancy(13,14,strIntro1,22,0xFF,8-i,0xC0,0);WaitVsync(10);
    d860:	8d e0       	ldi	r24, 0x0D	; 13
    d862:	6e e0       	ldi	r22, 0x0E	; 14
    d864:	4d e7       	ldi	r20, 0x7D	; 125
    d866:	57 ea       	ldi	r21, 0xA7	; 167
    d868:	26 e1       	ldi	r18, 0x16	; 22
    d86a:	0f ef       	ldi	r16, 0xFF	; 255
    d86c:	e1 2e       	mov	r14, r17
    d86e:	f0 ec       	ldi	r31, 0xC0	; 192
    d870:	cf 2e       	mov	r12, r31
    d872:	aa 24       	eor	r10, r10
    d874:	0e 94 58 64 	call	0xc8b0	; 0xc8b0 <printramtilesfancy>
    d878:	8a e0       	ldi	r24, 0x0A	; 10
    d87a:	90 e0       	ldi	r25, 0x00	; 0
    d87c:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
    d880:	11 50       	subi	r17, 0x01	; 1
void GameIntro(){
#ifndef NOINTRO
	FillScreen(FONTSTART-1);//ColorSection(0,0,29,27,255,29);
	FadeIn(2,false);
	
	for(u8 i=0;i<3;i++){
    d882:	15 30       	cpi	r17, 0x05	; 5
    d884:	69 f7       	brne	.-38     	; 0xd860 <GameIntro+0x1a>
		printramtilesfancy(13,14,strIntro1,22,0xFF,8-i,0xC0,0);WaitVsync(10);
	}
 
	
	WaitVsync(45);
    d886:	8d e2       	ldi	r24, 0x2D	; 45
    d888:	90 e0       	ldi	r25, 0x00	; 0
    d88a:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
    d88e:	14 e0       	ldi	r17, 0x04	; 4

	for(u8 i=4;i<10;i++){
		printramtilesfancy(13,14,strIntro1,22,0xFF,8-i,0xC0,0);WaitVsync(10);
    d890:	8d e0       	ldi	r24, 0x0D	; 13
    d892:	6e e0       	ldi	r22, 0x0E	; 14
    d894:	4d e7       	ldi	r20, 0x7D	; 125
    d896:	57 ea       	ldi	r21, 0xA7	; 167
    d898:	26 e1       	ldi	r18, 0x16	; 22
    d89a:	0f ef       	ldi	r16, 0xFF	; 255
    d89c:	e1 2e       	mov	r14, r17
    d89e:	e0 ec       	ldi	r30, 0xC0	; 192
    d8a0:	ce 2e       	mov	r12, r30
    d8a2:	aa 24       	eor	r10, r10
    d8a4:	0e 94 58 64 	call	0xc8b0	; 0xc8b0 <printramtilesfancy>
    d8a8:	8a e0       	ldi	r24, 0x0A	; 10
    d8aa:	90 e0       	ldi	r25, 0x00	; 0
    d8ac:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
    d8b0:	11 50       	subi	r17, 0x01	; 1
	}
 
	
	WaitVsync(45);

	for(u8 i=4;i<10;i++){
    d8b2:	1e 3f       	cpi	r17, 0xFE	; 254
    d8b4:	69 f7       	brne	.-38     	; 0xd890 <GameIntro+0x4a>
		printramtilesfancy(13,14,strIntro1,22,0xFF,8-i,0xC0,0);WaitVsync(10);
	}

	
	WaitVsync(60);
    d8b6:	8c e3       	ldi	r24, 0x3C	; 60
    d8b8:	90 e0       	ldi	r25, 0x00	; 0
    d8ba:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
	FadeOut(3,true);
    d8be:	83 e0       	ldi	r24, 0x03	; 3
    d8c0:	61 e0       	ldi	r22, 0x01	; 1
    d8c2:	0e 94 bf 62 	call	0xc57e	; 0xc57e <FadeOut>
	FadeIn(1,false);
    d8c6:	81 e0       	ldi	r24, 0x01	; 1
    d8c8:	60 e0       	ldi	r22, 0x00	; 0
    d8ca:	0e 94 b0 62 	call	0xc560	; 0xc560 <FadeIn>
	  WaitVsync(1);//finish in clumps of 3
	}
	//WaitVsync(20);
	*/
#endif
}
    d8ce:	1f 91       	pop	r17
    d8d0:	0f 91       	pop	r16
    d8d2:	ef 90       	pop	r14
    d8d4:	cf 90       	pop	r12
    d8d6:	af 90       	pop	r10
    d8d8:	08 95       	ret

0000d8da <EngineInit>:
#include "render.h"
#include "demo.h"


void EngineInit(){
	ClearVram();
    d8da:	0e 94 c0 58 	call	0xb180	; 0xb180 <ClearVram>
	demonum = 0;
    d8de:	10 92 72 0d 	sts	0x0D72, r1
	gamestate = 0;
    d8e2:	10 92 83 0d 	sts	0x0D83, r1
	guistate = GMAINMENU;
    d8e6:	81 e0       	ldi	r24, 0x01	; 1
    d8e8:	80 93 91 0d 	sts	0x0D91, r24
	guijuststarted = true;
    d8ec:	80 93 6d 0d 	sts	0x0D6D, r24
	tileset = 0;
    d8f0:	10 92 86 0d 	sts	0x0D86, r1
	tracknum = 1;
    d8f4:	80 93 82 0d 	sts	0x0D82, r24
	numlevels = NUMLEVELS;
    d8f8:	82 e3       	ldi	r24, 0x32	; 50
    d8fa:	80 93 88 0d 	sts	0x0D88, r24
	InitMusicPlayer(patches);
    d8fe:	89 ef       	ldi	r24, 0xF9	; 249
    d900:	96 e6       	ldi	r25, 0x66	; 102
    d902:	0e 94 b3 5a 	call	0xb566	; 0xb566 <InitMusicPlayer>
	SetSpritesTileTable(GameSprites);
    d906:	83 e2       	ldi	r24, 0x23	; 35
    d908:	97 e3       	ldi	r25, 0x37	; 55
    d90a:	0e 94 bb 58 	call	0xb176	; 0xb176 <SetSpritesTileTable>
	SetTileTable(GameTiles);
    d90e:	84 ee       	ldi	r24, 0xE4	; 228
    d910:	90 e0       	ldi	r25, 0x00	; 0
    d912:	0e 94 d8 58 	call	0xb1b0	; 0xb1b0 <SetTileTable>
	SetMasterVolume(192);
    d916:	80 ec       	ldi	r24, 0xC0	; 192
    d918:	0e 94 29 5b 	call	0xb652	; 0xb652 <SetMasterVolume>
	GameIntro();
    d91c:	0e 94 23 6c 	call	0xd846	; 0xd846 <GameIntro>
}
    d920:	08 95       	ret

0000d922 <SetLevelCompleted>:
	}
	return false;

}

void SetLevelCompleted(u8 map){
    d922:	ef 92       	push	r14
    d924:	ff 92       	push	r15
    d926:	1f 93       	push	r17
    d928:	df 93       	push	r29
    d92a:	cf 93       	push	r28
    d92c:	cd b7       	in	r28, 0x3d	; 61
    d92e:	de b7       	in	r29, 0x3e	; 62
    d930:	a0 97       	sbiw	r28, 0x20	; 32
    d932:	0f b6       	in	r0, 0x3f	; 63
    d934:	f8 94       	cli
    d936:	de bf       	out	0x3e, r29	; 62
    d938:	0f be       	out	0x3f, r0	; 63
    d93a:	cd bf       	out	0x3d, r28	; 61
    d93c:	18 2f       	mov	r17, r24

	struct EepromBlockStruct ebs;
	ebs.id = SOKOBAN_WORLD_ID;
    d93e:	8e e3       	ldi	r24, 0x3E	; 62
    d940:	90 e0       	ldi	r25, 0x00	; 0
    d942:	9a 83       	std	Y+2, r25	; 0x02
    d944:	89 83       	std	Y+1, r24	; 0x01

	if(EepromReadBlock(ebs.id, &ebs) != 0)//no save game
    d946:	7e 01       	movw	r14, r28
    d948:	08 94       	sec
    d94a:	e1 1c       	adc	r14, r1
    d94c:	f1 1c       	adc	r15, r1
    d94e:	b7 01       	movw	r22, r14
    d950:	0e 94 70 59 	call	0xb2e0	; 0xb2e0 <EepromReadBlock>
    d954:	88 23       	and	r24, r24
    d956:	19 f0       	breq	.+6      	; 0xd95e <SetLevelCompleted+0x3c>
		EepromWriteBlock(&ebs);//make a new one then
    d958:	c7 01       	movw	r24, r14
    d95a:	0e 94 c6 59 	call	0xb38c	; 0xb38c <EepromWriteBlock>

		u8 t = (u8)(ebs.data[(map/8)+EPISODE_SAVE_OFFSET]);		
		
	  t |= (1<<(map%8));
    d95e:	81 2f       	mov	r24, r17
    d960:	87 70       	andi	r24, 0x07	; 7
    d962:	21 e0       	ldi	r18, 0x01	; 1
    d964:	30 e0       	ldi	r19, 0x00	; 0
    d966:	02 c0       	rjmp	.+4      	; 0xd96c <SetLevelCompleted+0x4a>
    d968:	22 0f       	add	r18, r18
    d96a:	33 1f       	adc	r19, r19
    d96c:	8a 95       	dec	r24
    d96e:	e2 f7       	brpl	.-8      	; 0xd968 <SetLevelCompleted+0x46>
    d970:	fe 01       	movw	r30, r28
    d972:	33 96       	adiw	r30, 0x03	; 3
	ebs.id = SOKOBAN_WORLD_ID;

	if(EepromReadBlock(ebs.id, &ebs) != 0)//no save game
		EepromWriteBlock(&ebs);//make a new one then

		u8 t = (u8)(ebs.data[(map/8)+EPISODE_SAVE_OFFSET]);		
    d974:	16 95       	lsr	r17
    d976:	16 95       	lsr	r17
    d978:	16 95       	lsr	r17
		
	  t |= (1<<(map%8));
    d97a:	e1 0f       	add	r30, r17
    d97c:	f1 1d       	adc	r31, r1
    d97e:	80 81       	ld	r24, Z
    d980:	82 2b       	or	r24, r18
	  
	  ebs.data[(map/8)+EPISODE_SAVE_OFFSET] = t;
    d982:	80 83       	st	Z, r24
	  
		EepromWriteBlock(&ebs);
    d984:	ce 01       	movw	r24, r28
    d986:	01 96       	adiw	r24, 0x01	; 1
    d988:	0e 94 c6 59 	call	0xb38c	; 0xb38c <EepromWriteBlock>
	
}
    d98c:	a0 96       	adiw	r28, 0x20	; 32
    d98e:	0f b6       	in	r0, 0x3f	; 63
    d990:	f8 94       	cli
    d992:	de bf       	out	0x3e, r29	; 62
    d994:	0f be       	out	0x3f, r0	; 63
    d996:	cd bf       	out	0x3d, r28	; 61
    d998:	cf 91       	pop	r28
    d99a:	df 91       	pop	r29
    d99c:	1f 91       	pop	r17
    d99e:	ff 90       	pop	r15
    d9a0:	ef 90       	pop	r14
    d9a2:	08 95       	ret

0000d9a4 <SetMetLevelPar>:

void SetMetLevelPar(u8 map){
	//To save some code space, well simply store this like level complete progress.
	//We will offset the data by 56 levels(7 bytes) from the start of level completed progress.
	//Maximum 56 levels per pack, can store save progress for 2 episodes in one block
	SetLevelCompleted(map+56);
    d9a4:	88 5c       	subi	r24, 0xC8	; 200
    d9a6:	0e 94 91 6c 	call	0xd922	; 0xd922 <SetLevelCompleted>
}
    d9aa:	08 95       	ret

0000d9ac <IsLevelCompleted>:
	}
	WaitVsync(1);
}
*/

bool IsLevelCompleted(u8 map){
    d9ac:	a0 e2       	ldi	r26, 0x20	; 32
    d9ae:	b0 e0       	ldi	r27, 0x00	; 0
    d9b0:	ec ed       	ldi	r30, 0xDC	; 220
    d9b2:	fc e6       	ldi	r31, 0x6C	; 108
    d9b4:	0c 94 45 77 	jmp	0xee8a	; 0xee8a <__prologue_saves__+0x1e>
    d9b8:	18 2f       	mov	r17, r24
	struct EepromBlockStruct ebs;
	ebs.id = SOKOBAN_WORLD_ID;
    d9ba:	8e e3       	ldi	r24, 0x3E	; 62
    d9bc:	90 e0       	ldi	r25, 0x00	; 0
    d9be:	9a 83       	std	Y+2, r25	; 0x02
    d9c0:	89 83       	std	Y+1, r24	; 0x01

	if(EepromReadBlock(ebs.id, &ebs) == 0)
    d9c2:	be 01       	movw	r22, r28
    d9c4:	6f 5f       	subi	r22, 0xFF	; 255
    d9c6:	7f 4f       	sbci	r23, 0xFF	; 255
    d9c8:	0e 94 70 59 	call	0xb2e0	; 0xb2e0 <EepromReadBlock>
    d9cc:	fe 01       	movw	r30, r28
    d9ce:	33 96       	adiw	r30, 0x03	; 3
    d9d0:	88 23       	and	r24, r24
    d9d2:	89 f4       	brne	.+34     	; 0xd9f6 <IsLevelCompleted+0x4a>
		return (ebs.data[(map/8)+EPISODE_SAVE_OFFSET]>>(map%8))&1;//decode 1 bit from eeprom
    d9d4:	81 2f       	mov	r24, r17
    d9d6:	86 95       	lsr	r24
    d9d8:	86 95       	lsr	r24
    d9da:	86 95       	lsr	r24
    d9dc:	e8 0f       	add	r30, r24
    d9de:	f1 1d       	adc	r31, r1
    d9e0:	80 81       	ld	r24, Z
    d9e2:	90 e0       	ldi	r25, 0x00	; 0
    d9e4:	17 70       	andi	r17, 0x07	; 7
    d9e6:	01 2e       	mov	r0, r17
    d9e8:	02 c0       	rjmp	.+4      	; 0xd9ee <IsLevelCompleted+0x42>
    d9ea:	95 95       	asr	r25
    d9ec:	87 95       	ror	r24
    d9ee:	0a 94       	dec	r0
    d9f0:	e2 f7       	brpl	.-8      	; 0xd9ea <IsLevelCompleted+0x3e>
    d9f2:	81 70       	andi	r24, 0x01	; 1
    d9f4:	0b c0       	rjmp	.+22     	; 0xda0c <IsLevelCompleted+0x60>
	else{
		for(u8 i=0;i<30;i++)
    d9f6:	ce 01       	movw	r24, r28
    d9f8:	81 96       	adiw	r24, 0x21	; 33
		  ebs.data[i] = 0;//make sure the data here is formatted
    d9fa:	11 92       	st	Z+, r1
	ebs.id = SOKOBAN_WORLD_ID;

	if(EepromReadBlock(ebs.id, &ebs) == 0)
		return (ebs.data[(map/8)+EPISODE_SAVE_OFFSET]>>(map%8))&1;//decode 1 bit from eeprom
	else{
		for(u8 i=0;i<30;i++)
    d9fc:	e8 17       	cp	r30, r24
    d9fe:	f9 07       	cpc	r31, r25
    da00:	e1 f7       	brne	.-8      	; 0xd9fa <IsLevelCompleted+0x4e>
		  ebs.data[i] = 0;//make sure the data here is formatted

	  EepromWriteBlock(&ebs);//make a new one then
    da02:	ce 01       	movw	r24, r28
    da04:	01 96       	adiw	r24, 0x01	; 1
    da06:	0e 94 c6 59 	call	0xb38c	; 0xb38c <EepromWriteBlock>
    da0a:	80 e0       	ldi	r24, 0x00	; 0
	}
	return false;

}
    da0c:	a0 96       	adiw	r28, 0x20	; 32
    da0e:	e3 e0       	ldi	r30, 0x03	; 3
    da10:	0c 94 61 77 	jmp	0xeec2	; 0xeec2 <__epilogue_restores__+0x1e>

0000da14 <AllLevelsCompleted>:

bool HasMetLevelPar(u8 map){//Same concept as above
	return IsLevelCompleted(map+56);
}

bool AllLevelsCompleted(){
    da14:	1f 93       	push	r17
    da16:	10 e0       	ldi	r17, 0x00	; 0
	for(u8 i=0;i<NUMLEVELS;i++){
		if(!IsLevelCompleted(i))
    da18:	81 2f       	mov	r24, r17
    da1a:	0e 94 d6 6c 	call	0xd9ac	; 0xd9ac <IsLevelCompleted>
    da1e:	88 23       	and	r24, r24
    da20:	21 f0       	breq	.+8      	; 0xda2a <AllLevelsCompleted+0x16>
bool HasMetLevelPar(u8 map){//Same concept as above
	return IsLevelCompleted(map+56);
}

bool AllLevelsCompleted(){
	for(u8 i=0;i<NUMLEVELS;i++){
    da22:	1f 5f       	subi	r17, 0xFF	; 255
    da24:	12 33       	cpi	r17, 0x32	; 50
    da26:	c1 f7       	brne	.-16     	; 0xda18 <AllLevelsCompleted+0x4>
    da28:	81 e0       	ldi	r24, 0x01	; 1
		if(!IsLevelCompleted(i))
		  return false;
	}
	return true;
}
    da2a:	1f 91       	pop	r17
    da2c:	08 95       	ret

0000da2e <HasMetLevelPar>:
	//Maximum 56 levels per pack, can store save progress for 2 episodes in one block
	SetLevelCompleted(map+56);
}

bool HasMetLevelPar(u8 map){//Same concept as above
	return IsLevelCompleted(map+56);
    da2e:	88 5c       	subi	r24, 0xC8	; 200
    da30:	0e 94 d6 6c 	call	0xd9ac	; 0xd9ac <IsLevelCompleted>
}
    da34:	08 95       	ret

0000da36 <LoadLevel>:
void LoadLevel(bool flushmoves, bool fadein,bool shiftdown, bool skiptoprow, bool fromeep, bool skipsong){
    da36:	a0 e0       	ldi	r26, 0x00	; 0
    da38:	b0 e0       	ldi	r27, 0x00	; 0
    da3a:	e1 e2       	ldi	r30, 0x21	; 33
    da3c:	fd e6       	ldi	r31, 0x6D	; 109
    da3e:	0c 94 3e 77 	jmp	0xee7c	; 0xee7c <__prologue_saves__+0x10>
    da42:	f4 2e       	mov	r15, r20
    da44:	12 2f       	mov	r17, r18
    da46:	c0 2e       	mov	r12, r16
	gamestate = 0;//turn off fast flag
    da48:	10 92 83 0d 	sts	0x0D83, r1
	moves = pushes = 0;
    da4c:	10 92 85 0d 	sts	0x0D85, r1
    da50:	10 92 84 0d 	sts	0x0D84, r1
    da54:	10 92 78 0d 	sts	0x0D78, r1
    da58:	10 92 77 0d 	sts	0x0D77, r1
	px = py = poffset = opentargets = 0;
    da5c:	10 92 87 0d 	sts	0x0D87, r1
    da60:	10 92 8c 0d 	sts	0x0D8C, r1
    da64:	10 92 76 0d 	sts	0x0D76, r1
    da68:	10 92 92 0d 	sts	0x0D92, r1

	if(level > NUMLEVELS){level = NUMLEVELS-1;}
    da6c:	80 91 89 0d 	lds	r24, 0x0D89
    da70:	83 33       	cpi	r24, 0x33	; 51
    da72:	18 f0       	brcs	.+6      	; 0xda7a <LoadLevel+0x44>
    da74:	81 e3       	ldi	r24, 0x31	; 49
    da76:	80 93 89 0d 	sts	0x0D89, r24

	levelcompleted = IsLevelCompleted(level);
    da7a:	80 91 89 0d 	lds	r24, 0x0D89
    da7e:	0e 94 d6 6c 	call	0xd9ac	; 0xd9ac <IsLevelCompleted>
    da82:	80 93 97 0d 	sts	0x0D97, r24
	levelparmet	 = HasMetLevelPar(level);
    da86:	80 91 89 0d 	lds	r24, 0x0D89
    da8a:	0e 94 17 6d 	call	0xda2e	; 0xda2e <HasMetLevelPar>
    da8e:	80 93 7b 0d 	sts	0x0D7B, r24
				 
	  }
*/
	}

	bx = 255;
    da92:	8f ef       	ldi	r24, 0xFF	; 255
    da94:	80 93 75 0d 	sts	0x0D75, r24
	pstate = DOWN;
    da98:	82 e0       	ldi	r24, 0x02	; 2
    da9a:	80 93 7c 0d 	sts	0x0D7C, r24
	u8 t;

	int moff = (level*((8*14)+LEVELINFOSIZE));//+(fromeep*SOKOBANSAVEOFFSET);
    da9e:	e0 91 89 0d 	lds	r30, 0x0D89
    daa2:	81 e7       	ldi	r24, 0x71	; 113
    daa4:	e8 9f       	mul	r30, r24
    daa6:	f0 01       	movw	r30, r0
    daa8:	11 24       	eor	r1, r1
	u8 defaulttileset;


	defaulttileset = pgm_read_byte(&Maps[moff++]);
    daaa:	5f 01       	movw	r10, r30
    daac:	08 94       	sec
    daae:	a1 1c       	adc	r10, r1
    dab0:	b1 1c       	adc	r11, r1
    dab2:	e3 5f       	subi	r30, 0xF3	; 243
    dab4:	fb 47       	sbci	r31, 0x7B	; 123
    dab6:	94 91       	lpm	r25, Z+

	if(!graphicspreference)//user hasn't specified a tileset
    dab8:	80 91 e6 0c 	lds	r24, 0x0CE6
    dabc:	88 23       	and	r24, r24
    dabe:	11 f4       	brne	.+4      	; 0xdac4 <LoadLevel+0x8e>
		tileset = defaulttileset;
    dac0:	90 93 86 0d 	sts	0x0D86, r25

//musicoff = skipsong = musicplaying = false;
//musicpreference = false;

	if(!musicoff && !skipsong){//user hasn't specified no music so see if we should load music
    dac4:	80 91 e4 0c 	lds	r24, 0x0CE4
    dac8:	88 23       	and	r24, r24
    daca:	a9 f5       	brne	.+106    	; 0xdb36 <LoadLevel+0x100>
    dacc:	ee 20       	and	r14, r14
    dace:	99 f5       	brne	.+102    	; 0xdb36 <LoadLevel+0x100>
		u8 oldtrack = tracknum;
    dad0:	20 91 82 0d 	lds	r18, 0x0D82

		if(musicpreference)//user has specified a music track
    dad4:	80 91 e5 0c 	lds	r24, 0x0CE5
    dad8:	88 23       	and	r24, r24
    dada:	29 f0       	breq	.+10     	; 0xdae6 <LoadLevel+0xb0>
		  tracknum = preferredtrack;
    dadc:	80 91 e7 0c 	lds	r24, 0x0CE7
    dae0:	80 93 82 0d 	sts	0x0D82, r24
    dae4:	03 c0       	rjmp	.+6      	; 0xdaec <LoadLevel+0xb6>
		else
		  tracknum = defaulttileset+1;//use tile set default
    dae6:	9f 5f       	subi	r25, 0xFF	; 255
    dae8:	90 93 82 0d 	sts	0x0D82, r25
		
	  if(!musicplaying || (oldtrack != tracknum)){//music is different so start a new song, otherwise just let the song continue
    daec:	80 91 01 01 	lds	r24, 0x0101
    daf0:	88 23       	and	r24, r24
    daf2:	21 f0       	breq	.+8      	; 0xdafc <LoadLevel+0xc6>
    daf4:	80 91 82 0d 	lds	r24, 0x0D82
    daf8:	28 17       	cp	r18, r24
    dafa:	e9 f0       	breq	.+58     	; 0xdb36 <LoadLevel+0x100>
	  //note that the victory menu will set tracknum to 255 so that it always loads a song after(unless music off ^)
			
		 if(tracknum == 1)			{StartSong(AmericaSong);}
    dafc:	80 91 82 0d 	lds	r24, 0x0D82
    db00:	81 30       	cpi	r24, 0x01	; 1
    db02:	19 f4       	brne	.+6      	; 0xdb0a <LoadLevel+0xd4>
    db04:	8d e8       	ldi	r24, 0x8D	; 141
    db06:	99 e6       	ldi	r25, 0x69	; 105
    db08:	11 c0       	rjmp	.+34     	; 0xdb2c <LoadLevel+0xf6>
			else if(tracknum == 2)	 {StartSong(EgyptSong);}
    db0a:	82 30       	cpi	r24, 0x02	; 2
    db0c:	19 f4       	brne	.+6      	; 0xdb14 <LoadLevel+0xde>
    db0e:	8c ee       	ldi	r24, 0xEC	; 236
    db10:	9d e6       	ldi	r25, 0x6D	; 109
    db12:	0c c0       	rjmp	.+24     	; 0xdb2c <LoadLevel+0xf6>
			else if(tracknum == 3)	 {StartSong(ChinaSong);}
    db14:	83 30       	cpi	r24, 0x03	; 3
    db16:	19 f4       	brne	.+6      	; 0xdb1e <LoadLevel+0xe8>
    db18:	8f e3       	ldi	r24, 0x3F	; 63
    db1a:	92 e7       	ldi	r25, 0x72	; 114
    db1c:	07 c0       	rjmp	.+14     	; 0xdb2c <LoadLevel+0xf6>
			else if(tracknum == 4)	 {StartSong(SouthPoleSong);}
    db1e:	84 30       	cpi	r24, 0x04	; 4
    db20:	19 f4       	brne	.+6      	; 0xdb28 <LoadLevel+0xf2>
    db22:	85 e3       	ldi	r24, 0x35	; 53
    db24:	99 e7       	ldi	r25, 0x79	; 121
    db26:	02 c0       	rjmp	.+4      	; 0xdb2c <LoadLevel+0xf6>
			else /*if(tracknum == 5)*/{StartSong(JapanSong);}	
    db28:	86 eb       	ldi	r24, 0xB6	; 182
    db2a:	9e e7       	ldi	r25, 0x7E	; 126
    db2c:	0e 94 ce 5a 	call	0xb59c	; 0xb59c <StartSong>

		 musicplaying = true;
    db30:	81 e0       	ldi	r24, 0x01	; 1
    db32:	80 93 01 01 	sts	0x0101, r24
		else if(tracknum == 5)	{StartSong(JapanSong);}
	}
*/


	for(u8 y=skiptoprow;y<LEVELHIGH;y++)//don't draw over menu
    db36:	e1 2e       	mov	r14, r17
    db38:	d1 2e       	mov	r13, r17
    db3a:	df 0c       	add	r13, r15
    db3c:	44 c0       	rjmp	.+136    	; 0xdbc6 <LoadLevel+0x190>
    db3e:	f0 2e       	mov	r15, r16
    db40:	80 2f       	mov	r24, r16
    db42:	86 95       	lsr	r24
	for(u8 x=0;x<LEVELWIDE;x++){
		if(!fromeep){t = pgm_read_byte(&Maps[moff+(y<<3)+(x>>1)]);}
    db44:	cc 20       	and	r12, r12
    db46:	39 f4       	brne	.+14     	; 0xdb56 <LoadLevel+0x120>
    db48:	fe 01       	movw	r30, r28
    db4a:	e8 0f       	add	r30, r24
    db4c:	f1 1d       	adc	r31, r1
    db4e:	e3 5f       	subi	r30, 0xF3	; 243
    db50:	fb 47       	sbci	r31, 0x7B	; 123
    db52:	84 91       	lpm	r24, Z+
    db54:	06 c0       	rjmp	.+12     	; 0xdb62 <LoadLevel+0x12c>
	  else		  {t = ReadEeprom(moff+(y<<3)+(x>>1));}
    db56:	9e 01       	movw	r18, r28
    db58:	28 0f       	add	r18, r24
    db5a:	31 1d       	adc	r19, r1
    db5c:	c9 01       	movw	r24, r18
    db5e:	0e 94 fd 58 	call	0xb1fa	; 0xb1fa <ReadEeprom>
	  
	  t = ( t>>((4)*(x%2)) ) & 15; //decompress 4 bits for each tile
    db62:	28 2f       	mov	r18, r24
    db64:	30 e0       	ldi	r19, 0x00	; 0
    db66:	c8 01       	movw	r24, r16
    db68:	81 70       	andi	r24, 0x01	; 1
    db6a:	90 70       	andi	r25, 0x00	; 0
    db6c:	88 0f       	add	r24, r24
    db6e:	99 1f       	adc	r25, r25
    db70:	88 0f       	add	r24, r24
    db72:	99 1f       	adc	r25, r25
    db74:	02 c0       	rjmp	.+4      	; 0xdb7a <LoadLevel+0x144>
    db76:	35 95       	asr	r19
    db78:	27 95       	ror	r18
    db7a:	8a 95       	dec	r24
    db7c:	e2 f7       	brpl	.-8      	; 0xdb76 <LoadLevel+0x140>
    db7e:	42 2f       	mov	r20, r18
    db80:	4f 70       	andi	r20, 0x0F	; 15

	  if(t >= SOKOSTART){
    db82:	46 30       	cpi	r20, 0x06	; 6
    db84:	50 f0       	brcs	.+20     	; 0xdb9a <LoadLevel+0x164>
		  px = x;
    db86:	f0 92 92 0d 	sts	0x0D92, r15
		 py = y;  
    db8a:	e0 92 76 0d 	sts	0x0D76, r14
			if(t > SOKOSTART){t=TARGET;}//sokoban starts on a target;
    db8e:	46 30       	cpi	r20, 0x06	; 6
    db90:	11 f4       	brne	.+4      	; 0xdb96 <LoadLevel+0x160>
    db92:	41 e0       	ldi	r20, 0x01	; 1
    db94:	09 c0       	rjmp	.+18     	; 0xdba8 <LoadLevel+0x172>
    db96:	42 e0       	ldi	r20, 0x02	; 2
    db98:	07 c0       	rjmp	.+14     	; 0xdba8 <LoadLevel+0x172>
		 else				 {t=FLOOR;}
			
	  }
	  else if(t == TARGET){opentargets++;}
    db9a:	42 30       	cpi	r20, 0x02	; 2
    db9c:	29 f4       	brne	.+10     	; 0xdba8 <LoadLevel+0x172>
    db9e:	80 91 87 0d 	lds	r24, 0x0D87
    dba2:	8f 5f       	subi	r24, 0xFF	; 255
    dba4:	80 93 87 0d 	sts	0x0D87, r24
		 vram[v+ 1] = 21;
		  vram[v+30] = 22;
		  vram[v+31] = 23;
	  }
	  else*/
		  SetMapTile(x,y+shiftdown,t);//this is relative to tile set
    dba8:	8f 2d       	mov	r24, r15
    dbaa:	6d 2d       	mov	r22, r13
    dbac:	0e 94 34 66 	call	0xcc68	; 0xcc68 <SetMapTile>
    dbb0:	0f 5f       	subi	r16, 0xFF	; 255
    dbb2:	1f 4f       	sbci	r17, 0xFF	; 255
	}
*/


	for(u8 y=skiptoprow;y<LEVELHIGH;y++)//don't draw over menu
	for(u8 x=0;x<LEVELWIDE;x++){
    dbb4:	0f 30       	cpi	r16, 0x0F	; 15
    dbb6:	11 05       	cpc	r17, r1
    dbb8:	09 f0       	breq	.+2      	; 0xdbbc <LoadLevel+0x186>
    dbba:	c1 cf       	rjmp	.-126    	; 0xdb3e <LoadLevel+0x108>
		else if(tracknum == 5)	{StartSong(JapanSong);}
	}
*/


	for(u8 y=skiptoprow;y<LEVELHIGH;y++)//don't draw over menu
    dbbc:	e3 94       	inc	r14
    dbbe:	d3 94       	inc	r13
    dbc0:	3d e0       	ldi	r19, 0x0D	; 13
    dbc2:	3e 15       	cp	r19, r14
    dbc4:	60 f0       	brcs	.+24     	; 0xdbde <LoadLevel+0x1a8>
	for(u8 x=0;x<LEVELWIDE;x++){
		if(!fromeep){t = pgm_read_byte(&Maps[moff+(y<<3)+(x>>1)]);}
    dbc6:	ce 2d       	mov	r28, r14
    dbc8:	d0 e0       	ldi	r29, 0x00	; 0
    dbca:	a3 e0       	ldi	r26, 0x03	; 3
    dbcc:	cc 0f       	add	r28, r28
    dbce:	dd 1f       	adc	r29, r29
    dbd0:	aa 95       	dec	r26
    dbd2:	e1 f7       	brne	.-8      	; 0xdbcc <LoadLevel+0x196>
    dbd4:	ca 0d       	add	r28, r10
    dbd6:	db 1d       	adc	r29, r11
    dbd8:	00 e0       	ldi	r16, 0x00	; 0
    dbda:	10 e0       	ldi	r17, 0x00	; 0
    dbdc:	b0 cf       	rjmp	.-160    	; 0xdb3e <LoadLevel+0x108>
		  vram[v+31] = 23;
	  }
	  else*/
		  SetMapTile(x,y+shiftdown,t);//this is relative to tile set
	}
}
    dbde:	cd b7       	in	r28, 0x3d	; 61
    dbe0:	de b7       	in	r29, 0x3e	; 62
    dbe2:	ea e0       	ldi	r30, 0x0A	; 10
    dbe4:	0c 94 5a 77 	jmp	0xeeb4	; 0xeeb4 <__epilogue_restores__+0x10>

0000dbe8 <RetryLevel>:
	t = t>>2;//adjust it for tile size
	t -= tileset*NUMTILES;//adjust for tile set
	return t;	
}

void RetryLevel(){
    dbe8:	ef 92       	push	r14
    dbea:	0f 93       	push	r16
	//DoScreenOutEffect();
	FadeOut(3,true);
    dbec:	83 e0       	ldi	r24, 0x03	; 3
    dbee:	61 e0       	ldi	r22, 0x01	; 1
    dbf0:	0e 94 bf 62 	call	0xc57e	; 0xc57e <FadeOut>
	WaitVsync(1);
    dbf4:	81 e0       	ldi	r24, 0x01	; 1
    dbf6:	90 e0       	ldi	r25, 0x00	; 0
    dbf8:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
	LoadLevel(true,true,false,false,false,true);
    dbfc:	81 e0       	ldi	r24, 0x01	; 1
    dbfe:	61 e0       	ldi	r22, 0x01	; 1
    dc00:	40 e0       	ldi	r20, 0x00	; 0
    dc02:	20 e0       	ldi	r18, 0x00	; 0
    dc04:	00 e0       	ldi	r16, 0x00	; 0
    dc06:	ee 24       	eor	r14, r14
    dc08:	e3 94       	inc	r14
    dc0a:	0e 94 1b 6d 	call	0xda36	; 0xda36 <LoadLevel>
	WaitVsync(1);
    dc0e:	81 e0       	ldi	r24, 0x01	; 1
    dc10:	90 e0       	ldi	r25, 0x00	; 0
    dc12:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
	Render();//make sure player gets drawn once so he doesn't "warp" to place
    dc16:	0e 94 9a 67 	call	0xcf34	; 0xcf34 <Render>
	FadeIn(3,false);
    dc1a:	83 e0       	ldi	r24, 0x03	; 3
    dc1c:	60 e0       	ldi	r22, 0x00	; 0
    dc1e:	0e 94 b0 62 	call	0xc560	; 0xc560 <FadeIn>
}
    dc22:	0f 91       	pop	r16
    dc24:	ef 90       	pop	r14
    dc26:	08 95       	ret

0000dc28 <FillPad>:

void FillPad(){
	oldpadstate = padstate;
    dc28:	80 91 70 0d 	lds	r24, 0x0D70
    dc2c:	90 91 71 0d 	lds	r25, 0x0D71
    dc30:	90 93 6f 0d 	sts	0x0D6F, r25
    dc34:	80 93 6e 0d 	sts	0x0D6E, r24
	padstate = ReadJoypad(0);
    dc38:	80 e0       	ldi	r24, 0x00	; 0
    dc3a:	0e 94 e7 58 	call	0xb1ce	; 0xb1ce <ReadJoypad>
    dc3e:	90 93 71 0d 	sts	0x0D71, r25
    dc42:	80 93 70 0d 	sts	0x0D70, r24
}
    dc46:	08 95       	ret

0000dc48 <LevelSelect>:
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////


void LevelSelect(){
    dc48:	cf 92       	push	r12
    dc4a:	ef 92       	push	r14
    dc4c:	ff 92       	push	r15
    dc4e:	0f 93       	push	r16
    dc50:	1f 93       	push	r17
	WaitVsync(1);
    dc52:	81 e0       	ldi	r24, 0x01	; 1
    dc54:	90 e0       	ldi	r25, 0x00	; 0
    dc56:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
	FadeIn(1,false);
    dc5a:	81 e0       	ldi	r24, 0x01	; 1
    dc5c:	60 e0       	ldi	r22, 0x00	; 0
    dc5e:	0e 94 b0 62 	call	0xc560	; 0xc560 <FadeIn>
	FillScreen(BLANKT);
    dc62:	81 e8       	ldi	r24, 0x81	; 129
    dc64:	0e 94 24 69 	call	0xd248	; 0xd248 <FillScreen>
	WaitVsync(1);
    dc68:	81 e0       	ldi	r24, 0x01	; 1
    dc6a:	90 e0       	ldi	r25, 0x00	; 0
    dc6c:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
	u8 mappos = level;
    dc70:	f0 90 89 0d 	lds	r15, 0x0D89
	u8 coff = 0;
	u8 cwait = 30;
	bool load = false;
	LoadLevel(true,false,false,false,false,true);
    dc74:	81 e0       	ldi	r24, 0x01	; 1
    dc76:	60 e0       	ldi	r22, 0x00	; 0
    dc78:	40 e0       	ldi	r20, 0x00	; 0
    dc7a:	20 e0       	ldi	r18, 0x00	; 0
    dc7c:	00 e0       	ldi	r16, 0x00	; 0
    dc7e:	ee 24       	eor	r14, r14
    dc80:	e3 94       	inc	r14
    dc82:	0e 94 1b 6d 	call	0xda36	; 0xda36 <LoadLevel>

	DrawOpeningMenu(0,0,29,2,0,false);
    dc86:	80 e0       	ldi	r24, 0x00	; 0
    dc88:	60 e0       	ldi	r22, 0x00	; 0
    dc8a:	4d e1       	ldi	r20, 0x1D	; 29
    dc8c:	22 e0       	ldi	r18, 0x02	; 2
    dc8e:	00 e0       	ldi	r16, 0x00	; 0
    dc90:	10 e0       	ldi	r17, 0x00	; 0
    dc92:	ee 24       	eor	r14, r14
    dc94:	0e 94 fd 69 	call	0xd3fa	; 0xd3fa <DrawOpeningMenu>
		 if(levelcompleted){print(26,1,PSTR("5"));}else{print(26,1,PSTR("6"));}
    dc98:	80 91 97 0d 	lds	r24, 0x0D97
    dc9c:	88 23       	and	r24, r24
    dc9e:	29 f0       	breq	.+10     	; 0xdcaa <LevelSelect+0x62>
    dca0:	8a e1       	ldi	r24, 0x1A	; 26
    dca2:	61 e0       	ldi	r22, 0x01	; 1
    dca4:	4a e1       	ldi	r20, 0x1A	; 26
    dca6:	59 ea       	ldi	r21, 0xA9	; 169
    dca8:	04 c0       	rjmp	.+8      	; 0xdcb2 <LevelSelect+0x6a>
    dcaa:	8a e1       	ldi	r24, 0x1A	; 26
    dcac:	61 e0       	ldi	r22, 0x01	; 1
    dcae:	48 e1       	ldi	r20, 0x18	; 24
    dcb0:	59 ea       	ldi	r21, 0xA9	; 169
    dcb2:	0e 94 69 6a 	call	0xd4d2	; 0xd4d2 <print>
		 if(levelparmet)		 {print(27,1,PSTR("5"));}else{print(27,1,PSTR("6"));}
    dcb6:	80 91 7b 0d 	lds	r24, 0x0D7B
    dcba:	88 23       	and	r24, r24
    dcbc:	49 f0       	breq	.+18     	; 0xdcd0 <LevelSelect+0x88>
    dcbe:	8b e1       	ldi	r24, 0x1B	; 27
    dcc0:	61 e0       	ldi	r22, 0x01	; 1
    dcc2:	46 e1       	ldi	r20, 0x16	; 22
    dcc4:	59 ea       	ldi	r21, 0xA9	; 169
    dcc6:	0e 94 69 6a 	call	0xd4d2	; 0xd4d2 <print>
    dcca:	cc 24       	eor	r12, r12
    dccc:	1e e1       	ldi	r17, 0x1E	; 30
    dcce:	05 c0       	rjmp	.+10     	; 0xdcda <LevelSelect+0x92>
    dcd0:	8b e1       	ldi	r24, 0x1B	; 27
    dcd2:	61 e0       	ldi	r22, 0x01	; 1
    dcd4:	44 e1       	ldi	r20, 0x14	; 20
    dcd6:	59 ea       	ldi	r21, 0xA9	; 169
    dcd8:	f6 cf       	rjmp	.-20     	; 0xdcc6 <LevelSelect+0x7e>

	while(true){
		FillPad();
    dcda:	0e 94 14 6e 	call	0xdc28	; 0xdc28 <FillPad>
	  if	  (padstate & BTN_SL && !(oldpadstate & BTN_SL) && mappos > 0)		  {load=true;if(mappos < 10){mappos = 0;}else{mappos-=10;}}
    dcde:	20 91 70 0d 	lds	r18, 0x0D70
    dce2:	30 91 71 0d 	lds	r19, 0x0D71
    dce6:	32 ff       	sbrs	r19, 2
    dce8:	10 c0       	rjmp	.+32     	; 0xdd0a <LevelSelect+0xc2>
    dcea:	80 91 6e 0d 	lds	r24, 0x0D6E
    dcee:	90 91 6f 0d 	lds	r25, 0x0D6F
    dcf2:	92 fd       	sbrc	r25, 2
    dcf4:	0a c0       	rjmp	.+20     	; 0xdd0a <LevelSelect+0xc2>
    dcf6:	ff 20       	and	r15, r15
    dcf8:	41 f0       	breq	.+16     	; 0xdd0a <LevelSelect+0xc2>
    dcfa:	89 e0       	ldi	r24, 0x09	; 9
    dcfc:	8f 15       	cp	r24, r15
    dcfe:	10 f0       	brcs	.+4      	; 0xdd04 <LevelSelect+0xbc>
    dd00:	ff 24       	eor	r15, r15
    dd02:	45 c0       	rjmp	.+138    	; 0xdd8e <LevelSelect+0x146>
    dd04:	86 ef       	ldi	r24, 0xF6	; 246
    dd06:	f8 0e       	add	r15, r24
    dd08:	42 c0       	rjmp	.+132    	; 0xdd8e <LevelSelect+0x146>
	  else if(padstate & BTN_SR && !(oldpadstate & BTN_SR) && mappos < numlevels-1){load=true;mappos+=10;if(mappos >= numlevels){mappos = numlevels-1;}}
    dd0a:	33 ff       	sbrs	r19, 3
    dd0c:	16 c0       	rjmp	.+44     	; 0xdd3a <LevelSelect+0xf2>
    dd0e:	80 91 6e 0d 	lds	r24, 0x0D6E
    dd12:	90 91 6f 0d 	lds	r25, 0x0D6F
    dd16:	93 fd       	sbrc	r25, 3
    dd18:	10 c0       	rjmp	.+32     	; 0xdd3a <LevelSelect+0xf2>
    dd1a:	40 91 88 0d 	lds	r20, 0x0D88
    dd1e:	2f 2d       	mov	r18, r15
    dd20:	30 e0       	ldi	r19, 0x00	; 0
    dd22:	84 2f       	mov	r24, r20
    dd24:	90 e0       	ldi	r25, 0x00	; 0
    dd26:	01 97       	sbiw	r24, 0x01	; 1
    dd28:	28 17       	cp	r18, r24
    dd2a:	39 07       	cpc	r19, r25
    dd2c:	34 f4       	brge	.+12     	; 0xdd3a <LevelSelect+0xf2>
    dd2e:	8a e0       	ldi	r24, 0x0A	; 10
    dd30:	f8 0e       	add	r15, r24
    dd32:	f4 16       	cp	r15, r20
    dd34:	60 f1       	brcs	.+88     	; 0xdd8e <LevelSelect+0x146>
    dd36:	f4 2e       	mov	r15, r20
    dd38:	1e c0       	rjmp	.+60     	; 0xdd76 <LevelSelect+0x12e>
		//if(UpDown() && cursorpos > 0)		 {cursorpos--;}
	  //else if(DownDown() && cursorpos < 3){cursorpos++;}
	  else if(StartDown()){
    dd3a:	0e 94 13 65 	call	0xca26	; 0xca26 <StartDown>
    dd3e:	88 23       	and	r24, r24
    dd40:	a1 f0       	breq	.+40     	; 0xdd6a <LevelSelect+0x122>
			guijuststarted = false;
    dd42:	10 92 6d 0d 	sts	0x0D6D, r1
		 guistate = 0;
    dd46:	10 92 91 0d 	sts	0x0D91, r1
		 level = mappos;
    dd4a:	f0 92 89 0d 	sts	0x0D89, r15
		 LoadLevel(true,true,false,false,false,false);
    dd4e:	81 e0       	ldi	r24, 0x01	; 1
    dd50:	61 e0       	ldi	r22, 0x01	; 1
    dd52:	40 e0       	ldi	r20, 0x00	; 0
    dd54:	20 e0       	ldi	r18, 0x00	; 0
    dd56:	00 e0       	ldi	r16, 0x00	; 0
    dd58:	ee 24       	eor	r14, r14
    dd5a:	0e 94 1b 6d 	call	0xda36	; 0xda36 <LoadLevel>

		spritecount = 0;
		DrawSpriteTile((px*16),(py*16),5+(cwait>14));
	  WaitVsync(1);
	}
}
    dd5e:	1f 91       	pop	r17
    dd60:	0f 91       	pop	r16
    dd62:	ff 90       	pop	r15
    dd64:	ef 90       	pop	r14
    dd66:	cf 90       	pop	r12
    dd68:	08 95       	ret
		 level = mappos;
		 LoadLevel(true,true,false,false,false,false);

		 return;
	  }
	  else if(LeftDown() && mappos > 0)			{mappos--;load=true;}
    dd6a:	0e 94 5e 65 	call	0xcabc	; 0xcabc <LeftDown>
    dd6e:	88 23       	and	r24, r24
    dd70:	21 f0       	breq	.+8      	; 0xdd7a <LevelSelect+0x132>
    dd72:	ff 20       	and	r15, r15
    dd74:	11 f0       	breq	.+4      	; 0xdd7a <LevelSelect+0x132>
    dd76:	fa 94       	dec	r15
    dd78:	0a c0       	rjmp	.+20     	; 0xdd8e <LevelSelect+0x146>
	  else if(RightDown() && mappos < NUMLEVELS-1){mappos++;load=true;}
    dd7a:	0e 94 71 65 	call	0xcae2	; 0xcae2 <RightDown>
    dd7e:	88 23       	and	r24, r24
    dd80:	09 f4       	brne	.+2      	; 0xdd84 <LevelSelect+0x13c>
    dd82:	51 c0       	rjmp	.+162    	; 0xde26 <LevelSelect+0x1de>
    dd84:	80 e3       	ldi	r24, 0x30	; 48
    dd86:	8f 15       	cp	r24, r15
    dd88:	08 f4       	brcc	.+2      	; 0xdd8c <LevelSelect+0x144>
    dd8a:	4d c0       	rjmp	.+154    	; 0xde26 <LevelSelect+0x1de>
    dd8c:	f3 94       	inc	r15

		if(load){
		 DrawMenu(0,0,29,2);
    dd8e:	80 e0       	ldi	r24, 0x00	; 0
    dd90:	60 e0       	ldi	r22, 0x00	; 0
    dd92:	4d e1       	ldi	r20, 0x1D	; 29
    dd94:	22 e0       	ldi	r18, 0x02	; 2
    dd96:	0e 94 3c 69 	call	0xd278	; 0xd278 <DrawMenu>
		  DoScreenOutEffect();
    dd9a:	0e 94 c6 68 	call	0xd18c	; 0xd18c <DoScreenOutEffect>
		  WaitVsync(1);
    dd9e:	81 e0       	ldi	r24, 0x01	; 1
    dda0:	90 e0       	ldi	r25, 0x00	; 0
    dda2:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
		 load = false;
		 level = mappos;
    dda6:	f0 92 89 0d 	sts	0x0D89, r15
		 LoadLevel(true,true,false,true,false,true);
    ddaa:	81 e0       	ldi	r24, 0x01	; 1
    ddac:	61 e0       	ldi	r22, 0x01	; 1
    ddae:	40 e0       	ldi	r20, 0x00	; 0
    ddb0:	21 e0       	ldi	r18, 0x01	; 1
    ddb2:	00 e0       	ldi	r16, 0x00	; 0
    ddb4:	ee 24       	eor	r14, r14
    ddb6:	e3 94       	inc	r14
    ddb8:	0e 94 1b 6d 	call	0xda36	; 0xda36 <LoadLevel>
			DrawMenu(0,0,29,2);
    ddbc:	80 e0       	ldi	r24, 0x00	; 0
    ddbe:	60 e0       	ldi	r22, 0x00	; 0
    ddc0:	4d e1       	ldi	r20, 0x1D	; 29
    ddc2:	22 e0       	ldi	r18, 0x02	; 2
    ddc4:	0e 94 3c 69 	call	0xd278	; 0xd278 <DrawMenu>
		 if(levelcompleted){print(26,1,PSTR("5"));}else{print(26,1,PSTR("6"));}
    ddc8:	80 91 97 0d 	lds	r24, 0x0D97
    ddcc:	88 23       	and	r24, r24
    ddce:	29 f0       	breq	.+10     	; 0xddda <LevelSelect+0x192>
    ddd0:	8a e1       	ldi	r24, 0x1A	; 26
    ddd2:	61 e0       	ldi	r22, 0x01	; 1
    ddd4:	42 e1       	ldi	r20, 0x12	; 18
    ddd6:	59 ea       	ldi	r21, 0xA9	; 169
    ddd8:	04 c0       	rjmp	.+8      	; 0xdde2 <LevelSelect+0x19a>
    ddda:	8a e1       	ldi	r24, 0x1A	; 26
    dddc:	61 e0       	ldi	r22, 0x01	; 1
    ddde:	40 e1       	ldi	r20, 0x10	; 16
    dde0:	59 ea       	ldi	r21, 0xA9	; 169
    dde2:	0e 94 69 6a 	call	0xd4d2	; 0xd4d2 <print>
		 if(levelparmet)		 {print(27,1,PSTR("5"));}else{print(27,1,PSTR("6"));}
    dde6:	80 91 7b 0d 	lds	r24, 0x0D7B
    ddea:	88 23       	and	r24, r24
    ddec:	29 f0       	breq	.+10     	; 0xddf8 <LevelSelect+0x1b0>
    ddee:	8b e1       	ldi	r24, 0x1B	; 27
    ddf0:	61 e0       	ldi	r22, 0x01	; 1
    ddf2:	4e e0       	ldi	r20, 0x0E	; 14
    ddf4:	59 ea       	ldi	r21, 0xA9	; 169
    ddf6:	04 c0       	rjmp	.+8      	; 0xde00 <LevelSelect+0x1b8>
    ddf8:	8b e1       	ldi	r24, 0x1B	; 27
    ddfa:	61 e0       	ldi	r22, 0x01	; 1
    ddfc:	4c e0       	ldi	r20, 0x0C	; 12
    ddfe:	59 ea       	ldi	r21, 0xA9	; 169
    de00:	0e 94 69 6a 	call	0xd4d2	; 0xd4d2 <print>
		 //ComposeRamTile((NUMTILESPERSET*tileset)*64,(tileset*28)+4,(25*64));
		 //WaitVsync(1);
		 VramFillWindow(px*2,py*2,2,2,25);
    de04:	80 91 92 0d 	lds	r24, 0x0D92
    de08:	60 91 76 0d 	lds	r22, 0x0D76
    de0c:	70 e0       	ldi	r23, 0x00	; 0
    de0e:	66 0f       	add	r22, r22
    de10:	77 1f       	adc	r23, r23
    de12:	88 0f       	add	r24, r24
    de14:	42 e0       	ldi	r20, 0x02	; 2
    de16:	22 e0       	ldi	r18, 0x02	; 2
    de18:	09 e1       	ldi	r16, 0x19	; 25
    de1a:	0e 94 f8 65 	call	0xcbf0	; 0xcbf0 <VramFillWindow>
		 // printrainbow(2,1,strLevelSelect,4,0,0,coff);
		 //printb(10+7,1,mappos+1);
		  WaitVsync(1);
    de1e:	81 e0       	ldi	r24, 0x01	; 1
    de20:	90 e0       	ldi	r25, 0x00	; 0
    de22:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
	  }
	  if(!cwait){
    de26:	11 23       	and	r17, r17
    de28:	e1 f5       	brne	.+120    	; 0xdea2 <LevelSelect+0x25a>
		  cwait = 30;
	  //	printrainbow(9,1,strLevelSelect,4,0,0,coff++);
		 
		 if(tileset==0)	  {printrainbow(6,1,PSTR("STAGE3333AMERICA")  ,11,0,0,coff++);}
    de2a:	80 91 86 0d 	lds	r24, 0x0D86
    de2e:	88 23       	and	r24, r24
    de30:	39 f4       	brne	.+14     	; 0xde40 <LevelSelect+0x1f8>
    de32:	1c 2d       	mov	r17, r12
    de34:	1f 5f       	subi	r17, 0xFF	; 255
    de36:	86 e0       	ldi	r24, 0x06	; 6
    de38:	61 e0       	ldi	r22, 0x01	; 1
    de3a:	4b ef       	ldi	r20, 0xFB	; 251
    de3c:	58 ea       	ldi	r21, 0xA8	; 168
    de3e:	1f c0       	rjmp	.+62     	; 0xde7e <LevelSelect+0x236>
		 else if(tileset==1){printrainbow(6,1,PSTR("STAGE3333EGYPT")	 ,11,0,0,coff++);}
    de40:	81 30       	cpi	r24, 0x01	; 1
    de42:	39 f4       	brne	.+14     	; 0xde52 <LevelSelect+0x20a>
    de44:	1c 2d       	mov	r17, r12
    de46:	1f 5f       	subi	r17, 0xFF	; 255
    de48:	86 e0       	ldi	r24, 0x06	; 6
    de4a:	61 e0       	ldi	r22, 0x01	; 1
    de4c:	4c ee       	ldi	r20, 0xEC	; 236
    de4e:	58 ea       	ldi	r21, 0xA8	; 168
    de50:	16 c0       	rjmp	.+44     	; 0xde7e <LevelSelect+0x236>
		 else if(tileset==2){printrainbow(6,1,PSTR("STAGE3333CHINA")	 ,11,0,0,coff++);}
    de52:	82 30       	cpi	r24, 0x02	; 2
    de54:	39 f4       	brne	.+14     	; 0xde64 <LevelSelect+0x21c>
    de56:	1c 2d       	mov	r17, r12
    de58:	1f 5f       	subi	r17, 0xFF	; 255
    de5a:	86 e0       	ldi	r24, 0x06	; 6
    de5c:	61 e0       	ldi	r22, 0x01	; 1
    de5e:	4d ed       	ldi	r20, 0xDD	; 221
    de60:	58 ea       	ldi	r21, 0xA8	; 168
    de62:	0d c0       	rjmp	.+26     	; 0xde7e <LevelSelect+0x236>
    de64:	1c 2d       	mov	r17, r12
    de66:	1f 5f       	subi	r17, 0xFF	; 255
		 else if(tileset==3){printrainbow(6,1,PSTR("STAGE3333SOUTHPOLE"),11,0,0,coff++);}
    de68:	83 30       	cpi	r24, 0x03	; 3
    de6a:	29 f4       	brne	.+10     	; 0xde76 <LevelSelect+0x22e>
    de6c:	86 e0       	ldi	r24, 0x06	; 6
    de6e:	61 e0       	ldi	r22, 0x01	; 1
    de70:	4a ec       	ldi	r20, 0xCA	; 202
    de72:	58 ea       	ldi	r21, 0xA8	; 168
    de74:	04 c0       	rjmp	.+8      	; 0xde7e <LevelSelect+0x236>
		 else					{printrainbow(6,1,PSTR("STAGE3333JAPAN")	 ,11,0,0,coff++);}
    de76:	86 e0       	ldi	r24, 0x06	; 6
    de78:	61 e0       	ldi	r22, 0x01	; 1
    de7a:	4b eb       	ldi	r20, 0xBB	; 187
    de7c:	58 ea       	ldi	r21, 0xA8	; 168
    de7e:	2b e0       	ldi	r18, 0x0B	; 11
    de80:	00 e0       	ldi	r16, 0x00	; 0
    de82:	ee 24       	eor	r14, r14
    de84:	0e 94 af 64 	call	0xc95e	; 0xc95e <printrainbow>
    de88:	c1 2e       	mov	r12, r17
		 printb(6+6,1,mappos+1);
    de8a:	4f 2d       	mov	r20, r15
    de8c:	4f 5f       	subi	r20, 0xFF	; 255
    de8e:	8c e0       	ldi	r24, 0x0C	; 12
    de90:	61 e0       	ldi	r22, 0x01	; 1
    de92:	0e 94 f9 6b 	call	0xd7f2	; 0xd7f2 <printb>
			if(coff > 3){coff = 0;}
    de96:	83 e0       	ldi	r24, 0x03	; 3
    de98:	81 17       	cp	r24, r17
    de9a:	08 f4       	brcc	.+2      	; 0xde9e <LevelSelect+0x256>
    de9c:	cc 24       	eor	r12, r12
    de9e:	1e e1       	ldi	r17, 0x1E	; 30
    dea0:	01 c0       	rjmp	.+2      	; 0xdea4 <LevelSelect+0x25c>
	  }
	  else
		  cwait--;
    dea2:	11 50       	subi	r17, 0x01	; 1

		spritecount = 0;
    dea4:	10 92 79 0d 	sts	0x0D79, r1
		DrawSpriteTile((px*16),(py*16),5+(cwait>14));
    dea8:	80 91 92 0d 	lds	r24, 0x0D92
    deac:	60 91 76 0d 	lds	r22, 0x0D76
    deb0:	1f 30       	cpi	r17, 0x0F	; 15
    deb2:	10 f4       	brcc	.+4      	; 0xdeb8 <LevelSelect+0x270>
    deb4:	45 e0       	ldi	r20, 0x05	; 5
    deb6:	01 c0       	rjmp	.+2      	; 0xdeba <LevelSelect+0x272>
    deb8:	46 e0       	ldi	r20, 0x06	; 6
    deba:	70 e0       	ldi	r23, 0x00	; 0
    debc:	04 e0       	ldi	r16, 0x04	; 4
    debe:	66 0f       	add	r22, r22
    dec0:	77 1f       	adc	r23, r23
    dec2:	0a 95       	dec	r16
    dec4:	e1 f7       	brne	.-8      	; 0xdebe <LevelSelect+0x276>
    dec6:	82 95       	swap	r24
    dec8:	80 7f       	andi	r24, 0xF0	; 240
    deca:	0e 94 48 67 	call	0xce90	; 0xce90 <DrawSpriteTile>
	  WaitVsync(1);
    dece:	81 e0       	ldi	r24, 0x01	; 1
    ded0:	90 e0       	ldi	r25, 0x00	; 0
    ded2:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
    ded6:	01 cf       	rjmp	.-510    	; 0xdcda <LevelSelect+0x92>

0000ded8 <VictoryMenu>:
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////


void VictoryMenu(){
    ded8:	a0 e0       	ldi	r26, 0x00	; 0
    deda:	b0 e0       	ldi	r27, 0x00	; 0
    dedc:	e2 e7       	ldi	r30, 0x72	; 114
    dede:	ff e6       	ldi	r31, 0x6F	; 111
    dee0:	0c 94 3c 77 	jmp	0xee78	; 0xee78 <__prologue_saves__+0xc>
	StopSong();
    dee4:	0e 94 f7 5a 	call	0xb5ee	; 0xb5ee <StopSong>

	poffset = px*16;//move the player off the screen
    dee8:	80 91 92 0d 	lds	r24, 0x0D92
    deec:	90 e0       	ldi	r25, 0x00	; 0
    deee:	e4 e0       	ldi	r30, 0x04	; 4
    def0:	88 0f       	add	r24, r24
    def2:	99 1f       	adc	r25, r25
    def4:	ea 95       	dec	r30
    def6:	e1 f7       	brne	.-8      	; 0xdef0 <VictoryMenu+0x18>
    def8:	80 93 8c 0d 	sts	0x0D8C, r24
	px = 0;
    defc:	10 92 92 0d 	sts	0x0D92, r1
	bx = 255;
    df00:	8f ef       	ldi	r24, 0xFF	; 255
    df02:	80 93 75 0d 	sts	0x0D75, r24
	pstate = RIGHT;	
    df06:	88 e0       	ldi	r24, 0x08	; 8
    df08:	80 93 7c 0d 	sts	0x0D7C, r24
	guijuststarted = false;
    df0c:	10 92 6d 0d 	sts	0x0D6D, r1
	while(poffset < (28*8)){
		poffset += 2;
		if(pftime){pftime--;}else{pftime = 4;pframe=!pframe;}
    df10:	14 e0       	ldi	r17, 0x04	; 4
    df12:	17 c0       	rjmp	.+46     	; 0xdf42 <VictoryMenu+0x6a>
	px = 0;
	bx = 255;
	pstate = RIGHT;	
	guijuststarted = false;
	while(poffset < (28*8)){
		poffset += 2;
    df14:	8e 5f       	subi	r24, 0xFE	; 254
    df16:	80 93 8c 0d 	sts	0x0D8C, r24
		if(pftime){pftime--;}else{pftime = 4;pframe=!pframe;}
    df1a:	80 91 8d 0d 	lds	r24, 0x0D8D
    df1e:	88 23       	and	r24, r24
    df20:	21 f0       	breq	.+8      	; 0xdf2a <VictoryMenu+0x52>
    df22:	81 50       	subi	r24, 0x01	; 1
    df24:	80 93 8d 0d 	sts	0x0D8D, r24
    df28:	0a c0       	rjmp	.+20     	; 0xdf3e <VictoryMenu+0x66>
    df2a:	10 93 8d 0d 	sts	0x0D8D, r17
    df2e:	90 e0       	ldi	r25, 0x00	; 0
    df30:	80 91 95 0d 	lds	r24, 0x0D95
    df34:	88 23       	and	r24, r24
    df36:	09 f4       	brne	.+2      	; 0xdf3a <VictoryMenu+0x62>
    df38:	91 e0       	ldi	r25, 0x01	; 1
    df3a:	90 93 95 0d 	sts	0x0D95, r25
	  Render();
    df3e:	0e 94 9a 67 	call	0xcf34	; 0xcf34 <Render>
	poffset = px*16;//move the player off the screen
	px = 0;
	bx = 255;
	pstate = RIGHT;	
	guijuststarted = false;
	while(poffset < (28*8)){
    df42:	80 91 8c 0d 	lds	r24, 0x0D8C
    df46:	80 3e       	cpi	r24, 0xE0	; 224
    df48:	28 f3       	brcs	.-54     	; 0xdf14 <VictoryMenu+0x3c>
		poffset += 2;
		if(pftime){pftime--;}else{pftime = 4;pframe=!pframe;}
	  Render();
	}
	HideSprites(0,MAX_SPRITES);
    df4a:	80 e0       	ldi	r24, 0x00	; 0
    df4c:	64 e1       	ldi	r22, 0x14	; 20
    df4e:	0e 94 f5 63 	call	0xc7ea	; 0xc7ea <HideSprites>

	StartSong(LevelClearSong);
    df52:	83 e7       	ldi	r24, 0x73	; 115
    df54:	98 e6       	ldi	r25, 0x68	; 104
    df56:	0e 94 ce 5a 	call	0xb59c	; 0xb59c <StartSong>
	musicplaying = false;//make sure this is reloaded if necessary inside LoadLevel
    df5a:	10 92 01 01 	sts	0x0101, r1
	
	WaitVsync(10);
    df5e:	8a e0       	ldi	r24, 0x0A	; 10
    df60:	90 e0       	ldi	r25, 0x00	; 0
    df62:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
	px = 14;
    df66:	8e e0       	ldi	r24, 0x0E	; 14
    df68:	80 93 92 0d 	sts	0x0D92, r24
	py = 6;
    df6c:	86 e0       	ldi	r24, 0x06	; 6
    df6e:	80 93 76 0d 	sts	0x0D76, r24
	poffset = 0;
    df72:	10 92 8c 0d 	sts	0x0D8C, r1
	pstate  = LEFT;
    df76:	84 e0       	ldi	r24, 0x04	; 4
    df78:	80 93 7c 0d 	sts	0x0D7C, r24

	DoScreenOutEffect();
    df7c:	0e 94 c6 68 	call	0xd18c	; 0xd18c <DoScreenOutEffect>
	WaitVsync(1);
    df80:	81 e0       	ldi	r24, 0x01	; 1
    df82:	90 e0       	ldi	r25, 0x00	; 0
    df84:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
	FillScreen(BLANKT);
    df88:	81 e8       	ldi	r24, 0x81	; 129
    df8a:	0e 94 24 69 	call	0xd248	; 0xd248 <FillScreen>
	FadeOut(1,true);//go blank so we avoid graphical artifacts
    df8e:	81 e0       	ldi	r24, 0x01	; 1
    df90:	61 e0       	ldi	r22, 0x01	; 1
    df92:	0e 94 bf 62 	call	0xc57e	; 0xc57e <FadeOut>
	

	int m,p;//save moves/pushes
	m = moves;
    df96:	c0 91 77 0d 	lds	r28, 0x0D77
    df9a:	d0 91 78 0d 	lds	r29, 0x0D78
	p = pushes;
    df9e:	c0 90 84 0d 	lds	r12, 0x0D84
    dfa2:	d0 90 85 0d 	lds	r13, 0x0D85

	//calculate and store achievments
	CalculateOptimum(level);
    dfa6:	80 91 89 0d 	lds	r24, 0x0D89
    dfaa:	0e 94 bf 71 	call	0xe37e	; 0xe37e <CalculateOptimum>
	FillScreen(BLANKT);
    dfae:	81 e8       	ldi	r24, 0x81	; 129
    dfb0:	0e 94 24 69 	call	0xd248	; 0xd248 <FillScreen>
	musicplaying = false;//shouldn't be here
    dfb4:	10 92 01 01 	sts	0x0101, r1

	SetLevelCompleted(level);
    dfb8:	80 91 89 0d 	lds	r24, 0x0D89
    dfbc:	0e 94 91 6c 	call	0xd922	; 0xd922 <SetLevelCompleted>
	if(m <= optimummoves)
    dfc0:	80 91 73 0d 	lds	r24, 0x0D73
    dfc4:	90 91 74 0d 	lds	r25, 0x0D74
    dfc8:	8c 17       	cp	r24, r28
    dfca:	9d 07       	cpc	r25, r29
    dfcc:	24 f0       	brlt	.+8      	; 0xdfd6 <VictoryMenu+0xfe>
		SetMetLevelPar(level);
    dfce:	80 91 89 0d 	lds	r24, 0x0D89
    dfd2:	0e 94 d2 6c 	call	0xd9a4	; 0xd9a4 <SetMetLevelPar>

	FadeIn(1,true);
    dfd6:	81 e0       	ldi	r24, 0x01	; 1
    dfd8:	61 e0       	ldi	r22, 0x01	; 1
    dfda:	0e 94 b0 62 	call	0xc560	; 0xc560 <FadeIn>

	DrawOpeningMenu(9,15,11,10,-2,false);
    dfde:	89 e0       	ldi	r24, 0x09	; 9
    dfe0:	6f e0       	ldi	r22, 0x0F	; 15
    dfe2:	4b e0       	ldi	r20, 0x0B	; 11
    dfe4:	2a e0       	ldi	r18, 0x0A	; 10
    dfe6:	0e ef       	ldi	r16, 0xFE	; 254
    dfe8:	1f ef       	ldi	r17, 0xFF	; 255
    dfea:	ee 24       	eor	r14, r14
    dfec:	0e 94 fd 69 	call	0xd3fa	; 0xd3fa <DrawOpeningMenu>

		print (10,16,PSTR("MOVES")); if(m <= optimummoves) {print (16,16,PSTR("5"));}
    dff0:	8a e0       	ldi	r24, 0x0A	; 10
    dff2:	60 e1       	ldi	r22, 0x10	; 16
    dff4:	4f e5       	ldi	r20, 0x5F	; 95
    dff6:	59 ea       	ldi	r21, 0xA9	; 169
    dff8:	0e 94 69 6a 	call	0xd4d2	; 0xd4d2 <print>
    dffc:	80 91 73 0d 	lds	r24, 0x0D73
    e000:	90 91 74 0d 	lds	r25, 0x0D74
    e004:	8c 17       	cp	r24, r28
    e006:	9d 07       	cpc	r25, r29
    e008:	34 f0       	brlt	.+12     	; 0xe016 <VictoryMenu+0x13e>
    e00a:	80 e1       	ldi	r24, 0x10	; 16
    e00c:	60 e1       	ldi	r22, 0x10	; 16
    e00e:	4d e5       	ldi	r20, 0x5D	; 93
    e010:	59 ea       	ldi	r21, 0xA9	; 169
    e012:	0e 94 69 6a 	call	0xd4d2	; 0xd4d2 <print>
		print (10,17,PSTR("PUSHES"));if(p <= optimumpushes){print (16,17,PSTR("5"));}
    e016:	8a e0       	ldi	r24, 0x0A	; 10
    e018:	61 e1       	ldi	r22, 0x11	; 17
    e01a:	46 e5       	ldi	r20, 0x56	; 86
    e01c:	59 ea       	ldi	r21, 0xA9	; 169
    e01e:	0e 94 69 6a 	call	0xd4d2	; 0xd4d2 <print>
    e022:	80 91 8e 0d 	lds	r24, 0x0D8E
    e026:	90 91 8f 0d 	lds	r25, 0x0D8F
    e02a:	8c 15       	cp	r24, r12
    e02c:	9d 05       	cpc	r25, r13
    e02e:	34 f0       	brlt	.+12     	; 0xe03c <VictoryMenu+0x164>
    e030:	80 e1       	ldi	r24, 0x10	; 16
    e032:	61 e1       	ldi	r22, 0x11	; 17
    e034:	44 e5       	ldi	r20, 0x54	; 84
    e036:	59 ea       	ldi	r21, 0xA9	; 169
    e038:	0e 94 69 6a 	call	0xd4d2	; 0xd4d2 <print>
		printi(19,16,m);
    e03c:	83 e1       	ldi	r24, 0x13	; 19
    e03e:	60 e1       	ldi	r22, 0x10	; 16
    e040:	ae 01       	movw	r20, r28
    e042:	0e 94 c3 6b 	call	0xd786	; 0xd786 <printi>
		printi(19,17,p);
    e046:	83 e1       	ldi	r24, 0x13	; 19
    e048:	61 e1       	ldi	r22, 0x11	; 17
    e04a:	a6 01       	movw	r20, r12
    e04c:	0e 94 c3 6b 	call	0xd786	; 0xd786 <printi>
		
	  if(m <= optimummoves && p <= optimumpushes){print(11,19,PSTR("GREAT444"));}
    e050:	80 91 73 0d 	lds	r24, 0x0D73
    e054:	90 91 74 0d 	lds	r25, 0x0D74
    e058:	8c 17       	cp	r24, r28
    e05a:	9d 07       	cpc	r25, r29
    e05c:	64 f0       	brlt	.+24     	; 0xe076 <VictoryMenu+0x19e>
    e05e:	80 91 8e 0d 	lds	r24, 0x0D8E
    e062:	90 91 8f 0d 	lds	r25, 0x0D8F
    e066:	8c 15       	cp	r24, r12
    e068:	9d 05       	cpc	r25, r13
    e06a:	2c f0       	brlt	.+10     	; 0xe076 <VictoryMenu+0x19e>
    e06c:	8b e0       	ldi	r24, 0x0B	; 11
    e06e:	63 e1       	ldi	r22, 0x13	; 19
    e070:	4b e4       	ldi	r20, 0x4B	; 75
    e072:	59 ea       	ldi	r21, 0xA9	; 169
    e074:	04 c0       	rjmp	.+8      	; 0xe07e <VictoryMenu+0x1a6>
	  else													{print(13,19,PSTR("OK44"));}
    e076:	8d e0       	ldi	r24, 0x0D	; 13
    e078:	63 e1       	ldi	r22, 0x13	; 19
    e07a:	46 e4       	ldi	r20, 0x46	; 70
    e07c:	59 ea       	ldi	r21, 0xA9	; 169
    e07e:	0e 94 69 6a 	call	0xd4d2	; 0xd4d2 <print>

		print (11,21,PSTR("CPU3BEST"));
    e082:	8b e0       	ldi	r24, 0x0B	; 11
    e084:	65 e1       	ldi	r22, 0x15	; 21
    e086:	4d e3       	ldi	r20, 0x3D	; 61
    e088:	59 ea       	ldi	r21, 0xA9	; 169
    e08a:	0e 94 69 6a 	call	0xd4d2	; 0xd4d2 <print>
		print (10,23,PSTR("MOVES35"));
    e08e:	8a e0       	ldi	r24, 0x0A	; 10
    e090:	67 e1       	ldi	r22, 0x17	; 23
    e092:	45 e3       	ldi	r20, 0x35	; 53
    e094:	59 ea       	ldi	r21, 0xA9	; 169
    e096:	0e 94 69 6a 	call	0xd4d2	; 0xd4d2 <print>
		print (10,24,PSTR("PUSHES5"));
    e09a:	8a e0       	ldi	r24, 0x0A	; 10
    e09c:	68 e1       	ldi	r22, 0x18	; 24
    e09e:	4d e2       	ldi	r20, 0x2D	; 45
    e0a0:	59 ea       	ldi	r21, 0xA9	; 169
    e0a2:	0e 94 69 6a 	call	0xd4d2	; 0xd4d2 <print>
		printi(19,23,optimummoves);
    e0a6:	40 91 73 0d 	lds	r20, 0x0D73
    e0aa:	50 91 74 0d 	lds	r21, 0x0D74
    e0ae:	83 e1       	ldi	r24, 0x13	; 19
    e0b0:	67 e1       	ldi	r22, 0x17	; 23
    e0b2:	0e 94 c3 6b 	call	0xd786	; 0xd786 <printi>
		printi(19,24,optimumpushes);
    e0b6:	40 91 8e 0d 	lds	r20, 0x0D8E
    e0ba:	50 91 8f 0d 	lds	r21, 0x0D8F
    e0be:	83 e1       	ldi	r24, 0x13	; 19
    e0c0:	68 e1       	ldi	r22, 0x18	; 24
    e0c2:	0e 94 c3 6b 	call	0xd786	; 0xd786 <printi>
	
	WaitVsync(1);
    e0c6:	81 e0       	ldi	r24, 0x01	; 1
    e0c8:	90 e0       	ldi	r25, 0x00	; 0
    e0ca:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>

	u8 lvl = level+1;
    e0ce:	d0 90 89 0d 	lds	r13, 0x0D89
    e0d2:	d3 94       	inc	r13
		printrainbow(banneroff,12,PSTR("STAGE3333CLEARED"),0,0xC0,0x00,i%5);//printrainbow(6,12,strStageCleared,0,0xC0,0x00,i%5);

		for(u8 j=0;j<30;j++){vram[(13*30)+j]=BLANKT+RAM_TILES_COUNT;}//TODO ugly hack for print rainbow messing up??

		if(banneroff < 30-9){
		  if(lvl>9){printdigitoverlaid(banneroff+6,12,lvl/10,21,0xC0,BLANKT);}//printdigitoverlaid(13,12,lvl/10,21,0xC0,BLANKT);}
    e0d4:	8d 2d       	mov	r24, r13
    e0d6:	6a e0       	ldi	r22, 0x0A	; 10
    e0d8:	0e 94 03 77 	call	0xee06	; 0xee06 <__udivmodqi4>
    e0dc:	98 2e       	mov	r9, r24
		  printdigitoverlaid(banneroff+7,12,lvl%10,20,0xC0,BLANKT);
    e0de:	8d 2d       	mov	r24, r13
    e0e0:	0e 94 03 77 	call	0xee06	; 0xee06 <__udivmodqi4>
    e0e4:	a9 2e       	mov	r10, r25
    e0e6:	7d e1       	ldi	r23, 0x1D	; 29
    e0e8:	f7 2e       	mov	r15, r23
    e0ea:	bb 24       	eor	r11, r11

	u8 lvl = level+1;

	u8 banneroff = 29;
	for(u8 i=0;i<90;i++){
		for(u8 j=0;j<30;j++){vram[(12*30)+j]=BLANKT+RAM_TILES_COUNT;}//clear the blur
    e0ec:	6f e9       	ldi	r22, 0x9F	; 159
    e0ee:	86 2e       	mov	r8, r22
    e0f0:	49 c0       	rjmp	.+146    	; 0xe184 <VictoryMenu+0x2ac>
    e0f2:	89 92       	st	Y+, r8
    e0f4:	82 e0       	ldi	r24, 0x02	; 2
    e0f6:	c6 3a       	cpi	r28, 0xA6	; 166
    e0f8:	d8 07       	cpc	r29, r24
    e0fa:	d9 f7       	brne	.-10     	; 0xe0f2 <VictoryMenu+0x21a>

		printrainbow(banneroff,12,PSTR("STAGE3333CLEARED"),0,0xC0,0x00,i%5);//printrainbow(6,12,strStageCleared,0,0xC0,0x00,i%5);
    e0fc:	8b 2d       	mov	r24, r11
    e0fe:	65 e0       	ldi	r22, 0x05	; 5
    e100:	0e 94 03 77 	call	0xee06	; 0xee06 <__udivmodqi4>
    e104:	8f 2d       	mov	r24, r15
    e106:	6c e0       	ldi	r22, 0x0C	; 12
    e108:	4c e1       	ldi	r20, 0x1C	; 28
    e10a:	59 ea       	ldi	r21, 0xA9	; 169
    e10c:	20 e0       	ldi	r18, 0x00	; 0
    e10e:	00 ec       	ldi	r16, 0xC0	; 192
    e110:	ee 24       	eor	r14, r14
    e112:	c9 2e       	mov	r12, r25
    e114:	0e 94 af 64 	call	0xc95e	; 0xc95e <printrainbow>
    e118:	fe 01       	movw	r30, r28

		for(u8 j=0;j<30;j++){vram[(13*30)+j]=BLANKT+RAM_TILES_COUNT;}//TODO ugly hack for print rainbow messing up??
    e11a:	81 92       	st	Z+, r8
    e11c:	82 e0       	ldi	r24, 0x02	; 2
    e11e:	e4 3c       	cpi	r30, 0xC4	; 196
    e120:	f8 07       	cpc	r31, r24
    e122:	d9 f7       	brne	.-10     	; 0xe11a <VictoryMenu+0x242>

		if(banneroff < 30-9){
    e124:	84 e1       	ldi	r24, 0x14	; 20
    e126:	8f 15       	cp	r24, r15
    e128:	d0 f0       	brcs	.+52     	; 0xe15e <VictoryMenu+0x286>
		  if(lvl>9){printdigitoverlaid(banneroff+6,12,lvl/10,21,0xC0,BLANKT);}//printdigitoverlaid(13,12,lvl/10,21,0xC0,BLANKT);}
    e12a:	89 e0       	ldi	r24, 0x09	; 9
    e12c:	8d 15       	cp	r24, r13
    e12e:	50 f4       	brcc	.+20     	; 0xe144 <VictoryMenu+0x26c>
    e130:	8f 2d       	mov	r24, r15
    e132:	8a 5f       	subi	r24, 0xFA	; 250
    e134:	6c e0       	ldi	r22, 0x0C	; 12
    e136:	49 2d       	mov	r20, r9
    e138:	25 e1       	ldi	r18, 0x15	; 21
    e13a:	00 ec       	ldi	r16, 0xC0	; 192
    e13c:	51 e8       	ldi	r21, 0x81	; 129
    e13e:	e5 2e       	mov	r14, r21
    e140:	0e 94 ae 63 	call	0xc75c	; 0xc75c <printdigitoverlaid>
		  printdigitoverlaid(banneroff+7,12,lvl%10,20,0xC0,BLANKT);
    e144:	8f 2d       	mov	r24, r15
    e146:	89 5f       	subi	r24, 0xF9	; 249
    e148:	6c e0       	ldi	r22, 0x0C	; 12
    e14a:	4a 2d       	mov	r20, r10
    e14c:	24 e1       	ldi	r18, 0x14	; 20
    e14e:	00 ec       	ldi	r16, 0xC0	; 192
    e150:	31 e8       	ldi	r19, 0x81	; 129
    e152:	e3 2e       	mov	r14, r19
    e154:	0e 94 ae 63 	call	0xc75c	; 0xc75c <printdigitoverlaid>
	  }

	  if(banneroff > 7)
    e158:	87 e0       	ldi	r24, 0x07	; 7
    e15a:	8f 15       	cp	r24, r15
    e15c:	08 f4       	brcc	.+2      	; 0xe160 <VictoryMenu+0x288>
		  banneroff--;
    e15e:	fa 94       	dec	r15
    e160:	10 e0       	ldi	r17, 0x00	; 0
		  

	  for(u8 i=0;i<6;i++){
		  FillPad();
    e162:	0e 94 14 6e 	call	0xdc28	; 0xdc28 <FillPad>
		  if(StartDown()){
    e166:	0e 94 13 65 	call	0xca26	; 0xca26 <StartDown>
    e16a:	88 23       	and	r24, r24
    e16c:	71 f4       	brne	.+28     	; 0xe18a <VictoryMenu+0x2b2>
			WaitVsync(1);
			return;
			}

  
			 WaitVsync(1);
    e16e:	81 e0       	ldi	r24, 0x01	; 1
    e170:	90 e0       	ldi	r25, 0x00	; 0
    e172:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>

	  if(banneroff > 7)
		  banneroff--;
		  

	  for(u8 i=0;i<6;i++){
    e176:	1f 5f       	subi	r17, 0xFF	; 255
    e178:	16 30       	cpi	r17, 0x06	; 6
    e17a:	99 f7       	brne	.-26     	; 0xe162 <VictoryMenu+0x28a>
	WaitVsync(1);

	u8 lvl = level+1;

	u8 banneroff = 29;
	for(u8 i=0;i<90;i++){
    e17c:	b3 94       	inc	r11
    e17e:	8a e5       	ldi	r24, 0x5A	; 90
    e180:	b8 16       	cp	r11, r24
    e182:	19 f0       	breq	.+6      	; 0xe18a <VictoryMenu+0x2b2>
    e184:	c8 e8       	ldi	r28, 0x88	; 136
    e186:	d2 e0       	ldi	r29, 0x02	; 2
    e188:	b4 cf       	rjmp	.-152    	; 0xe0f2 <VictoryMenu+0x21a>

  
			 WaitVsync(1);
	  }
	}
	StopSong();
    e18a:	0e 94 f7 5a 	call	0xb5ee	; 0xb5ee <StopSong>
	WaitVsync(1);
    e18e:	81 e0       	ldi	r24, 0x01	; 1
    e190:	90 e0       	ldi	r25, 0x00	; 0
    e192:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
}
    e196:	cd b7       	in	r28, 0x3d	; 61
    e198:	de b7       	in	r29, 0x3e	; 62
    e19a:	ec e0       	ldi	r30, 0x0C	; 12
    e19c:	0c 94 58 77 	jmp	0xeeb0	; 0xeeb0 <__epilogue_restores__+0xc>

0000e1a0 <Logic>:
	  else*/
		  SetMapTile(x,y+shiftdown,t);//this is relative to tile set
	}
}

void Logic(){
    e1a0:	ef 92       	push	r14
    e1a2:	0f 93       	push	r16
	if(guijuststarted)
    e1a4:	80 91 6d 0d 	lds	r24, 0x0D6D
    e1a8:	88 23       	and	r24, r24
    e1aa:	09 f0       	breq	.+2      	; 0xe1ae <Logic+0xe>
    e1ac:	e5 c0       	rjmp	.+458    	; 0xe378 <Logic+0x1d8>
		return;
	
	if(!opentargets && !(gamestate & SCANNINGOPTIMUM)){//victory!
    e1ae:	80 91 87 0d 	lds	r24, 0x0D87
    e1b2:	88 23       	and	r24, r24
    e1b4:	09 f0       	breq	.+2      	; 0xe1b8 <Logic+0x18>
    e1b6:	41 c0       	rjmp	.+130    	; 0xe23a <Logic+0x9a>
    e1b8:	80 91 83 0d 	lds	r24, 0x0D83
    e1bc:	86 fd       	sbrc	r24, 6
    e1be:	3d c0       	rjmp	.+122    	; 0xe23a <Logic+0x9a>
		if(demoplaying)
    e1c0:	80 91 96 0d 	lds	r24, 0x0D96
    e1c4:	88 23       	and	r24, r24
    e1c6:	09 f0       	breq	.+2      	; 0xe1ca <Logic+0x2a>
    e1c8:	d7 c0       	rjmp	.+430    	; 0xe378 <Logic+0x1d8>
		  return;

		WaitVsync(5);//let box sfx finish
    e1ca:	85 e0       	ldi	r24, 0x05	; 5
    e1cc:	90 e0       	ldi	r25, 0x00	; 0
    e1ce:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
		VictoryMenu();
    e1d2:	0e 94 6c 6f 	call	0xded8	; 0xded8 <VictoryMenu>
	  FadeOut(2,true);
    e1d6:	82 e0       	ldi	r24, 0x02	; 2
    e1d8:	61 e0       	ldi	r22, 0x01	; 1
    e1da:	0e 94 bf 62 	call	0xc57e	; 0xc57e <FadeOut>

		level++;
    e1de:	20 91 89 0d 	lds	r18, 0x0D89
    e1e2:	2f 5f       	subi	r18, 0xFF	; 255
    e1e4:	20 93 89 0d 	sts	0x0D89, r18
	  if(level >= (numlevels-1)){
    e1e8:	40 91 88 0d 	lds	r20, 0x0D88
    e1ec:	30 e0       	ldi	r19, 0x00	; 0
    e1ee:	84 2f       	mov	r24, r20
    e1f0:	90 e0       	ldi	r25, 0x00	; 0
    e1f2:	01 97       	sbiw	r24, 0x01	; 1
    e1f4:	28 17       	cp	r18, r24
    e1f6:	39 07       	cpc	r19, r25
    e1f8:	7c f0       	brlt	.+30     	; 0xe218 <Logic+0x78>
		  level = numlevels-1;
    e1fa:	41 50       	subi	r20, 0x01	; 1
    e1fc:	40 93 89 0d 	sts	0x0D89, r20

#ifndef NOENDING
		 if(AllLevelsCompleted())
    e200:	0e 94 0a 6d 	call	0xda14	; 0xda14 <AllLevelsCompleted>
    e204:	88 23       	and	r24, r24
    e206:	11 f0       	breq	.+4      	; 0xe20c <Logic+0x6c>
				GameEnding();
    e208:	0e 94 87 6a 	call	0xd50e	; 0xd50e <GameEnding>
#endif
		 guijuststarted = true;
    e20c:	81 e0       	ldi	r24, 0x01	; 1
    e20e:	80 93 6d 0d 	sts	0x0D6D, r24
		 guistate = GLEVELSELECT;
    e212:	82 e0       	ldi	r24, 0x02	; 2
    e214:	80 93 91 0d 	sts	0x0D91, r24
				ChinaEnterance();
			else if(level == FIRSTJAPANLEVEL)
				JapanEnterance();
		}

	  WaitVsync(1);
    e218:	81 e0       	ldi	r24, 0x01	; 1
    e21a:	90 e0       	ldi	r25, 0x00	; 0
    e21c:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
	  LoadLevel(true,true,false,false,false,false);
    e220:	81 e0       	ldi	r24, 0x01	; 1
    e222:	61 e0       	ldi	r22, 0x01	; 1
    e224:	40 e0       	ldi	r20, 0x00	; 0
    e226:	20 e0       	ldi	r18, 0x00	; 0
    e228:	00 e0       	ldi	r16, 0x00	; 0
    e22a:	ee 24       	eor	r14, r14
    e22c:	0e 94 1b 6d 	call	0xda36	; 0xda36 <LoadLevel>
	  FadeIn(2,false);
    e230:	82 e0       	ldi	r24, 0x02	; 2
    e232:	60 e0       	ldi	r22, 0x00	; 0
    e234:	0e 94 b0 62 	call	0xc560	; 0xc560 <FadeIn>
    e238:	9f c0       	rjmp	.+318    	; 0xe378 <Logic+0x1d8>
	  return;
	}

	if(pftime)
    e23a:	80 91 8d 0d 	lds	r24, 0x0D8D
    e23e:	88 23       	and	r24, r24
    e240:	21 f0       	breq	.+8      	; 0xe24a <Logic+0xaa>
		pftime--;
    e242:	81 50       	subi	r24, 0x01	; 1
    e244:	80 93 8d 0d 	sts	0x0D8D, r24
    e248:	0b c0       	rjmp	.+22     	; 0xe260 <Logic+0xc0>
	else{
		pftime = PFRAMELENGTH;
    e24a:	87 e0       	ldi	r24, 0x07	; 7
    e24c:	80 93 8d 0d 	sts	0x0D8D, r24
		pframe = !pframe;
    e250:	90 e0       	ldi	r25, 0x00	; 0
    e252:	80 91 95 0d 	lds	r24, 0x0D95
    e256:	88 23       	and	r24, r24
    e258:	09 f4       	brne	.+2      	; 0xe25c <Logic+0xbc>
    e25a:	91 e0       	ldi	r25, 0x01	; 1
    e25c:	90 93 95 0d 	sts	0x0D95, r25
	}
	
	if(pstate & MOVE){
    e260:	90 91 7c 0d 	lds	r25, 0x0D7C
    e264:	94 ff       	sbrs	r25, 4
    e266:	82 c0       	rjmp	.+260    	; 0xe36c <Logic+0x1cc>
		if(poffset == 0){//user just pressed move, see if it's valid
    e268:	80 91 8c 0d 	lds	r24, 0x0D8C
    e26c:	88 23       	and	r24, r24
    e26e:	89 f4       	brne	.+34     	; 0xe292 <Logic+0xf2>
			if(!SokoMove()){
    e270:	0e 94 5a 66 	call	0xccb4	; 0xccb4 <SokoMove>
    e274:	88 23       	and	r24, r24
    e276:	69 f4       	brne	.+26     	; 0xe292 <Logic+0xf2>
			 pstate ^= MOVE;
    e278:	90 91 7c 0d 	lds	r25, 0x0D7C
    e27c:	80 e1       	ldi	r24, 0x10	; 16
    e27e:	98 27       	eor	r25, r24
    e280:	90 93 7c 0d 	sts	0x0D7C, r25
			 if(pstate & PUSH){pstate ^= PUSH;}
    e284:	95 ff       	sbrs	r25, 5
    e286:	78 c0       	rjmp	.+240    	; 0xe378 <Logic+0x1d8>
    e288:	80 e2       	ldi	r24, 0x20	; 32
    e28a:	89 27       	eor	r24, r25
    e28c:	80 93 7c 0d 	sts	0x0D7C, r24
    e290:	73 c0       	rjmp	.+230    	; 0xe378 <Logic+0x1d8>
		  }
		 
		}

		//if(poffset == 0 || poffset == 8){TriggerFx(SFX_STEP,SFX_STEP_VOL,false);}//play the foot step sound
	  poffset++;
    e292:	90 91 8c 0d 	lds	r25, 0x0D8C
    e296:	9f 5f       	subi	r25, 0xFF	; 255
    e298:	90 93 8c 0d 	sts	0x0D8C, r25
	  if(gamestate & FASTMOVE){poffset++;}
    e29c:	80 91 83 0d 	lds	r24, 0x0D83
    e2a0:	87 ff       	sbrs	r24, 7
    e2a2:	03 c0       	rjmp	.+6      	; 0xe2aa <Logic+0x10a>
    e2a4:	9f 5f       	subi	r25, 0xFF	; 255
    e2a6:	90 93 8c 0d 	sts	0x0D8C, r25
	  if(poffset > 15){//we moved a whole square so do whatever needs to be done
    e2aa:	80 91 8c 0d 	lds	r24, 0x0D8C
    e2ae:	80 31       	cpi	r24, 0x10	; 16
    e2b0:	08 f4       	brcc	.+2      	; 0xe2b4 <Logic+0x114>
    e2b2:	62 c0       	rjmp	.+196    	; 0xe378 <Logic+0x1d8>
		 poffset = 0;
    e2b4:	10 92 8c 0d 	sts	0x0D8C, r1
		 pstate ^= MOVE;
    e2b8:	80 91 7c 0d 	lds	r24, 0x0D7C
    e2bc:	90 e1       	ldi	r25, 0x10	; 16
    e2be:	89 27       	eor	r24, r25
    e2c0:	80 93 7c 0d 	sts	0x0D7C, r24
			if(gamestate & FASTMOVE)
				poffset++;
		 }
*/

		 if(pstate & UP)		 {py--;}
    e2c4:	80 ff       	sbrs	r24, 0
    e2c6:	04 c0       	rjmp	.+8      	; 0xe2d0 <Logic+0x130>
    e2c8:	80 91 76 0d 	lds	r24, 0x0D76
    e2cc:	81 50       	subi	r24, 0x01	; 1
    e2ce:	05 c0       	rjmp	.+10     	; 0xe2da <Logic+0x13a>
		 else if(pstate & DOWN){py++;}
    e2d0:	81 ff       	sbrs	r24, 1
    e2d2:	06 c0       	rjmp	.+12     	; 0xe2e0 <Logic+0x140>
    e2d4:	80 91 76 0d 	lds	r24, 0x0D76
    e2d8:	8f 5f       	subi	r24, 0xFF	; 255
    e2da:	80 93 76 0d 	sts	0x0D76, r24
    e2de:	09 c0       	rjmp	.+18     	; 0xe2f2 <Logic+0x152>
    e2e0:	90 91 92 0d 	lds	r25, 0x0D92
		 else if(pstate & LEFT){px--;}
    e2e4:	82 ff       	sbrs	r24, 2
    e2e6:	02 c0       	rjmp	.+4      	; 0xe2ec <Logic+0x14c>
    e2e8:	91 50       	subi	r25, 0x01	; 1
    e2ea:	01 c0       	rjmp	.+2      	; 0xe2ee <Logic+0x14e>
		 else/*pstate & RIGHT*/{px++;}
    e2ec:	9f 5f       	subi	r25, 0xFF	; 255
    e2ee:	90 93 92 0d 	sts	0x0D92, r25
			
		 moves++;
    e2f2:	80 91 77 0d 	lds	r24, 0x0D77
    e2f6:	90 91 78 0d 	lds	r25, 0x0D78
    e2fa:	01 96       	adiw	r24, 0x01	; 1
    e2fc:	90 93 78 0d 	sts	0x0D78, r25
    e300:	80 93 77 0d 	sts	0x0D77, r24
		 if(bx != 255){//a block was active during this move
    e304:	80 91 75 0d 	lds	r24, 0x0D75
    e308:	8f 3f       	cpi	r24, 0xFF	; 255
    e30a:	61 f1       	breq	.+88     	; 0xe364 <Logic+0x1c4>
			 pushes++;
    e30c:	80 91 84 0d 	lds	r24, 0x0D84
    e310:	90 91 85 0d 	lds	r25, 0x0D85
    e314:	01 96       	adiw	r24, 0x01	; 1
    e316:	90 93 85 0d 	sts	0x0D85, r25
    e31a:	80 93 84 0d 	sts	0x0D84, r24
			if(GetMapTile(bnx,bny)==TARGET){
    e31e:	00 91 90 0d 	lds	r16, 0x0D90
    e322:	e0 90 93 0d 	lds	r14, 0x0D93
    e326:	80 2f       	mov	r24, r16
    e328:	6e 2d       	mov	r22, r14
    e32a:	0e 94 84 65 	call	0xcb08	; 0xcb08 <GetMapTile>
    e32e:	82 30       	cpi	r24, 0x02	; 2
    e330:	a1 f4       	brne	.+40     	; 0xe35a <Logic+0x1ba>
				SetMapTile(bnx,bny,TBLOCK);//put the block over target in vram
    e332:	80 2f       	mov	r24, r16
    e334:	6e 2d       	mov	r22, r14
    e336:	44 e0       	ldi	r20, 0x04	; 4
    e338:	0e 94 34 66 	call	0xcc68	; 0xcc68 <SetMapTile>
				if(!(gamestate & SCANNINGOPTIMUM)){TriggerFx(SFX_TARGET,SFX_TARGET_VOL,false);}//play the block place sound
    e33c:	80 91 83 0d 	lds	r24, 0x0D83
    e340:	86 fd       	sbrc	r24, 6
    e342:	05 c0       	rjmp	.+10     	; 0xe34e <Logic+0x1ae>
    e344:	88 e2       	ldi	r24, 0x28	; 40
    e346:	6c e3       	ldi	r22, 0x3C	; 60
    e348:	40 e0       	ldi	r20, 0x00	; 0
    e34a:	0e 94 4c 5e 	call	0xbc98	; 0xbc98 <TriggerFx>
				opentargets--;//one less target left
    e34e:	80 91 87 0d 	lds	r24, 0x0D87
    e352:	81 50       	subi	r24, 0x01	; 1
    e354:	80 93 87 0d 	sts	0x0D87, r24
    e358:	05 c0       	rjmp	.+10     	; 0xe364 <Logic+0x1c4>
			}
			else
				SetMapTile(bnx,bny,BLOCK);
    e35a:	80 2f       	mov	r24, r16
    e35c:	6e 2d       	mov	r22, r14
    e35e:	43 e0       	ldi	r20, 0x03	; 3
    e360:	0e 94 34 66 	call	0xcc68	; 0xcc68 <SetMapTile>

				//SetMapTile(bnx,bny,bx=(BLOCK+(GetMapTile(bnx,bny)==TARGET)));
			 //if(bx==TBLOCK){opentargets--;}
		 }
		 bx = 255;//deactivate the block
    e364:	8f ef       	ldi	r24, 0xFF	; 255
    e366:	80 93 75 0d 	sts	0x0D75, r24
    e36a:	06 c0       	rjmp	.+12     	; 0xe378 <Logic+0x1d8>
	  }
	}
	else//pstate & MOVE
		if(pstate & PUSH){pstate ^= PUSH;}
    e36c:	95 ff       	sbrs	r25, 5
    e36e:	04 c0       	rjmp	.+8      	; 0xe378 <Logic+0x1d8>
    e370:	80 e2       	ldi	r24, 0x20	; 32
    e372:	98 27       	eor	r25, r24
    e374:	90 93 7c 0d 	sts	0x0D7C, r25

}
    e378:	0f 91       	pop	r16
    e37a:	ef 90       	pop	r14
    e37c:	08 95       	ret

0000e37e <CalculateOptimum>:
				}
		 }
	}//while true
}

void CalculateOptimum(u8 demonum){//scan through a demo and determine optimum moves/pushes(apparently solver program isn't perfect!)
    e37e:	a0 e0       	ldi	r26, 0x00	; 0
    e380:	b0 e0       	ldi	r27, 0x00	; 0
    e382:	e5 ec       	ldi	r30, 0xC5	; 197
    e384:	f1 e7       	ldi	r31, 0x71	; 113
    e386:	0c 94 41 77 	jmp	0xee82	; 0xee82 <__prologue_saves__+0x16>
    e38a:	98 2f       	mov	r25, r24
	int demopos = 0;
	u8 t,t2;	
	level = demonum;
    e38c:	80 93 89 0d 	sts	0x0D89, r24

	demoplaying = true;//avoid saving progress or anything else
    e390:	81 e0       	ldi	r24, 0x01	; 1
    e392:	80 93 96 0d 	sts	0x0D96, r24
    e396:	20 e0       	ldi	r18, 0x00	; 0
    e398:	30 e0       	ldi	r19, 0x00	; 0
    e39a:	07 c0       	rjmp	.+14     	; 0xe3aa <CalculateOptimum+0x2c>

	while(demonum--){//seek to start position
		while(pgm_read_byte(&Demos[demopos++]) != 17);//terminating number, 17 = UP,DOWN,UP,DOWN a useless move so the demos wont have it	
    e39c:	2f 5f       	subi	r18, 0xFF	; 255
    e39e:	3f 4f       	sbci	r19, 0xFF	; 255
    e3a0:	84 91       	lpm	r24, Z+
    e3a2:	31 96       	adiw	r30, 0x01	; 1
    e3a4:	81 31       	cpi	r24, 0x11	; 17
    e3a6:	d1 f7       	brne	.-12     	; 0xe39c <CalculateOptimum+0x1e>
    e3a8:	91 50       	subi	r25, 0x01	; 1
    e3aa:	e9 01       	movw	r28, r18
    e3ac:	c1 5e       	subi	r28, 0xE1	; 225
    e3ae:	d5 46       	sbci	r29, 0x65	; 101
	u8 t,t2;	
	level = demonum;

	demoplaying = true;//avoid saving progress or anything else

	while(demonum--){//seek to start position
    e3b0:	99 23       	and	r25, r25
    e3b2:	11 f0       	breq	.+4      	; 0xe3b8 <CalculateOptimum+0x3a>
    e3b4:	fe 01       	movw	r30, r28
    e3b6:	f2 cf       	rjmp	.-28     	; 0xe39c <CalculateOptimum+0x1e>
		while(pgm_read_byte(&Demos[demopos++]) != 17);//terminating number, 17 = UP,DOWN,UP,DOWN a useless move so the demos wont have it	
	}

	LoadLevel(false,false,false,false,false,true);
    e3b8:	80 e0       	ldi	r24, 0x00	; 0
    e3ba:	60 e0       	ldi	r22, 0x00	; 0
    e3bc:	40 e0       	ldi	r20, 0x00	; 0
    e3be:	20 e0       	ldi	r18, 0x00	; 0
    e3c0:	00 e0       	ldi	r16, 0x00	; 0
    e3c2:	ee 24       	eor	r14, r14
    e3c4:	e3 94       	inc	r14
    e3c6:	0e 94 1b 6d 	call	0xda36	; 0xda36 <LoadLevel>
	gamestate |= SCANNINGOPTIMUM;//gross hack to avoid triggering sounds etc.
    e3ca:	80 91 83 0d 	lds	r24, 0x0D83
    e3ce:	80 64       	ori	r24, 0x40	; 64
    e3d0:	80 93 83 0d 	sts	0x0D83, r24
    e3d4:	8e 01       	movw	r16, r28
			 else			 {t2=RIGHT|MOVE;}

			pstate = t2;
			poffset = 0;//setup move
			Logic();
			poffset = 16;//finish move
    e3d6:	f0 e1       	ldi	r31, 0x10	; 16
    e3d8:	df 2e       	mov	r13, r31
	LoadLevel(false,false,false,false,false,true);
	gamestate |= SCANNINGOPTIMUM;//gross hack to avoid triggering sounds etc.

	while(true){
		
		t = pgm_read_byte(&Demos[demopos++]);
    e3da:	f8 01       	movw	r30, r16
    e3dc:	94 91       	lpm	r25, Z+
	  if(!opentargets || t == 17)
    e3de:	80 91 87 0d 	lds	r24, 0x0D87
    e3e2:	88 23       	and	r24, r24
    e3e4:	79 f1       	breq	.+94     	; 0xe444 <CalculateOptimum+0xc6>
    e3e6:	91 31       	cpi	r25, 0x11	; 17
    e3e8:	69 f1       	breq	.+90     	; 0xe444 <CalculateOptimum+0xc6>
    e3ea:	c0 e0       	ldi	r28, 0x00	; 0
    e3ec:	d0 e0       	ldi	r29, 0x00	; 0
			goto DemoScanEnd;//just wanted to have 1 ;)

	  for(u8 i=0;i<4;i++){//each byte holds up to 4 moves
			if(opentargets){
			 t2 = (( t>>(i*2) ) & 3);//get 2 bits per move
    e3ee:	e9 2e       	mov	r14, r25
    e3f0:	ff 24       	eor	r15, r15
		t = pgm_read_byte(&Demos[demopos++]);
	  if(!opentargets || t == 17)
			goto DemoScanEnd;//just wanted to have 1 ;)

	  for(u8 i=0;i<4;i++){//each byte holds up to 4 moves
			if(opentargets){
    e3f2:	80 91 87 0d 	lds	r24, 0x0D87
    e3f6:	88 23       	and	r24, r24
    e3f8:	f1 f0       	breq	.+60     	; 0xe436 <CalculateOptimum+0xb8>
			 t2 = (( t>>(i*2) ) & 3);//get 2 bits per move
    e3fa:	c7 01       	movw	r24, r14
    e3fc:	0c 2e       	mov	r0, r28
    e3fe:	02 c0       	rjmp	.+4      	; 0xe404 <CalculateOptimum+0x86>
    e400:	95 95       	asr	r25
    e402:	87 95       	ror	r24
    e404:	0a 94       	dec	r0
    e406:	e2 f7       	brpl	.-8      	; 0xe400 <CalculateOptimum+0x82>
    e408:	83 70       	andi	r24, 0x03	; 3
			
			 if(t2==0)	  {t2=UP	|MOVE;}//convert 0,1,2,3 to UP,DOWN,LEFT,RIGHT
    e40a:	11 f4       	brne	.+4      	; 0xe410 <CalculateOptimum+0x92>
    e40c:	81 e1       	ldi	r24, 0x11	; 17
    e40e:	09 c0       	rjmp	.+18     	; 0xe422 <CalculateOptimum+0xa4>
			 else if(t2==1){t2=DOWN |MOVE;}
    e410:	81 30       	cpi	r24, 0x01	; 1
    e412:	11 f4       	brne	.+4      	; 0xe418 <CalculateOptimum+0x9a>
    e414:	82 e1       	ldi	r24, 0x12	; 18
    e416:	05 c0       	rjmp	.+10     	; 0xe422 <CalculateOptimum+0xa4>
			 else if(t2==2){t2=LEFT |MOVE;}
    e418:	82 30       	cpi	r24, 0x02	; 2
    e41a:	11 f0       	breq	.+4      	; 0xe420 <CalculateOptimum+0xa2>
    e41c:	88 e1       	ldi	r24, 0x18	; 24
    e41e:	01 c0       	rjmp	.+2      	; 0xe422 <CalculateOptimum+0xa4>
    e420:	84 e1       	ldi	r24, 0x14	; 20
			 else			 {t2=RIGHT|MOVE;}

			pstate = t2;
    e422:	80 93 7c 0d 	sts	0x0D7C, r24
			poffset = 0;//setup move
    e426:	10 92 8c 0d 	sts	0x0D8C, r1
			Logic();
    e42a:	0e 94 d0 70 	call	0xe1a0	; 0xe1a0 <Logic>
			poffset = 16;//finish move
    e42e:	d0 92 8c 0d 	sts	0x0D8C, r13
			Logic();
    e432:	0e 94 d0 70 	call	0xe1a0	; 0xe1a0 <Logic>
    e436:	22 96       	adiw	r28, 0x02	; 2
		
		t = pgm_read_byte(&Demos[demopos++]);
	  if(!opentargets || t == 17)
			goto DemoScanEnd;//just wanted to have 1 ;)

	  for(u8 i=0;i<4;i++){//each byte holds up to 4 moves
    e438:	c8 30       	cpi	r28, 0x08	; 8
    e43a:	d1 05       	cpc	r29, r1
    e43c:	d1 f6       	brne	.-76     	; 0xe3f2 <CalculateOptimum+0x74>
    e43e:	0f 5f       	subi	r16, 0xFF	; 255
    e440:	1f 4f       	sbci	r17, 0xFF	; 255
    e442:	cb cf       	rjmp	.-106    	; 0xe3da <CalculateOptimum+0x5c>
			}
		}//for
	}//while

DemoScanEnd://TODO FIX ME IF THERE IS "ENOUGH EXTRA SPACE" :D lol
	optimummoves = moves;
    e444:	80 91 77 0d 	lds	r24, 0x0D77
    e448:	90 91 78 0d 	lds	r25, 0x0D78
    e44c:	90 93 74 0d 	sts	0x0D74, r25
    e450:	80 93 73 0d 	sts	0x0D73, r24
	optimumpushes = pushes;
    e454:	80 91 84 0d 	lds	r24, 0x0D84
    e458:	90 91 85 0d 	lds	r25, 0x0D85
    e45c:	90 93 8f 0d 	sts	0x0D8F, r25
    e460:	80 93 8e 0d 	sts	0x0D8E, r24
	gamestate =0;//^= SCANNINGOPTIMUM;
    e464:	10 92 83 0d 	sts	0x0D83, r1
	demoplaying = false;
    e468:	10 92 96 0d 	sts	0x0D96, r1
}
    e46c:	cd b7       	in	r28, 0x3d	; 61
    e46e:	de b7       	in	r29, 0x3e	; 62
    e470:	e7 e0       	ldi	r30, 0x07	; 7
    e472:	0c 94 5d 77 	jmp	0xeeba	; 0xeeba <__epilogue_restores__+0x16>

0000e476 <PlayDemo>:
	//FillScreen(BLANKT);
	WaitVsync(1);
	return true;
}

bool PlayDemo(u8 demonum){//TODO, don't like this, should be part of input. oh well...
    e476:	6f 92       	push	r6
    e478:	7f 92       	push	r7
    e47a:	9f 92       	push	r9
    e47c:	af 92       	push	r10
    e47e:	bf 92       	push	r11
    e480:	cf 92       	push	r12
    e482:	df 92       	push	r13
    e484:	ef 92       	push	r14
    e486:	ff 92       	push	r15
    e488:	0f 93       	push	r16
    e48a:	1f 93       	push	r17
    e48c:	cf 93       	push	r28
    e48e:	df 93       	push	r29
    e490:	18 2f       	mov	r17, r24

	u8 t,t2;
	demoplaying = true;
    e492:	81 e0       	ldi	r24, 0x01	; 1
    e494:	80 93 96 0d 	sts	0x0D96, r24
	u8 speed = 0;
	u8 cwait = 30;
	u8 coff = 0;
	t2 = 0;

	HideSprites(0,MAX_SPRITES);
    e498:	80 e0       	ldi	r24, 0x00	; 0
    e49a:	64 e1       	ldi	r22, 0x14	; 20
    e49c:	0e 94 f5 63 	call	0xc7ea	; 0xc7ea <HideSprites>
	WaitVsync(1);
    e4a0:	81 e0       	ldi	r24, 0x01	; 1
    e4a2:	90 e0       	ldi	r25, 0x00	; 0
    e4a4:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>

	level = demonum;
    e4a8:	10 93 89 0d 	sts	0x0D89, r17
    e4ac:	20 e0       	ldi	r18, 0x00	; 0
    e4ae:	30 e0       	ldi	r19, 0x00	; 0
    e4b0:	07 c0       	rjmp	.+14     	; 0xe4c0 <PlayDemo+0x4a>

	for(u8 i=0;i<5;i++)
		restore[i] = GetMapTile(5+i,0);//save the tiles under the overlaid text	

	while(demonum--){//seek to start position
		while(pgm_read_byte(&Demos[demopos++]) != 17);//terminating number, 17 = UP,DOWN,UP,DOWN a useless move so the demos wont have it	
    e4b2:	2f 5f       	subi	r18, 0xFF	; 255
    e4b4:	3f 4f       	sbci	r19, 0xFF	; 255
    e4b6:	84 91       	lpm	r24, Z+
    e4b8:	31 96       	adiw	r30, 0x01	; 1
    e4ba:	81 31       	cpi	r24, 0x11	; 17
    e4bc:	d1 f7       	brne	.-12     	; 0xe4b2 <PlayDemo+0x3c>
    e4be:	11 50       	subi	r17, 0x01	; 1
    e4c0:	e9 01       	movw	r28, r18
    e4c2:	c1 5e       	subi	r28, 0xE1	; 225
    e4c4:	d5 46       	sbci	r29, 0x65	; 101


	for(u8 i=0;i<5;i++)
		restore[i] = GetMapTile(5+i,0);//save the tiles under the overlaid text	

	while(demonum--){//seek to start position
    e4c6:	11 23       	and	r17, r17
    e4c8:	11 f0       	breq	.+4      	; 0xe4ce <PlayDemo+0x58>
    e4ca:	fe 01       	movw	r30, r28
    e4cc:	f2 cf       	rjmp	.-28     	; 0xe4b2 <PlayDemo+0x3c>
		while(pgm_read_byte(&Demos[demopos++]) != 17);//terminating number, 17 = UP,DOWN,UP,DOWN a useless move so the demos wont have it	
	}
	LoadLevel(true,true,false,false,false,false);
    e4ce:	81 e0       	ldi	r24, 0x01	; 1
    e4d0:	61 e0       	ldi	r22, 0x01	; 1
    e4d2:	40 e0       	ldi	r20, 0x00	; 0
    e4d4:	20 e0       	ldi	r18, 0x00	; 0
    e4d6:	00 e0       	ldi	r16, 0x00	; 0
    e4d8:	ee 24       	eor	r14, r14
    e4da:	0e 94 1b 6d 	call	0xda36	; 0xda36 <LoadLevel>
	FadeIn(1,true);
    e4de:	81 e0       	ldi	r24, 0x01	; 1
    e4e0:	61 e0       	ldi	r22, 0x01	; 1
    e4e2:	0e 94 b0 62 	call	0xc560	; 0xc560 <FadeIn>
	Render();//draw player once
    e4e6:	0e 94 9a 67 	call	0xcf34	; 0xcf34 <Render>

	printrainbow(12,27,PSTR("5DEMO5"),24,0xC0,0,0);
    e4ea:	8c e0       	ldi	r24, 0x0C	; 12
    e4ec:	6b e1       	ldi	r22, 0x1B	; 27
    e4ee:	44 eb       	ldi	r20, 0xB4	; 180
    e4f0:	58 ea       	ldi	r21, 0xA8	; 168
    e4f2:	28 e1       	ldi	r18, 0x18	; 24
    e4f4:	00 ec       	ldi	r16, 0xC0	; 192
    e4f6:	cc 24       	eor	r12, r12
    e4f8:	0e 94 af 64 	call	0xc95e	; 0xc95e <printrainbow>
		//printramtilesoverlaid(10,0,strSpeed,16,1,1,1,1,0xC0);
		//printdigitoverlaid(18,0,speed+1,15,0xC0,bg);
	
	WaitVsync(60);
    e4fc:	8c e3       	ldi	r24, 0x3C	; 60
    e4fe:	90 e0       	ldi	r25, 0x00	; 0
    e500:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
    e504:	5e 01       	movw	r10, r28
    e506:	dd 24       	eor	r13, r13
    e508:	10 e0       	ldi	r17, 0x00	; 0
    e50a:	3e e1       	ldi	r19, 0x1E	; 30
    e50c:	e3 2e       	mov	r14, r19
    e50e:	ff 24       	eor	r15, r15

	while(true){
		
		t = pgm_read_byte(&Demos[demopos++]);
    e510:	f5 01       	movw	r30, r10
    e512:	94 91       	lpm	r25, Z+
	  if(!opentargets || t == 17){//demo end
    e514:	80 91 87 0d 	lds	r24, 0x0D87
    e518:	88 23       	and	r24, r24
    e51a:	81 f1       	breq	.+96     	; 0xe57c <PlayDemo+0x106>
    e51c:	91 31       	cpi	r25, 0x11	; 17
    e51e:	71 f1       	breq	.+92     	; 0xe57c <PlayDemo+0x106>
		  //for(u8 i=0;i<5;i++)
			 // SetMapTile(5+i,0,restore[i]);//restore the tiles under the overlaid text, otherwise ram tiles show through on screen fade
		  return DemoQuit();
    e520:	c0 e0       	ldi	r28, 0x00	; 0
    e522:	d0 e0       	ldi	r29, 0x00	; 0
	  }
	  
	  for(u8 i=0;i<4;i++){//each byte holds up to 4 moves
			if(opentargets){
			 t2 = (( t>>(i*2) ) & 3);//get 2 bits per move
    e524:	69 2e       	mov	r6, r25
    e526:	77 24       	eor	r7, r7
			 // SetMapTile(5+i,0,restore[i]);//restore the tiles under the overlaid text, otherwise ram tiles show through on screen fade
		  return DemoQuit();
	  }
	  
	  for(u8 i=0;i<4;i++){//each byte holds up to 4 moves
			if(opentargets){
    e528:	80 91 87 0d 	lds	r24, 0x0D87
    e52c:	88 23       	and	r24, r24
    e52e:	c1 f0       	breq	.+48     	; 0xe560 <PlayDemo+0xea>
			 t2 = (( t>>(i*2) ) & 3);//get 2 bits per move
    e530:	c3 01       	movw	r24, r6
    e532:	0c 2e       	mov	r0, r28
    e534:	02 c0       	rjmp	.+4      	; 0xe53a <PlayDemo+0xc4>
    e536:	95 95       	asr	r25
    e538:	87 95       	ror	r24
    e53a:	0a 94       	dec	r0
    e53c:	e2 f7       	brpl	.-8      	; 0xe536 <PlayDemo+0xc0>
    e53e:	83 70       	andi	r24, 0x03	; 3
			
			 if(t2==0)	  {t2=UP	|MOVE;}//convert 0,1,2,3 to UP,DOWN,LEFT,RIGHT
    e540:	19 f4       	brne	.+6      	; 0xe548 <PlayDemo+0xd2>
    e542:	21 e1       	ldi	r18, 0x11	; 17
    e544:	d2 2e       	mov	r13, r18
    e546:	0c c0       	rjmp	.+24     	; 0xe560 <PlayDemo+0xea>
			 else if(t2==1){t2=DOWN |MOVE;}
    e548:	81 30       	cpi	r24, 0x01	; 1
    e54a:	19 f4       	brne	.+6      	; 0xe552 <PlayDemo+0xdc>
    e54c:	92 e1       	ldi	r25, 0x12	; 18
    e54e:	d9 2e       	mov	r13, r25
    e550:	07 c0       	rjmp	.+14     	; 0xe560 <PlayDemo+0xea>
			 else if(t2==2){t2=LEFT |MOVE;}
    e552:	82 30       	cpi	r24, 0x02	; 2
    e554:	19 f0       	breq	.+6      	; 0xe55c <PlayDemo+0xe6>
    e556:	88 e1       	ldi	r24, 0x18	; 24
    e558:	d8 2e       	mov	r13, r24
    e55a:	02 c0       	rjmp	.+4      	; 0xe560 <PlayDemo+0xea>
    e55c:	04 e1       	ldi	r16, 0x14	; 20
    e55e:	d0 2e       	mov	r13, r16
			 else			 {t2=RIGHT|MOVE;}
			}

		 pstate = t2;
    e560:	d0 92 7c 0d 	sts	0x0D7C, r13
    e564:	cf 2c       	mov	r12, r15
    e566:	99 24       	eor	r9, r9
		  for(u8 i=0;i<16;i++){//1 demo tick equals 1 full movement

				FillPad();
    e568:	0e 94 14 6e 	call	0xdc28	; 0xdc28 <FillPad>
				if(StartDown()){//allow user to skip demo
    e56c:	0e 94 13 65 	call	0xca26	; 0xca26 <StartDown>
    e570:	88 23       	and	r24, r24
    e572:	a1 f0       	breq	.+40     	; 0xe59c <PlayDemo+0x126>
					WaitVsync(1);
    e574:	81 e0       	ldi	r24, 0x01	; 1
    e576:	90 e0       	ldi	r25, 0x00	; 0
    e578:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
					/*for(u8 i=0;i<5;i++)
						SetMapTile(7+i,0,restore[i]);//restore the tiles under the overlaid text, otherwise ram tiles show through on screen fade
					*/
					return DemoQuit();
    e57c:	0e 94 15 69 	call	0xd22a	; 0xd22a <DemoQuit>
			  else
				  cwait--;	
				}
		 }
	}//while true
}
    e580:	df 91       	pop	r29
    e582:	cf 91       	pop	r28
    e584:	1f 91       	pop	r17
    e586:	0f 91       	pop	r16
    e588:	ff 90       	pop	r15
    e58a:	ef 90       	pop	r14
    e58c:	df 90       	pop	r13
    e58e:	cf 90       	pop	r12
    e590:	bf 90       	pop	r11
    e592:	af 90       	pop	r10
    e594:	9f 90       	pop	r9
    e596:	7f 90       	pop	r7
    e598:	6f 90       	pop	r6
    e59a:	08 95       	ret
						SetMapTile(7+i,0,restore[i]);//restore the tiles under the overlaid text, otherwise ram tiles show through on screen fade
					*/
					return DemoQuit();
				}
			
			Logic();
    e59c:	0e 94 d0 70 	call	0xe1a0	; 0xe1a0 <Logic>
	
			if(padstate & BTN_SR && !(oldpadstate & BTN_SR)){//fast forward
    e5a0:	20 91 70 0d 	lds	r18, 0x0D70
    e5a4:	30 91 71 0d 	lds	r19, 0x0D71
    e5a8:	33 ff       	sbrs	r19, 3
    e5aa:	0c c0       	rjmp	.+24     	; 0xe5c4 <PlayDemo+0x14e>
    e5ac:	80 91 6e 0d 	lds	r24, 0x0D6E
    e5b0:	90 91 6f 0d 	lds	r25, 0x0D6F
    e5b4:	93 fd       	sbrc	r25, 3
    e5b6:	06 c0       	rjmp	.+12     	; 0xe5c4 <PlayDemo+0x14e>
				if(speed == 0)
    e5b8:	11 23       	and	r17, r17
    e5ba:	91 f0       	breq	.+36     	; 0xe5e0 <PlayDemo+0x16a>
					speed = 1;
				else if(speed == 1)
    e5bc:	11 30       	cpi	r17, 0x01	; 1
    e5be:	a1 f0       	breq	.+40     	; 0xe5e8 <PlayDemo+0x172>
    e5c0:	17 e0       	ldi	r17, 0x07	; 7
    e5c2:	13 c0       	rjmp	.+38     	; 0xe5ea <PlayDemo+0x174>

				//printdigitoverlaid(18,0,speed+1,15,0xC0,bg);

				Render();
			 }
			else if(padstate & BTN_SL && !(oldpadstate & BTN_SL)){//slow down
    e5c4:	32 ff       	sbrs	r19, 2
    e5c6:	13 c0       	rjmp	.+38     	; 0xe5ee <PlayDemo+0x178>
    e5c8:	80 91 6e 0d 	lds	r24, 0x0D6E
    e5cc:	90 91 6f 0d 	lds	r25, 0x0D6F
    e5d0:	92 fd       	sbrc	r25, 2
    e5d2:	0d c0       	rjmp	.+26     	; 0xe5ee <PlayDemo+0x178>
				if(speed == 1)
    e5d4:	11 30       	cpi	r17, 0x01	; 1
    e5d6:	11 f4       	brne	.+4      	; 0xe5dc <PlayDemo+0x166>
    e5d8:	10 e0       	ldi	r17, 0x00	; 0
    e5da:	07 c0       	rjmp	.+14     	; 0xe5ea <PlayDemo+0x174>
					speed = 0;
				else if(speed == 3)
    e5dc:	13 30       	cpi	r17, 0x03	; 3
    e5de:	11 f4       	brne	.+4      	; 0xe5e4 <PlayDemo+0x16e>
    e5e0:	11 e0       	ldi	r17, 0x01	; 1
    e5e2:	03 c0       	rjmp	.+6      	; 0xe5ea <PlayDemo+0x174>
					speed = 1;
					else if(speed == 7)
    e5e4:	17 30       	cpi	r17, 0x07	; 7
    e5e6:	09 f4       	brne	.+2      	; 0xe5ea <PlayDemo+0x174>
    e5e8:	13 e0       	ldi	r17, 0x03	; 3
					speed = 3;

				//printdigitoverlaid(18,0,speed+1,15,0xC0,bg);

				Render();
    e5ea:	0e 94 9a 67 	call	0xcf34	; 0xcf34 <Render>
    e5ee:	00 e0       	ldi	r16, 0x00	; 0
    e5f0:	03 c0       	rjmp	.+6      	; 0xe5f8 <PlayDemo+0x182>
			 }			  

				for(u8 j=0;j<speed;j++){
				Logic();
    e5f2:	0e 94 d0 70 	call	0xe1a0	; 0xe1a0 <Logic>
				//printdigitoverlaid(18,0,speed+1,15,0xC0,bg);

				Render();
			 }			  

				for(u8 j=0;j<speed;j++){
    e5f6:	0f 5f       	subi	r16, 0xFF	; 255
    e5f8:	01 17       	cp	r16, r17
    e5fa:	d8 f3       	brcs	.-10     	; 0xe5f2 <PlayDemo+0x17c>
				Logic();
				i++;
			}

			spritecount = 0;
    e5fc:	10 92 79 0d 	sts	0x0D79, r1
			Render();
    e600:	0e 94 9a 67 	call	0xcf34	; 0xcf34 <Render>

				
			if(!cwait){//handle colored text
    e604:	ee 20       	and	r14, r14
    e606:	99 f4       	brne	.+38     	; 0xe62e <PlayDemo+0x1b8>
				  cwait = 30;
				  printrainbow(12,27,PSTR("5DEMO5"),24,0xC0,0,coff++);
    e608:	f3 94       	inc	r15
    e60a:	8c e0       	ldi	r24, 0x0C	; 12
    e60c:	6b e1       	ldi	r22, 0x1B	; 27
    e60e:	4d ea       	ldi	r20, 0xAD	; 173
    e610:	58 ea       	ldi	r21, 0xA8	; 168
    e612:	28 e1       	ldi	r18, 0x18	; 24
    e614:	00 ec       	ldi	r16, 0xC0	; 192
    e616:	0e 94 af 64 	call	0xc95e	; 0xc95e <printrainbow>
				 if(coff > 3){coff = 0;}
    e61a:	f3 e0       	ldi	r31, 0x03	; 3
    e61c:	ff 15       	cp	r31, r15
    e61e:	20 f4       	brcc	.+8      	; 0xe628 <PlayDemo+0x1b2>
    e620:	be e1       	ldi	r27, 0x1E	; 30
    e622:	eb 2e       	mov	r14, r27
    e624:	ff 24       	eor	r15, r15
    e626:	04 c0       	rjmp	.+8      	; 0xe630 <PlayDemo+0x1ba>
    e628:	ae e1       	ldi	r26, 0x1E	; 30
    e62a:	ea 2e       	mov	r14, r26
    e62c:	01 c0       	rjmp	.+2      	; 0xe630 <PlayDemo+0x1ba>
			  }
			  else
				  cwait--;	
    e62e:	ea 94       	dec	r14
    e630:	1f 5f       	subi	r17, 0xFF	; 255
			 else if(t2==2){t2=LEFT |MOVE;}
			 else			 {t2=RIGHT|MOVE;}
			}

		 pstate = t2;
		  for(u8 i=0;i<16;i++){//1 demo tick equals 1 full movement
    e632:	91 0e       	add	r9, r17
    e634:	11 50       	subi	r17, 0x01	; 1
    e636:	8f e0       	ldi	r24, 0x0F	; 15
    e638:	89 15       	cp	r24, r9
    e63a:	10 f0       	brcs	.+4      	; 0xe640 <PlayDemo+0x1ca>
    e63c:	cf 2c       	mov	r12, r15
    e63e:	94 cf       	rjmp	.-216    	; 0xe568 <PlayDemo+0xf2>
    e640:	22 96       	adiw	r28, 0x02	; 2
		  //for(u8 i=0;i<5;i++)
			 // SetMapTile(5+i,0,restore[i]);//restore the tiles under the overlaid text, otherwise ram tiles show through on screen fade
		  return DemoQuit();
	  }
	  
	  for(u8 i=0;i<4;i++){//each byte holds up to 4 moves
    e642:	c8 30       	cpi	r28, 0x08	; 8
    e644:	d1 05       	cpc	r29, r1
    e646:	09 f0       	breq	.+2      	; 0xe64a <PlayDemo+0x1d4>
    e648:	6f cf       	rjmp	.-290    	; 0xe528 <PlayDemo+0xb2>
    e64a:	08 94       	sec
    e64c:	a1 1c       	adc	r10, r1
    e64e:	b1 1c       	adc	r11, r1
    e650:	5f cf       	rjmp	.-322    	; 0xe510 <PlayDemo+0x9a>

0000e652 <AttractMode>:
	guijuststarted = true;
	guistate = state;
}

void AttractMode(){
	if(demonum==NUMDEMOS){demonum = 0;}
    e652:	80 91 72 0d 	lds	r24, 0x0D72
    e656:	82 33       	cpi	r24, 0x32	; 50
    e658:	11 f4       	brne	.+4      	; 0xe65e <AttractMode+0xc>
    e65a:	10 92 72 0d 	sts	0x0D72, r1
	PlayDemo(demonum++);
    e65e:	80 91 72 0d 	lds	r24, 0x0D72
    e662:	8f 5f       	subi	r24, 0xFF	; 255
    e664:	80 93 72 0d 	sts	0x0D72, r24
    e668:	81 50       	subi	r24, 0x01	; 1
    e66a:	0e 94 3b 72 	call	0xe476	; 0xe476 <PlayDemo>
}
    e66e:	08 95       	ret

0000e670 <InGameMenu>:
	}
	
}


void InGameMenu(){
    e670:	a0 e0       	ldi	r26, 0x00	; 0
    e672:	b0 e0       	ldi	r27, 0x00	; 0
    e674:	ee e3       	ldi	r30, 0x3E	; 62
    e676:	f3 e7       	ldi	r31, 0x73	; 115
    e678:	0c 94 3f 77 	jmp	0xee7e	; 0xee7e <__prologue_saves__+0x12>
	cursorpos = 0;
    e67c:	10 92 8a 0d 	sts	0x0D8A, r1
	u8 oldgfx,oldtrack;
	oldgfx = tileset;
    e680:	c0 90 86 0d 	lds	r12, 0x0D86
	oldtrack = tracknum;
    e684:	b0 90 82 0d 	lds	r11, 0x0D82
    e688:	c0 e8       	ldi	r28, 0x80	; 128
    e68a:	d3 e0       	ldi	r29, 0x03	; 3
    e68c:	05 e0       	ldi	r16, 0x05	; 5
    e68e:	0e c0       	rjmp	.+28     	; 0xe6ac <InGameMenu+0x3c>
	u8 gfxnum = tileset;
	//u8 restore[16];
	int off = 14*64;//0;
	for(u8 y=5;y<10;y++)
	for(u8 x=5;x<10;x++)
		ram_tiles[off++] = GetMapTile(x,y);//restore[off++] = GetMapTile(x,y);
    e690:	81 2f       	mov	r24, r17
    e692:	60 2f       	mov	r22, r16
    e694:	0e 94 84 65 	call	0xcb08	; 0xcb08 <GetMapTile>
    e698:	f7 01       	movw	r30, r14
    e69a:	81 93       	st	Z+, r24
    e69c:	7f 01       	movw	r14, r30
	oldtrack = tracknum;
	u8 gfxnum = tileset;
	//u8 restore[16];
	int off = 14*64;//0;
	for(u8 y=5;y<10;y++)
	for(u8 x=5;x<10;x++)
    e69e:	1f 5f       	subi	r17, 0xFF	; 255
    e6a0:	1a 30       	cpi	r17, 0x0A	; 10
    e6a2:	b1 f7       	brne	.-20     	; 0xe690 <InGameMenu+0x20>
    e6a4:	25 96       	adiw	r28, 0x05	; 5
	oldgfx = tileset;
	oldtrack = tracknum;
	u8 gfxnum = tileset;
	//u8 restore[16];
	int off = 14*64;//0;
	for(u8 y=5;y<10;y++)
    e6a6:	0f 5f       	subi	r16, 0xFF	; 255
    e6a8:	0a 30       	cpi	r16, 0x0A	; 10
    e6aa:	41 f0       	breq	.+16     	; 0xe6bc <InGameMenu+0x4c>
    e6ac:	f8 eb       	ldi	r31, 0xB8	; 184
    e6ae:	ef 2e       	mov	r14, r31
    e6b0:	f4 e0       	ldi	r31, 0x04	; 4
    e6b2:	ff 2e       	mov	r15, r31
    e6b4:	ec 0e       	add	r14, r28
    e6b6:	fd 1e       	adc	r15, r29
    e6b8:	15 e0       	ldi	r17, 0x05	; 5
    e6ba:	ea cf       	rjmp	.-44     	; 0xe690 <InGameMenu+0x20>
	for(u8 x=5;x<10;x++)
		ram_tiles[off++] = GetMapTile(x,y);//restore[off++] = GetMapTile(x,y);
	
	HideSprites(0,MAX_SPRITES);
    e6bc:	80 e0       	ldi	r24, 0x00	; 0
    e6be:	64 e1       	ldi	r22, 0x14	; 20
    e6c0:	0e 94 f5 63 	call	0xc7ea	; 0xc7ea <HideSprites>
	DrawOpeningMenu  (10,10,8,8,0,true);
    e6c4:	8a e0       	ldi	r24, 0x0A	; 10
    e6c6:	6a e0       	ldi	r22, 0x0A	; 10
    e6c8:	48 e0       	ldi	r20, 0x08	; 8
    e6ca:	28 e0       	ldi	r18, 0x08	; 8
    e6cc:	00 e0       	ldi	r16, 0x00	; 0
    e6ce:	10 e0       	ldi	r17, 0x00	; 0
    e6d0:	ee 24       	eor	r14, r14
    e6d2:	e3 94       	inc	r14
    e6d4:	0e 94 fd 69 	call	0xd3fa	; 0xd3fa <DrawOpeningMenu>
	WaitVsync(1);
    e6d8:	81 e0       	ldi	r24, 0x01	; 1
    e6da:	90 e0       	ldi	r25, 0x00	; 0
    e6dc:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
	print(11,11,PSTR("BACK"));//strGameMenu1);
    e6e0:	8b e0       	ldi	r24, 0x0B	; 11
    e6e2:	6b e0       	ldi	r22, 0x0B	; 11
    e6e4:	49 e8       	ldi	r20, 0x89	; 137
    e6e6:	59 ea       	ldi	r21, 0xA9	; 169
    e6e8:	0e 94 69 6a 	call	0xd4d2	; 0xd4d2 <print>
	print(11,12,PSTR("RETRY"));
    e6ec:	8b e0       	ldi	r24, 0x0B	; 11
    e6ee:	6c e0       	ldi	r22, 0x0C	; 12
    e6f0:	43 e8       	ldi	r20, 0x83	; 131
    e6f2:	59 ea       	ldi	r21, 0xA9	; 169
    e6f4:	0e 94 69 6a 	call	0xd4d2	; 0xd4d2 <print>
	print(11,13,PSTR("GIVEUP"));
    e6f8:	8b e0       	ldi	r24, 0x0B	; 11
    e6fa:	6d e0       	ldi	r22, 0x0D	; 13
    e6fc:	4c e7       	ldi	r20, 0x7C	; 124
    e6fe:	59 ea       	ldi	r21, 0xA9	; 169
    e700:	0e 94 69 6a 	call	0xd4d2	; 0xd4d2 <print>
	print(11,14,PSTR("SOLVE"));
    e704:	8b e0       	ldi	r24, 0x0B	; 11
    e706:	6e e0       	ldi	r22, 0x0E	; 14
    e708:	46 e7       	ldi	r20, 0x76	; 118
    e70a:	59 ea       	ldi	r21, 0xA9	; 169
    e70c:	0e 94 69 6a 	call	0xd4d2	; 0xd4d2 <print>
	print(11,15,PSTR("BGM"));
    e710:	8b e0       	ldi	r24, 0x0B	; 11
    e712:	6f e0       	ldi	r22, 0x0F	; 15
    e714:	42 e7       	ldi	r20, 0x72	; 114
    e716:	59 ea       	ldi	r21, 0xA9	; 169
    e718:	0e 94 69 6a 	call	0xd4d2	; 0xd4d2 <print>
	print(11,16,PSTR("GFX"));
    e71c:	8b e0       	ldi	r24, 0x0B	; 11
    e71e:	60 e1       	ldi	r22, 0x10	; 16
    e720:	4e e6       	ldi	r20, 0x6E	; 110
    e722:	59 ea       	ldi	r21, 0xA9	; 169
    e724:	0e 94 69 6a 	call	0xd4d2	; 0xd4d2 <print>
	print(11,17,PSTR("QUIT"));
    e728:	8b e0       	ldi	r24, 0x0B	; 11
    e72a:	61 e1       	ldi	r22, 0x11	; 17
    e72c:	49 e6       	ldi	r20, 0x69	; 105
    e72e:	59 ea       	ldi	r21, 0xA9	; 169
    e730:	0e 94 69 6a 	call	0xd4d2	; 0xd4d2 <print>
    e734:	dc 2c       	mov	r13, r12
	//now replace those ugly blocky corners with rounded ram tiles
	//...
	while(true){
		FillPad();
    e736:	0e 94 14 6e 	call	0xdc28	; 0xdc28 <FillPad>
		if(UpDown() && cursorpos > 0)	  {cursorpos--;}
    e73a:	0e 94 38 65 	call	0xca70	; 0xca70 <UpDown>
    e73e:	88 23       	and	r24, r24
    e740:	31 f0       	breq	.+12     	; 0xe74e <InGameMenu+0xde>
    e742:	80 91 8a 0d 	lds	r24, 0x0D8A
    e746:	88 23       	and	r24, r24
    e748:	11 f0       	breq	.+4      	; 0xe74e <InGameMenu+0xde>
    e74a:	81 50       	subi	r24, 0x01	; 1
    e74c:	09 c0       	rjmp	.+18     	; 0xe760 <InGameMenu+0xf0>
	  else if(DownDown() && cursorpos < 6){cursorpos++;}
    e74e:	0e 94 4b 65 	call	0xca96	; 0xca96 <DownDown>
    e752:	88 23       	and	r24, r24
    e754:	41 f0       	breq	.+16     	; 0xe766 <InGameMenu+0xf6>
    e756:	80 91 8a 0d 	lds	r24, 0x0D8A
    e75a:	86 30       	cpi	r24, 0x06	; 6
    e75c:	20 f4       	brcc	.+8      	; 0xe766 <InGameMenu+0xf6>
    e75e:	8f 5f       	subi	r24, 0xFF	; 255
    e760:	80 93 8a 0d 	sts	0x0D8A, r24
    e764:	b5 c0       	rjmp	.+362    	; 0xe8d0 <InGameMenu+0x260>
	  else if(StartDown()){
    e766:	0e 94 13 65 	call	0xca26	; 0xca26 <StartDown>
    e76a:	88 23       	and	r24, r24
    e76c:	09 f4       	brne	.+2      	; 0xe770 <InGameMenu+0x100>
    e76e:	b0 c0       	rjmp	.+352    	; 0xe8d0 <InGameMenu+0x260>
    e770:	c0 e8       	ldi	r28, 0x80	; 128
    e772:	d3 e0       	ldi	r29, 0x03	; 3
    e774:	05 e0       	ldi	r16, 0x05	; 5
    e776:	0e c0       	rjmp	.+28     	; 0xe794 <InGameMenu+0x124>
	  //time to restore vram
		  off = 14*64;//0;
			for(u8 y=5;y<10;y++)
			for(u8 x=5;x<10;x++)
			 SetMapTile(x,y,ram_tiles[off++]);//restore[off++]);
    e778:	81 2f       	mov	r24, r17
    e77a:	60 2f       	mov	r22, r16
    e77c:	f7 01       	movw	r30, r14
    e77e:	41 91       	ld	r20, Z+
    e780:	7f 01       	movw	r14, r30
    e782:	0e 94 34 66 	call	0xcc68	; 0xcc68 <SetMapTile>
	  else if(DownDown() && cursorpos < 6){cursorpos++;}
	  else if(StartDown()){
	  //time to restore vram
		  off = 14*64;//0;
			for(u8 y=5;y<10;y++)
			for(u8 x=5;x<10;x++)
    e786:	1f 5f       	subi	r17, 0xFF	; 255
    e788:	1a 30       	cpi	r17, 0x0A	; 10
    e78a:	b1 f7       	brne	.-20     	; 0xe778 <InGameMenu+0x108>
    e78c:	25 96       	adiw	r28, 0x05	; 5
		if(UpDown() && cursorpos > 0)	  {cursorpos--;}
	  else if(DownDown() && cursorpos < 6){cursorpos++;}
	  else if(StartDown()){
	  //time to restore vram
		  off = 14*64;//0;
			for(u8 y=5;y<10;y++)
    e78e:	0f 5f       	subi	r16, 0xFF	; 255
    e790:	0a 30       	cpi	r16, 0x0A	; 10
    e792:	41 f0       	breq	.+16     	; 0xe7a4 <InGameMenu+0x134>
    e794:	e8 eb       	ldi	r30, 0xB8	; 184
    e796:	ee 2e       	mov	r14, r30
    e798:	e4 e0       	ldi	r30, 0x04	; 4
    e79a:	fe 2e       	mov	r15, r30
    e79c:	ec 0e       	add	r14, r28
    e79e:	fd 1e       	adc	r15, r29
    e7a0:	15 e0       	ldi	r17, 0x05	; 5
    e7a2:	ea cf       	rjmp	.-44     	; 0xe778 <InGameMenu+0x108>
			for(u8 x=5;x<10;x++)
			 SetMapTile(x,y,ram_tiles[off++]);//restore[off++]);
			
		 guijuststarted = false;
    e7a4:	10 92 6d 0d 	sts	0x0D6D, r1
		 guistate = 0;
    e7a8:	10 92 91 0d 	sts	0x0D91, r1
		 if(cursorpos == 0){//back
    e7ac:	10 91 8a 0d 	lds	r17, 0x0D8A
    e7b0:	11 23       	and	r17, r17
    e7b2:	29 f4       	brne	.+10     	; 0xe7be <InGameMenu+0x14e>
			 tracknum = oldtrack;
    e7b4:	b0 92 82 0d 	sts	0x0D82, r11
			tileset = oldgfx;
    e7b8:	c0 92 86 0d 	sts	0x0D86, r12
    e7bc:	34 c1       	rjmp	.+616    	; 0xea26 <InGameMenu+0x3b6>
		 }
		 else if(cursorpos == 1){//retry
    e7be:	11 30       	cpi	r17, 0x01	; 1
    e7c0:	19 f4       	brne	.+6      	; 0xe7c8 <InGameMenu+0x158>
			  RetryLevel();
    e7c2:	0e 94 f4 6d 	call	0xdbe8	; 0xdbe8 <RetryLevel>
    e7c6:	2f c1       	rjmp	.+606    	; 0xea26 <InGameMenu+0x3b6>
		 }
		 else if(cursorpos == 2){//give up
    e7c8:	12 30       	cpi	r17, 0x02	; 2
    e7ca:	41 f4       	brne	.+16     	; 0xe7dc <InGameMenu+0x16c>
			DoScreenOutEffect();
    e7cc:	0e 94 c6 68 	call	0xd18c	; 0xd18c <DoScreenOutEffect>
			guijuststarted = true;
    e7d0:	81 e0       	ldi	r24, 0x01	; 1
    e7d2:	80 93 6d 0d 	sts	0x0D6D, r24
			  guistate = GLEVELSELECT;
    e7d6:	10 93 91 0d 	sts	0x0D91, r17
    e7da:	25 c1       	rjmp	.+586    	; 0xea26 <InGameMenu+0x3b6>
		 }
		 else if(cursorpos == 3){//solve
    e7dc:	13 30       	cpi	r17, 0x03	; 3
    e7de:	79 f4       	brne	.+30     	; 0xe7fe <InGameMenu+0x18e>
			  // DoScreenOutEffect();
			PlayDemo(level);
    e7e0:	80 91 89 0d 	lds	r24, 0x0D89
    e7e4:	0e 94 3b 72 	call	0xe476	; 0xe476 <PlayDemo>
			HideSprites(0,MAX_SPRITES);
    e7e8:	80 e0       	ldi	r24, 0x00	; 0
    e7ea:	64 e1       	ldi	r22, 0x14	; 20
    e7ec:	0e 94 f5 63 	call	0xc7ea	; 0xc7ea <HideSprites>
			guijuststarted = true;
    e7f0:	81 e0       	ldi	r24, 0x01	; 1
    e7f2:	80 93 6d 0d 	sts	0x0D6D, r24
			guistate = GLEVELSELECT;
    e7f6:	82 e0       	ldi	r24, 0x02	; 2
    e7f8:	80 93 91 0d 	sts	0x0D91, r24
    e7fc:	14 c1       	rjmp	.+552    	; 0xea26 <InGameMenu+0x3b6>
		 }
		 else if(cursorpos == 4){//bgm
    e7fe:	14 30       	cpi	r17, 0x04	; 4
    e800:	09 f0       	breq	.+2      	; 0xe804 <InGameMenu+0x194>
    e802:	43 c0       	rjmp	.+134    	; 0xe88a <InGameMenu+0x21a>
			 StopSong();
    e804:	0e 94 f7 5a 	call	0xb5ee	; 0xb5ee <StopSong>
			WaitVsync(2);//seems like songs are messed up somehow
    e808:	82 e0       	ldi	r24, 0x02	; 2
    e80a:	90 e0       	ldi	r25, 0x00	; 0
    e80c:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>

			musicplaying = true;
    e810:	51 e0       	ldi	r21, 0x01	; 1
    e812:	50 93 01 01 	sts	0x0101, r21

				musicpreference = true;
    e816:	50 93 e5 0c 	sts	0x0CE5, r21
			preferredtrack = tracknum;
    e81a:	40 91 82 0d 	lds	r20, 0x0D82
    e81e:	40 93 e7 0c 	sts	0x0CE7, r20

			if(musicoff && (tracknum == tileset+1)){//user has selected the default song, so now lets the music be default again
    e822:	80 91 e4 0c 	lds	r24, 0x0CE4
    e826:	88 23       	and	r24, r24
    e828:	69 f0       	breq	.+26     	; 0xe844 <InGameMenu+0x1d4>
    e82a:	24 2f       	mov	r18, r20
    e82c:	30 e0       	ldi	r19, 0x00	; 0
    e82e:	80 91 86 0d 	lds	r24, 0x0D86
    e832:	90 e0       	ldi	r25, 0x00	; 0
    e834:	01 96       	adiw	r24, 0x01	; 1
    e836:	28 17       	cp	r18, r24
    e838:	39 07       	cpc	r19, r25
    e83a:	21 f4       	brne	.+8      	; 0xe844 <InGameMenu+0x1d4>
					musicoff = false;
    e83c:	10 92 e4 0c 	sts	0x0CE4, r1
				musicpreference = false;
    e840:	10 92 e5 0c 	sts	0x0CE5, r1
				musicplaying = true;
			}

			if(tracknum == 1)	  {StartSong(AmericaSong);}
    e844:	41 30       	cpi	r20, 0x01	; 1
    e846:	19 f4       	brne	.+6      	; 0xe84e <InGameMenu+0x1de>
    e848:	8d e8       	ldi	r24, 0x8D	; 141
    e84a:	99 e6       	ldi	r25, 0x69	; 105
    e84c:	04 c0       	rjmp	.+8      	; 0xe856 <InGameMenu+0x1e6>
				else if(tracknum == 2){StartSong(EgyptSong);}
    e84e:	42 30       	cpi	r20, 0x02	; 2
    e850:	29 f4       	brne	.+10     	; 0xe85c <InGameMenu+0x1ec>
    e852:	8c ee       	ldi	r24, 0xEC	; 236
    e854:	9d e6       	ldi	r25, 0x6D	; 109
    e856:	0e 94 ce 5a 	call	0xb59c	; 0xb59c <StartSong>
    e85a:	e5 c0       	rjmp	.+458    	; 0xea26 <InGameMenu+0x3b6>
				else if(tracknum == 3){StartSong(ChinaSong);}
    e85c:	43 30       	cpi	r20, 0x03	; 3
    e85e:	19 f4       	brne	.+6      	; 0xe866 <InGameMenu+0x1f6>
    e860:	8f e3       	ldi	r24, 0x3F	; 63
    e862:	92 e7       	ldi	r25, 0x72	; 114
    e864:	f8 cf       	rjmp	.-16     	; 0xe856 <InGameMenu+0x1e6>
				else if(tracknum == 4){StartSong(SouthPoleSong);}
    e866:	44 30       	cpi	r20, 0x04	; 4
    e868:	19 f4       	brne	.+6      	; 0xe870 <InGameMenu+0x200>
    e86a:	85 e3       	ldi	r24, 0x35	; 53
    e86c:	99 e7       	ldi	r25, 0x79	; 121
    e86e:	f3 cf       	rjmp	.-26     	; 0xe856 <InGameMenu+0x1e6>
				else if(tracknum == 5){StartSong(JapanSong);}
    e870:	45 30       	cpi	r20, 0x05	; 5
    e872:	19 f4       	brne	.+6      	; 0xe87a <InGameMenu+0x20a>
    e874:	86 eb       	ldi	r24, 0xB6	; 182
    e876:	9e e7       	ldi	r25, 0x7E	; 126
    e878:	ee cf       	rjmp	.-36     	; 0xe856 <InGameMenu+0x1e6>
			else						{musicplaying=false;musicoff=true;musicpreference=false;}
    e87a:	10 92 01 01 	sts	0x0101, r1
    e87e:	81 e0       	ldi	r24, 0x01	; 1
    e880:	80 93 e4 0c 	sts	0x0CE4, r24
    e884:	10 92 e5 0c 	sts	0x0CE5, r1
    e888:	ce c0       	rjmp	.+412    	; 0xea26 <InGameMenu+0x3b6>

		 }
		 else if(cursorpos == 5){//gfx
    e88a:	15 30       	cpi	r17, 0x05	; 5
    e88c:	91 f4       	brne	.+36     	; 0xe8b2 <InGameMenu+0x242>
			 graphicspreference = true;
    e88e:	11 e0       	ldi	r17, 0x01	; 1
    e890:	10 93 e6 0c 	sts	0x0CE6, r17
				if(gfxnum != tileset){
    e894:	80 91 86 0d 	lds	r24, 0x0D86
    e898:	d8 16       	cp	r13, r24
    e89a:	41 f0       	breq	.+16     	; 0xe8ac <InGameMenu+0x23c>
				Render();
    e89c:	0e 94 9a 67 	call	0xcf34	; 0xcf34 <Render>
				SwapTileSet(gfxnum);
    e8a0:	8d 2d       	mov	r24, r13
    e8a2:	0e 94 ef 67 	call	0xcfde	; 0xcfde <SwapTileSet>
				 graphicspreference = true;
    e8a6:	10 93 e6 0c 	sts	0x0CE6, r17
    e8aa:	bd c0       	rjmp	.+378    	; 0xea26 <InGameMenu+0x3b6>
			}
			else
				graphicspreference = false;//allow user to use default tiles again
    e8ac:	10 92 e6 0c 	sts	0x0CE6, r1
    e8b0:	ba c0       	rjmp	.+372    	; 0xea26 <InGameMenu+0x3b6>
		 }
		 else{//quit
				guistate = GMAINMENU;
    e8b2:	81 e0       	ldi	r24, 0x01	; 1
    e8b4:	80 93 91 0d 	sts	0x0D91, r24
			guijuststarted = true;
    e8b8:	80 93 6d 0d 	sts	0x0D6D, r24
			DoScreenOutEffect();//there is a strange bug here, apply band-aid
    e8bc:	0e 94 c6 68 	call	0xd18c	; 0xd18c <DoScreenOutEffect>
			HideSprites(0,MAX_SPRITES);
    e8c0:	80 e0       	ldi	r24, 0x00	; 0
    e8c2:	64 e1       	ldi	r22, 0x14	; 20
    e8c4:	0e 94 f5 63 	call	0xc7ea	; 0xc7ea <HideSprites>
			FillScreen(BLANKT);
    e8c8:	81 e8       	ldi	r24, 0x81	; 129
    e8ca:	0e 94 24 69 	call	0xd248	; 0xd248 <FillScreen>
    e8ce:	ab c0       	rjmp	.+342    	; 0xea26 <InGameMenu+0x3b6>
				tileset = oldgfx;
			tracknum = oldtrack;
		 }
		 return;
	  }
	  if(cursorpos == 4){//BGM
    e8d0:	80 91 8a 0d 	lds	r24, 0x0D8A
    e8d4:	84 30       	cpi	r24, 0x04	; 4
    e8d6:	a1 f4       	brne	.+40     	; 0xe900 <InGameMenu+0x290>
		 if(tracknum > 0 && LeftDown()) {tracknum--;}
    e8d8:	10 91 82 0d 	lds	r17, 0x0D82
    e8dc:	11 23       	and	r17, r17
    e8de:	41 f0       	breq	.+16     	; 0xe8f0 <InGameMenu+0x280>
    e8e0:	0e 94 5e 65 	call	0xcabc	; 0xcabc <LeftDown>
    e8e4:	88 23       	and	r24, r24
    e8e6:	11 f0       	breq	.+4      	; 0xe8ec <InGameMenu+0x27c>
    e8e8:	11 50       	subi	r17, 0x01	; 1
    e8ea:	07 c0       	rjmp	.+14     	; 0xe8fa <InGameMenu+0x28a>
		 else if(tracknum < 5 && RightDown()){tracknum++;}
    e8ec:	15 30       	cpi	r17, 0x05	; 5
    e8ee:	c8 f4       	brcc	.+50     	; 0xe922 <InGameMenu+0x2b2>
    e8f0:	0e 94 71 65 	call	0xcae2	; 0xcae2 <RightDown>
    e8f4:	88 23       	and	r24, r24
    e8f6:	a9 f0       	breq	.+42     	; 0xe922 <InGameMenu+0x2b2>
    e8f8:	1f 5f       	subi	r17, 0xFF	; 255
    e8fa:	10 93 82 0d 	sts	0x0D82, r17
    e8fe:	11 c0       	rjmp	.+34     	; 0xe922 <InGameMenu+0x2b2>
		}
	  else if(cursorpos == 5){//GFX
    e900:	85 30       	cpi	r24, 0x05	; 5
    e902:	79 f4       	brne	.+30     	; 0xe922 <InGameMenu+0x2b2>
		  if(gfxnum > 0 && LeftDown()) {gfxnum--;}
    e904:	dd 20       	and	r13, r13
    e906:	49 f0       	breq	.+18     	; 0xe91a <InGameMenu+0x2aa>
    e908:	0e 94 5e 65 	call	0xcabc	; 0xcabc <LeftDown>
    e90c:	88 23       	and	r24, r24
    e90e:	11 f0       	breq	.+4      	; 0xe914 <InGameMenu+0x2a4>
    e910:	da 94       	dec	r13
    e912:	07 c0       	rjmp	.+14     	; 0xe922 <InGameMenu+0x2b2>
		else if(gfxnum < 4 && RightDown()){gfxnum++;}
    e914:	f3 e0       	ldi	r31, 0x03	; 3
    e916:	fd 15       	cp	r31, r13
    e918:	20 f0       	brcs	.+8      	; 0xe922 <InGameMenu+0x2b2>
    e91a:	0e 94 71 65 	call	0xcae2	; 0xcae2 <RightDown>
    e91e:	81 11       	cpse	r24, r1
    e920:	d3 94       	inc	r13
	  }
	  if(tracknum == 0 || tracknum == 255){print(15,15,PSTR("OFF"));}else{SetTile(16,15,FONTSTART);if(tracknum==pgm_read_byte(&Maps[((level<<3)*14)+level])+1){SetTile(17,15,FONTSTART+2);}else{SetTile(17,15,FONTSTART);}printb(15,15,tracknum);}
    e922:	80 91 82 0d 	lds	r24, 0x0D82
    e926:	81 50       	subi	r24, 0x01	; 1
    e928:	8e 3f       	cpi	r24, 0xFE	; 254
    e92a:	38 f0       	brcs	.+14     	; 0xe93a <InGameMenu+0x2ca>
    e92c:	8f e0       	ldi	r24, 0x0F	; 15
    e92e:	6f e0       	ldi	r22, 0x0F	; 15
    e930:	45 e6       	ldi	r20, 0x65	; 101
    e932:	59 ea       	ldi	r21, 0xA9	; 169
    e934:	0e 94 69 6a 	call	0xd4d2	; 0xd4d2 <print>
    e938:	36 c0       	rjmp	.+108    	; 0xe9a6 <InGameMenu+0x336>
    e93a:	80 e1       	ldi	r24, 0x10	; 16
    e93c:	6f e0       	ldi	r22, 0x0F	; 15
    e93e:	42 e8       	ldi	r20, 0x82	; 130
    e940:	50 e0       	ldi	r21, 0x00	; 0
    e942:	0e 94 ca 58 	call	0xb194	; 0xb194 <SetTile>
    e946:	80 91 89 0d 	lds	r24, 0x0D89
    e94a:	90 e0       	ldi	r25, 0x00	; 0
    e94c:	9c 01       	movw	r18, r24
    e94e:	74 e0       	ldi	r23, 0x04	; 4
    e950:	22 0f       	add	r18, r18
    e952:	33 1f       	adc	r19, r19
    e954:	7a 95       	dec	r23
    e956:	e1 f7       	brne	.-8      	; 0xe950 <InGameMenu+0x2e0>
    e958:	f9 01       	movw	r30, r18
    e95a:	63 e0       	ldi	r22, 0x03	; 3
    e95c:	ee 0f       	add	r30, r30
    e95e:	ff 1f       	adc	r31, r31
    e960:	6a 95       	dec	r22
    e962:	e1 f7       	brne	.-8      	; 0xe95c <InGameMenu+0x2ec>
    e964:	e2 1b       	sub	r30, r18
    e966:	f3 0b       	sbc	r31, r19
    e968:	e8 0f       	add	r30, r24
    e96a:	f9 1f       	adc	r31, r25
    e96c:	e3 5f       	subi	r30, 0xF3	; 243
    e96e:	fb 47       	sbci	r31, 0x7B	; 123
    e970:	e4 91       	lpm	r30, Z+
    e972:	20 91 82 0d 	lds	r18, 0x0D82
    e976:	30 e0       	ldi	r19, 0x00	; 0
    e978:	8e 2f       	mov	r24, r30
    e97a:	90 e0       	ldi	r25, 0x00	; 0
    e97c:	01 96       	adiw	r24, 0x01	; 1
    e97e:	28 17       	cp	r18, r24
    e980:	39 07       	cpc	r19, r25
    e982:	29 f4       	brne	.+10     	; 0xe98e <InGameMenu+0x31e>
    e984:	81 e1       	ldi	r24, 0x11	; 17
    e986:	6f e0       	ldi	r22, 0x0F	; 15
    e988:	44 e8       	ldi	r20, 0x84	; 132
    e98a:	50 e0       	ldi	r21, 0x00	; 0
    e98c:	04 c0       	rjmp	.+8      	; 0xe996 <InGameMenu+0x326>
    e98e:	81 e1       	ldi	r24, 0x11	; 17
    e990:	6f e0       	ldi	r22, 0x0F	; 15
    e992:	42 e8       	ldi	r20, 0x82	; 130
    e994:	50 e0       	ldi	r21, 0x00	; 0
    e996:	0e 94 ca 58 	call	0xb194	; 0xb194 <SetTile>
    e99a:	8f e0       	ldi	r24, 0x0F	; 15
    e99c:	6f e0       	ldi	r22, 0x0F	; 15
    e99e:	40 91 82 0d 	lds	r20, 0x0D82
    e9a2:	0e 94 f9 6b 	call	0xd7f2	; 0xd7f2 <printb>
	  printb(15,16,gfxnum+1); if(pgm_read_byte(&Maps[((level<<3)*14)+level])==gfxnum){SetTile(17,16,FONTSTART+2);}else{SetTile(17,16,FONTSTART);}
    e9a6:	4d 2d       	mov	r20, r13
    e9a8:	4f 5f       	subi	r20, 0xFF	; 255
    e9aa:	8f e0       	ldi	r24, 0x0F	; 15
    e9ac:	60 e1       	ldi	r22, 0x10	; 16
    e9ae:	0e 94 f9 6b 	call	0xd7f2	; 0xd7f2 <printb>
    e9b2:	80 91 89 0d 	lds	r24, 0x0D89
    e9b6:	90 e0       	ldi	r25, 0x00	; 0
    e9b8:	9c 01       	movw	r18, r24
    e9ba:	54 e0       	ldi	r21, 0x04	; 4
    e9bc:	22 0f       	add	r18, r18
    e9be:	33 1f       	adc	r19, r19
    e9c0:	5a 95       	dec	r21
    e9c2:	e1 f7       	brne	.-8      	; 0xe9bc <InGameMenu+0x34c>
    e9c4:	f9 01       	movw	r30, r18
    e9c6:	43 e0       	ldi	r20, 0x03	; 3
    e9c8:	ee 0f       	add	r30, r30
    e9ca:	ff 1f       	adc	r31, r31
    e9cc:	4a 95       	dec	r20
    e9ce:	e1 f7       	brne	.-8      	; 0xe9c8 <InGameMenu+0x358>
    e9d0:	e2 1b       	sub	r30, r18
    e9d2:	f3 0b       	sbc	r31, r19
    e9d4:	e8 0f       	add	r30, r24
    e9d6:	f9 1f       	adc	r31, r25
    e9d8:	e3 5f       	subi	r30, 0xF3	; 243
    e9da:	fb 47       	sbci	r31, 0x7B	; 123
    e9dc:	e4 91       	lpm	r30, Z+
    e9de:	ed 15       	cp	r30, r13
    e9e0:	29 f4       	brne	.+10     	; 0xe9ec <InGameMenu+0x37c>
    e9e2:	81 e1       	ldi	r24, 0x11	; 17
    e9e4:	60 e1       	ldi	r22, 0x10	; 16
    e9e6:	44 e8       	ldi	r20, 0x84	; 132
    e9e8:	50 e0       	ldi	r21, 0x00	; 0
    e9ea:	04 c0       	rjmp	.+8      	; 0xe9f4 <InGameMenu+0x384>
    e9ec:	81 e1       	ldi	r24, 0x11	; 17
    e9ee:	60 e1       	ldi	r22, 0x10	; 16
    e9f0:	42 e8       	ldi	r20, 0x82	; 130
    e9f2:	50 e0       	ldi	r21, 0x00	; 0
    e9f4:	0e 94 ca 58 	call	0xb194	; 0xb194 <SetTile>
    e9f8:	1b e0       	ldi	r17, 0x0B	; 11
	  for(u8 i=0;i<7;i++){SetTile(10,11+i,MENUSTART+2);}//blank out the cursor
    e9fa:	8a e0       	ldi	r24, 0x0A	; 10
    e9fc:	61 2f       	mov	r22, r17
    e9fe:	4a e7       	ldi	r20, 0x7A	; 122
    ea00:	50 e0       	ldi	r21, 0x00	; 0
    ea02:	0e 94 ca 58 	call	0xb194	; 0xb194 <SetTile>
    ea06:	1f 5f       	subi	r17, 0xFF	; 255
    ea08:	12 31       	cpi	r17, 0x12	; 18
    ea0a:	b9 f7       	brne	.-18     	; 0xe9fa <InGameMenu+0x38a>
	  SetTile(10,11+cursorpos,MENUSTART+4);
    ea0c:	60 91 8a 0d 	lds	r22, 0x0D8A
    ea10:	65 5f       	subi	r22, 0xF5	; 245
    ea12:	8a e0       	ldi	r24, 0x0A	; 10
    ea14:	4c e7       	ldi	r20, 0x7C	; 124
    ea16:	50 e0       	ldi	r21, 0x00	; 0
    ea18:	0e 94 ca 58 	call	0xb194	; 0xb194 <SetTile>
	  WaitVsync(1);
    ea1c:	81 e0       	ldi	r24, 0x01	; 1
    ea1e:	90 e0       	ldi	r25, 0x00	; 0
    ea20:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
    ea24:	88 ce       	rjmp	.-752    	; 0xe736 <InGameMenu+0xc6>
	}
};
    ea26:	cd b7       	in	r28, 0x3d	; 61
    ea28:	de b7       	in	r29, 0x3e	; 62
    ea2a:	e9 e0       	ldi	r30, 0x09	; 9
    ea2c:	0c 94 5b 77 	jmp	0xeeb6	; 0xeeb6 <__epilogue_restores__+0x12>

0000ea30 <MainMenu>:
		vram[(j*30)+i] = RAM_TILES_COUNT+t;
		t++;
	}
}

void MainMenu(){
    ea30:	a0 e0       	ldi	r26, 0x00	; 0
    ea32:	b0 e0       	ldi	r27, 0x00	; 0
    ea34:	ee e1       	ldi	r30, 0x1E	; 30
    ea36:	f5 e7       	ldi	r31, 0x75	; 117
    ea38:	0c 94 3b 77 	jmp	0xee76	; 0xee76 <__prologue_saves__+0xa>
	static bool firstrun = false;
	int idleticks = 0;
	cursorpos = 0;
    ea3c:	10 92 8a 0d 	sts	0x0D8A, r1
	tileset = 0;
    ea40:	10 92 86 0d 	sts	0x0D86, r1
	u8 t;
	
	graphicspreference = false;
    ea44:	10 92 e6 0c 	sts	0x0CE6, r1
	musicpreference = false;
    ea48:	10 92 e5 0c 	sts	0x0CE5, r1

	HideSprites(0,MAX_SPRITES);
    ea4c:	80 e0       	ldi	r24, 0x00	; 0
    ea4e:	64 e1       	ldi	r22, 0x14	; 20
    ea50:	0e 94 f5 63 	call	0xc7ea	; 0xc7ea <HideSprites>
	FillScreen(BLANKT);
    ea54:	81 e8       	ldi	r24, 0x81	; 129
    ea56:	0e 94 24 69 	call	0xd248	; 0xd248 <FillScreen>
	WaitVsync(1);
    ea5a:	81 e0       	ldi	r24, 0x01	; 1
    ea5c:	90 e0       	ldi	r25, 0x00	; 0
    ea5e:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
	FadeIn(2,false);
    ea62:	82 e0       	ldi	r24, 0x02	; 2
    ea64:	60 e0       	ldi	r22, 0x00	; 0
    ea66:	0e 94 b0 62 	call	0xc560	; 0xc560 <FadeIn>

	if(!firstrun){
    ea6a:	80 91 e8 0c 	lds	r24, 0x0CE8
    ea6e:	88 23       	and	r24, r24
    ea70:	59 f4       	brne	.+22     	; 0xea88 <MainMenu+0x58>
		StartSong(AmericaSong);
    ea72:	8d e8       	ldi	r24, 0x8D	; 141
    ea74:	99 e6       	ldi	r25, 0x69	; 105
    ea76:	0e 94 ce 5a 	call	0xb59c	; 0xb59c <StartSong>
	  musicplaying = true;
    ea7a:	81 e0       	ldi	r24, 0x01	; 1
    ea7c:	80 93 01 01 	sts	0x0101, r24
	  tracknum = 1;
    ea80:	80 93 82 0d 	sts	0x0D82, r24
		firstrun = true;
    ea84:	80 93 e8 0c 	sts	0x0CE8, r24
	}

	WaitVsync(1);
    ea88:	81 e0       	ldi	r24, 0x01	; 1
    ea8a:	90 e0       	ldi	r25, 0x00	; 0
    ea8c:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>

	HideSprites(0,MAX_SPRITES);
    ea90:	80 e0       	ldi	r24, 0x00	; 0
    ea92:	64 e1       	ldi	r22, 0x14	; 20
    ea94:	0e 94 f5 63 	call	0xc7ea	; 0xc7ea <HideSprites>
    ea98:	dd 24       	eor	r13, r13
    ea9a:	d3 94       	inc	r13
    ea9c:	64 e0       	ldi	r22, 0x04	; 4
    ea9e:	f6 2e       	mov	r15, r22
    eaa0:	56 e1       	ldi	r21, 0x16	; 22
    eaa2:	c5 2e       	mov	r12, r21
    eaa4:	c6 e1       	ldi	r28, 0x16	; 22
    eaa6:	d3 e0       	ldi	r29, 0x03	; 3
				case 2:
				DrawSpriteTile(112,yo+32,3+flop);//Out of time now, because of channel 4 turned on
			break;

				case 3:
				DrawSpriteTile(128,yo+32,4-flop);
    eaa8:	44 e0       	ldi	r20, 0x04	; 4
    eaaa:	74 2e       	mov	r7, r20

		WaitVsync(1);
		if(yoff > 2){
		 int off = ((yoff+4)*30)+10;
		 for(u8 x=10;x<20;x++)
			 vram[off++] = BLANKT+RAM_TILES_COUNT;
    eaac:	3f e9       	ldi	r19, 0x9F	; 159
    eaae:	83 2e       	mov	r8, r19
	  }

	  flopcount--;
		if(!flopcount){
		  flop = !flop;
    eab0:	99 24       	eor	r9, r9
    eab2:	93 94       	inc	r9
    eab4:	6c c0       	rjmp	.+216    	; 0xeb8e <MainMenu+0x15e>
	u8 flopcount = 4;
	for(u8 yoff = 22;yoff>2;yoff--){

		for(u8 y=0;y<4;y++){
			for(u8 x=0;x<14;x++){
				t = pgm_read_byte(&TitleMap[((y)*14)+x]);
    eab6:	84 91       	lpm	r24, Z+
			  vram[((y+yoff)*30)+x+8] = t+169+RAM_TILES_COUNT;//TODO define 169
    eab8:	89 53       	subi	r24, 0x39	; 57
    eaba:	8d 93       	st	X+, r24
    eabc:	31 96       	adiw	r30, 0x01	; 1

	u8 flopcount = 4;
	for(u8 yoff = 22;yoff>2;yoff--){

		for(u8 y=0;y<4;y++){
			for(u8 x=0;x<14;x++){
    eabe:	a6 17       	cp	r26, r22
    eac0:	b7 07       	cpc	r27, r23
    eac2:	c9 f7       	brne	.-14     	; 0xeab6 <MainMenu+0x86>
    eac4:	42 5e       	subi	r20, 0xE2	; 226
    eac6:	5f 4f       	sbci	r21, 0xFF	; 255
    eac8:	22 5f       	subi	r18, 0xF2	; 242
    eaca:	3f 4f       	sbci	r19, 0xFF	; 255
    eacc:	bd 01       	movw	r22, r26
    eace:	62 5e       	subi	r22, 0xE2	; 226
    ead0:	7f 4f       	sbci	r23, 0xFF	; 255
	bool flop = true;

	u8 flopcount = 4;
	for(u8 yoff = 22;yoff>2;yoff--){

		for(u8 y=0;y<4;y++){
    ead2:	84 e3       	ldi	r24, 0x34	; 52
    ead4:	21 3e       	cpi	r18, 0xE1	; 225
    ead6:	38 07       	cpc	r19, r24
    ead8:	29 f0       	breq	.+10     	; 0xeae4 <MainMenu+0xb4>
    eada:	da 01       	movw	r26, r20
    eadc:	a0 5e       	subi	r26, 0xE0	; 224
    eade:	be 4f       	sbci	r27, 0xFE	; 254
    eae0:	f9 01       	movw	r30, r18
    eae2:	e9 cf       	rjmp	.-46     	; 0xeab6 <MainMenu+0x86>
				t = pgm_read_byte(&TitleMap[((y)*14)+x]);
			  vram[((y+yoff)*30)+x+8] = t+169+RAM_TILES_COUNT;//TODO define 169
			}
		}

		spritecount = 0;
    eae4:	10 92 79 0d 	sts	0x0D79, r1
	  tileset = 0;
    eae8:	10 92 86 0d 	sts	0x0D86, r1
	  u8 yo = yoff<<3;
    eaec:	8c 2d       	mov	r24, r12
    eaee:	88 0f       	add	r24, r24
    eaf0:	88 0f       	add	r24, r24
    eaf2:	88 0f       	add	r24, r24
    eaf4:	10 e0       	ldi	r17, 0x00	; 0
			case 1:
				DrawSpriteTile(96,yo+32,4-flop);
			break;

				case 2:
				DrawSpriteTile(112,yo+32,3+flop);//Out of time now, because of channel 4 turned on
    eaf6:	20 e2       	ldi	r18, 0x20	; 32
    eaf8:	e2 2e       	mov	r14, r18
    eafa:	e8 0e       	add	r14, r24
    eafc:	0d 2d       	mov	r16, r13
    eafe:	0d 5f       	subi	r16, 0xFD	; 253
			break;

				case 3:
				DrawSpriteTile(128,yo+32,4-flop);
    eb00:	a7 2c       	mov	r10, r7
    eb02:	ad 18       	sub	r10, r13
			break;

			case 4:
				DrawSpriteTile(160,yo+16,3+flop);
    eb04:	90 e1       	ldi	r25, 0x10	; 16
    eb06:	b9 2e       	mov	r11, r25
    eb08:	b8 0e       	add	r11, r24

		spritecount = 0;
	  tileset = 0;
	  u8 yo = yoff<<3;
	  for(u8 i=0;i<5;i++){//pretty time tight, but it makes it(I think/hope). Lack of cleverness here...
		 switch(i){
    eb0a:	12 30       	cpi	r17, 0x02	; 2
    eb0c:	81 f0       	breq	.+32     	; 0xeb2e <MainMenu+0xfe>
    eb0e:	13 30       	cpi	r17, 0x03	; 3
    eb10:	28 f4       	brcc	.+10     	; 0xeb1c <MainMenu+0xec>
    eb12:	11 23       	and	r17, r17
    eb14:	41 f0       	breq	.+16     	; 0xeb26 <MainMenu+0xf6>
    eb16:	11 30       	cpi	r17, 0x01	; 1
    eb18:	b1 f4       	brne	.+44     	; 0xeb46 <MainMenu+0x116>
    eb1a:	07 c0       	rjmp	.+14     	; 0xeb2a <MainMenu+0xfa>
    eb1c:	13 30       	cpi	r17, 0x03	; 3
    eb1e:	51 f0       	breq	.+20     	; 0xeb34 <MainMenu+0x104>
    eb20:	14 30       	cpi	r17, 0x04	; 4
    eb22:	89 f4       	brne	.+34     	; 0xeb46 <MainMenu+0x116>
    eb24:	0b c0       	rjmp	.+22     	; 0xeb3c <MainMenu+0x10c>
			 case 0:
				DrawSpriteTile(64,yo+16,3+flop);
    eb26:	80 e4       	ldi	r24, 0x40	; 64
    eb28:	0a c0       	rjmp	.+20     	; 0xeb3e <MainMenu+0x10e>
			 break;
				
			case 1:
				DrawSpriteTile(96,yo+32,4-flop);
    eb2a:	80 e6       	ldi	r24, 0x60	; 96
    eb2c:	04 c0       	rjmp	.+8      	; 0xeb36 <MainMenu+0x106>
			break;

				case 2:
				DrawSpriteTile(112,yo+32,3+flop);//Out of time now, because of channel 4 turned on
    eb2e:	80 e7       	ldi	r24, 0x70	; 112
    eb30:	6e 2d       	mov	r22, r14
    eb32:	06 c0       	rjmp	.+12     	; 0xeb40 <MainMenu+0x110>
			break;

				case 3:
				DrawSpriteTile(128,yo+32,4-flop);
    eb34:	80 e8       	ldi	r24, 0x80	; 128
    eb36:	6e 2d       	mov	r22, r14
    eb38:	4a 2d       	mov	r20, r10
    eb3a:	03 c0       	rjmp	.+6      	; 0xeb42 <MainMenu+0x112>
			break;

			case 4:
				DrawSpriteTile(160,yo+16,3+flop);
    eb3c:	80 ea       	ldi	r24, 0xA0	; 160
    eb3e:	6b 2d       	mov	r22, r11
    eb40:	40 2f       	mov	r20, r16
    eb42:	0e 94 48 67 	call	0xce90	; 0xce90 <DrawSpriteTile>
			break;
		  };

		 //DrawSpriteTile((i<<4)+80-((i==0)<<4)+((i==4)<<4),(yoff<<3)+32-((i==0 || i==4)<<4),3+flop);
		  ++tileset;
    eb46:	80 91 86 0d 	lds	r24, 0x0D86
    eb4a:	8f 5f       	subi	r24, 0xFF	; 255
    eb4c:	80 93 86 0d 	sts	0x0D86, r24
		}

		spritecount = 0;
	  tileset = 0;
	  u8 yo = yoff<<3;
	  for(u8 i=0;i<5;i++){//pretty time tight, but it makes it(I think/hope). Lack of cleverness here...
    eb50:	1f 5f       	subi	r17, 0xFF	; 255
    eb52:	15 30       	cpi	r17, 0x05	; 5
    eb54:	d1 f6       	brne	.-76     	; 0xeb0a <MainMenu+0xda>

		 //DrawSpriteTile((i<<4)+80-((i==0)<<4)+((i==4)<<4),(yoff<<3)+32-((i==0 || i==4)<<4),3+flop);
		  ++tileset;
	  }

		WaitVsync(1);
    eb56:	81 e0       	ldi	r24, 0x01	; 1
    eb58:	90 e0       	ldi	r25, 0x00	; 0
    eb5a:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
    eb5e:	fe 01       	movw	r30, r28
    eb60:	e0 5e       	subi	r30, 0xE0	; 224
    eb62:	fe 4f       	sbci	r31, 0xFE	; 254
		if(yoff > 2){
		 int off = ((yoff+4)*30)+10;
		 for(u8 x=10;x<20;x++)
    eb64:	ce 01       	movw	r24, r28
    eb66:	86 5d       	subi	r24, 0xD6	; 214
    eb68:	9e 4f       	sbci	r25, 0xFE	; 254
			 vram[off++] = BLANKT+RAM_TILES_COUNT;
    eb6a:	81 92       	st	Z+, r8
	  }

		WaitVsync(1);
		if(yoff > 2){
		 int off = ((yoff+4)*30)+10;
		 for(u8 x=10;x<20;x++)
    eb6c:	e8 17       	cp	r30, r24
    eb6e:	f9 07       	cpc	r31, r25
    eb70:	e1 f7       	brne	.-8      	; 0xeb6a <MainMenu+0x13a>
			 vram[off++] = BLANKT+RAM_TILES_COUNT;
	  }

	  flopcount--;
    eb72:	fa 94       	dec	r15
		if(!flopcount){
    eb74:	19 f4       	brne	.+6      	; 0xeb7c <MainMenu+0x14c>
		  flop = !flop;
    eb76:	d9 24       	eor	r13, r9
    eb78:	b4 e0       	ldi	r27, 0x04	; 4
    eb7a:	fb 2e       	mov	r15, r27
		 flopcount = 4;
	  }
	  WaitVsync(1);
    eb7c:	81 e0       	ldi	r24, 0x01	; 1
    eb7e:	90 e0       	ldi	r25, 0x00	; 0
    eb80:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
	HideSprites(0,MAX_SPRITES);
	
	bool flop = true;

	u8 flopcount = 4;
	for(u8 yoff = 22;yoff>2;yoff--){
    eb84:	ca 94       	dec	r12
    eb86:	6e 97       	sbiw	r28, 0x1e	; 30
    eb88:	82 e0       	ldi	r24, 0x02	; 2
    eb8a:	c8 16       	cp	r12, r24
    eb8c:	49 f0       	breq	.+18     	; 0xeba0 <MainMenu+0x170>
    eb8e:	ae 01       	movw	r20, r28
    eb90:	4a 57       	subi	r20, 0x7A	; 122
    eb92:	50 40       	sbci	r21, 0x00	; 0
    eb94:	29 ea       	ldi	r18, 0xA9	; 169
    eb96:	34 e3       	ldi	r19, 0x34	; 52
    eb98:	be 01       	movw	r22, r28
    eb9a:	6c 54       	subi	r22, 0x4C	; 76
    eb9c:	7f 4f       	sbci	r23, 0xFF	; 255
    eb9e:	9d cf       	rjmp	.-198    	; 0xeada <MainMenu+0xaa>
		 flopcount = 4;
	  }
	  WaitVsync(1);
	}

	WaitVsync(20);
    eba0:	84 e1       	ldi	r24, 0x14	; 20
    eba2:	90 e0       	ldi	r25, 0x00	; 0
    eba4:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>

	DrawOpeningMenu(20,20,9,3,-4,false);
    eba8:	84 e1       	ldi	r24, 0x14	; 20
    ebaa:	64 e1       	ldi	r22, 0x14	; 20
    ebac:	49 e0       	ldi	r20, 0x09	; 9
    ebae:	23 e0       	ldi	r18, 0x03	; 3
    ebb0:	0c ef       	ldi	r16, 0xFC	; 252
    ebb2:	1f ef       	ldi	r17, 0xFF	; 255
    ebb4:	ee 24       	eor	r14, r14
    ebb6:	0e 94 fd 69 	call	0xd3fa	; 0xd3fa <DrawOpeningMenu>
	print(21,21,PSTR("NEW3GAME"));
    ebba:	85 e1       	ldi	r24, 0x15	; 21
    ebbc:	65 e1       	ldi	r22, 0x15	; 21
    ebbe:	47 e9       	ldi	r20, 0x97	; 151
    ebc0:	59 ea       	ldi	r21, 0xA9	; 169
    ebc2:	0e 94 69 6a 	call	0xd4d2	; 0xd4d2 <print>
	print(21,22,PSTR("CONTINUE"));
    ebc6:	85 e1       	ldi	r24, 0x15	; 21
    ebc8:	66 e1       	ldi	r22, 0x16	; 22
    ebca:	4e e8       	ldi	r20, 0x8E	; 142
    ebcc:	59 ea       	ldi	r21, 0xA9	; 169
    ebce:	0e 94 69 6a 	call	0xd4d2	; 0xd4d2 <print>
	WaitVsync(40);
    ebd2:	88 e2       	ldi	r24, 0x28	; 40
    ebd4:	90 e0       	ldi	r25, 0x00	; 0
    ebd6:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
    ebda:	c0 e0       	ldi	r28, 0x00	; 0
    ebdc:	d0 e0       	ldi	r29, 0x00	; 0

	  while(true){
		FillPad();

		if(UpDown() || DownDown()){cursorpos = !cursorpos;idleticks=0;}
    ebde:	cc 24       	eor	r12, r12
    ebe0:	c3 94       	inc	r12
	  spritecount = 0;
	  if(++flopcount>7){flop = !flop; flopcount = 0;}
		for(u8 i=0;i<5;i++){
		 // if(i == 2){continue;}//not enough time for all 5 now(channel 4)
		  tileset = i;
		 DrawSpriteTile((i<<4)+80-(16*(i==0))+((i==4)<<4),56-((i==0 || i==4)<<4),5+flop);
    ebe2:	a8 e3       	ldi	r26, 0x38	; 56
    ebe4:	ea 2e       	mov	r14, r26
	print(21,21,PSTR("NEW3GAME"));
	print(21,22,PSTR("CONTINUE"));
	WaitVsync(40);

	  while(true){
		FillPad();
    ebe6:	0e 94 14 6e 	call	0xdc28	; 0xdc28 <FillPad>

		if(UpDown() || DownDown()){cursorpos = !cursorpos;idleticks=0;}
    ebea:	0e 94 38 65 	call	0xca70	; 0xca70 <UpDown>
    ebee:	88 23       	and	r24, r24
    ebf0:	21 f4       	brne	.+8      	; 0xebfa <MainMenu+0x1ca>
    ebf2:	0e 94 4b 65 	call	0xca96	; 0xca96 <DownDown>
    ebf6:	88 23       	and	r24, r24
    ebf8:	59 f0       	breq	.+22     	; 0xec10 <MainMenu+0x1e0>
    ebfa:	90 e0       	ldi	r25, 0x00	; 0
    ebfc:	80 91 8a 0d 	lds	r24, 0x0D8A
    ec00:	88 23       	and	r24, r24
    ec02:	09 f4       	brne	.+2      	; 0xec06 <MainMenu+0x1d6>
    ec04:	91 e0       	ldi	r25, 0x01	; 1
    ec06:	90 93 8a 0d 	sts	0x0D8A, r25
    ec0a:	c0 e0       	ldi	r28, 0x00	; 0
    ec0c:	d0 e0       	ldi	r29, 0x00	; 0
    ec0e:	2c c0       	rjmp	.+88     	; 0xec68 <MainMenu+0x238>
	  else if(StartDown()){
    ec10:	0e 94 13 65 	call	0xca26	; 0xca26 <StartDown>
    ec14:	88 23       	and	r24, r24
    ec16:	41 f1       	breq	.+80     	; 0xec68 <MainMenu+0x238>
		 // TriggerFx(20,255,true);
		  guijuststarted = true;
    ec18:	81 e0       	ldi	r24, 0x01	; 1
    ec1a:	80 93 6d 0d 	sts	0x0D6D, r24
		 guistate = GLEVELSELECT;
    ec1e:	82 e0       	ldi	r24, 0x02	; 2
    ec20:	80 93 91 0d 	sts	0x0D91, r24
		 level = 0;
    ec24:	10 92 89 0d 	sts	0x0D89, r1
			if(cursorpos == 1){//continue
    ec28:	80 91 8a 0d 	lds	r24, 0x0D8A
    ec2c:	81 30       	cpi	r24, 0x01	; 1
    ec2e:	99 f4       	brne	.+38     	; 0xec56 <MainMenu+0x226>
    ec30:	03 c0       	rjmp	.+6      	; 0xec38 <MainMenu+0x208>
			 while(IsLevelCompleted(level))
				level++;
    ec32:	9f 5f       	subi	r25, 0xFF	; 255
    ec34:	90 93 89 0d 	sts	0x0D89, r25
		 // TriggerFx(20,255,true);
		  guijuststarted = true;
		 guistate = GLEVELSELECT;
		 level = 0;
			if(cursorpos == 1){//continue
			 while(IsLevelCompleted(level))
    ec38:	80 91 89 0d 	lds	r24, 0x0D89
    ec3c:	0e 94 d6 6c 	call	0xd9ac	; 0xd9ac <IsLevelCompleted>
    ec40:	90 91 89 0d 	lds	r25, 0x0D89
    ec44:	88 23       	and	r24, r24
    ec46:	a9 f7       	brne	.-22     	; 0xec32 <MainMenu+0x202>
				level++;
				
			if(level >= numlevels)
    ec48:	80 91 88 0d 	lds	r24, 0x0D88
    ec4c:	98 17       	cp	r25, r24
    ec4e:	18 f0       	brcs	.+6      	; 0xec56 <MainMenu+0x226>
				level = numlevels-1;
    ec50:	81 50       	subi	r24, 0x01	; 1
    ec52:	80 93 89 0d 	sts	0x0D89, r24
		 }
		 //else{guistate=GMAINMENU;}//guistate = GEDITOR;}
		 //else{guistate = GHELP;}
		 FadeOut(1,true);
    ec56:	81 e0       	ldi	r24, 0x01	; 1
    ec58:	61 e0       	ldi	r22, 0x01	; 1
    ec5a:	0e 94 bf 62 	call	0xc57e	; 0xc57e <FadeOut>
		 HideSprites(0,MAX_SPRITES); 
    ec5e:	80 e0       	ldi	r24, 0x00	; 0
    ec60:	64 e1       	ldi	r22, 0x14	; 20
    ec62:	0e 94 f5 63 	call	0xc7ea	; 0xc7ea <HideSprites>
    ec66:	63 c0       	rjmp	.+198    	; 0xed2e <MainMenu+0x2fe>
		 return;
	  }
		
	  for(u8 i=0;i<2;i++){SetTile(20,21+i,MENUSTART+2);} SetTile(20,21+cursorpos,MENUSTART+4);//overdraw side of window then draw cursor
    ec68:	84 e1       	ldi	r24, 0x14	; 20
    ec6a:	65 e1       	ldi	r22, 0x15	; 21
    ec6c:	4a e7       	ldi	r20, 0x7A	; 122
    ec6e:	50 e0       	ldi	r21, 0x00	; 0
    ec70:	0e 94 ca 58 	call	0xb194	; 0xb194 <SetTile>
    ec74:	84 e1       	ldi	r24, 0x14	; 20
    ec76:	66 e1       	ldi	r22, 0x16	; 22
    ec78:	4a e7       	ldi	r20, 0x7A	; 122
    ec7a:	50 e0       	ldi	r21, 0x00	; 0
    ec7c:	0e 94 ca 58 	call	0xb194	; 0xb194 <SetTile>
    ec80:	60 91 8a 0d 	lds	r22, 0x0D8A
    ec84:	6b 5e       	subi	r22, 0xEB	; 235
    ec86:	84 e1       	ldi	r24, 0x14	; 20
    ec88:	4c e7       	ldi	r20, 0x7C	; 124
    ec8a:	50 e0       	ldi	r21, 0x00	; 0
    ec8c:	0e 94 ca 58 	call	0xb194	; 0xb194 <SetTile>


	  if(++idleticks > TITLEWAITTIME){
    ec90:	21 96       	adiw	r28, 0x01	; 1
    ec92:	81 e0       	ldi	r24, 0x01	; 1
    ec94:	cd 32       	cpi	r28, 0x2D	; 45
    ec96:	d8 07       	cpc	r29, r24
    ec98:	84 f0       	brlt	.+32     	; 0xecba <MainMenu+0x28a>
		 FadeOut(1,true);
    ec9a:	81 e0       	ldi	r24, 0x01	; 1
    ec9c:	61 e0       	ldi	r22, 0x01	; 1
    ec9e:	0e 94 bf 62 	call	0xc57e	; 0xc57e <FadeOut>
		 HideSprites(0,MAX_SPRITES);
    eca2:	80 e0       	ldi	r24, 0x00	; 0
    eca4:	64 e1       	ldi	r22, 0x14	; 20
    eca6:	0e 94 f5 63 	call	0xc7ea	; 0xc7ea <HideSprites>
		 guijuststarted = false;
    ecaa:	10 92 6d 0d 	sts	0x0D6D, r1
		  AttractMode();
    ecae:	0e 94 29 73 	call	0xe652	; 0xe652 <AttractMode>
		 guijuststarted = true;
    ecb2:	81 e0       	ldi	r24, 0x01	; 1
    ecb4:	80 93 6d 0d 	sts	0x0D6D, r24
    ecb8:	3a c0       	rjmp	.+116    	; 0xed2e <MainMenu+0x2fe>
		 return;
	  }
		
		WaitVsync(1);
    ecba:	81 e0       	ldi	r24, 0x01	; 1
    ecbc:	90 e0       	ldi	r25, 0x00	; 0
    ecbe:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
		
	  spritecount = 0;
    ecc2:	10 92 79 0d 	sts	0x0D79, r1
	  if(++flopcount>7){flop = !flop; flopcount = 0;}
    ecc6:	f3 94       	inc	r15
    ecc8:	87 e0       	ldi	r24, 0x07	; 7
    ecca:	8f 15       	cp	r24, r15
    eccc:	10 f4       	brcc	.+4      	; 0xecd2 <MainMenu+0x2a2>
    ecce:	dc 24       	eor	r13, r12
    ecd0:	ff 24       	eor	r15, r15
    ecd2:	10 e0       	ldi	r17, 0x00	; 0
		for(u8 i=0;i<5;i++){
		 // if(i == 2){continue;}//not enough time for all 5 now(channel 4)
		  tileset = i;
		 DrawSpriteTile((i<<4)+80-(16*(i==0))+((i==4)<<4),56-((i==0 || i==4)<<4),5+flop);
    ecd4:	0d 2d       	mov	r16, r13
    ecd6:	0b 5f       	subi	r16, 0xFB	; 251
		
	  spritecount = 0;
	  if(++flopcount>7){flop = !flop; flopcount = 0;}
		for(u8 i=0;i<5;i++){
		 // if(i == 2){continue;}//not enough time for all 5 now(channel 4)
		  tileset = i;
    ecd8:	10 93 86 0d 	sts	0x0D86, r17
		 DrawSpriteTile((i<<4)+80-(16*(i==0))+((i==4)<<4),56-((i==0 || i==4)<<4),5+flop);
    ecdc:	11 23       	and	r17, r17
    ecde:	29 f4       	brne	.+10     	; 0xecea <MainMenu+0x2ba>
    ece0:	21 e0       	ldi	r18, 0x01	; 1
    ece2:	30 e0       	ldi	r19, 0x00	; 0
    ece4:	90 e1       	ldi	r25, 0x10	; 16
    ece6:	40 e0       	ldi	r20, 0x00	; 0
    ece8:	0a c0       	rjmp	.+20     	; 0xecfe <MainMenu+0x2ce>
    ecea:	14 30       	cpi	r17, 0x04	; 4
    ecec:	f1 f4       	brne	.+60     	; 0xed2a <MainMenu+0x2fa>
    ecee:	40 e1       	ldi	r20, 0x10	; 16
    ecf0:	20 e0       	ldi	r18, 0x00	; 0
    ecf2:	30 e0       	ldi	r19, 0x00	; 0
    ecf4:	14 30       	cpi	r17, 0x04	; 4
    ecf6:	11 f4       	brne	.+4      	; 0xecfc <MainMenu+0x2cc>
    ecf8:	21 e0       	ldi	r18, 0x01	; 1
    ecfa:	30 e0       	ldi	r19, 0x00	; 0
    ecfc:	90 e0       	ldi	r25, 0x00	; 0
    ecfe:	81 2f       	mov	r24, r17
    ed00:	82 95       	swap	r24
    ed02:	80 7f       	andi	r24, 0xF0	; 240
    ed04:	80 5b       	subi	r24, 0xB0	; 176
    ed06:	89 1b       	sub	r24, r25
    ed08:	92 2f       	mov	r25, r18
    ed0a:	92 95       	swap	r25
    ed0c:	90 7f       	andi	r25, 0xF0	; 240
    ed0e:	6e 2d       	mov	r22, r14
    ed10:	69 1b       	sub	r22, r25
    ed12:	84 0f       	add	r24, r20
    ed14:	40 2f       	mov	r20, r16
    ed16:	0e 94 48 67 	call	0xce90	; 0xce90 <DrawSpriteTile>
		
		WaitVsync(1);
		
	  spritecount = 0;
	  if(++flopcount>7){flop = !flop; flopcount = 0;}
		for(u8 i=0;i<5;i++){
    ed1a:	1f 5f       	subi	r17, 0xFF	; 255
    ed1c:	15 30       	cpi	r17, 0x05	; 5
    ed1e:	e1 f6       	brne	.-72     	; 0xecd8 <MainMenu+0x2a8>
		  tileset = i;
		 DrawSpriteTile((i<<4)+80-(16*(i==0))+((i==4)<<4),56-((i==0 || i==4)<<4),5+flop);

	  }

		WaitVsync(1);
    ed20:	81 e0       	ldi	r24, 0x01	; 1
    ed22:	90 e0       	ldi	r25, 0x00	; 0
    ed24:	0e 94 f2 62 	call	0xc5e4	; 0xc5e4 <WaitVsync>
    ed28:	5e cf       	rjmp	.-324    	; 0xebe6 <MainMenu+0x1b6>
	}
    ed2a:	40 e0       	ldi	r20, 0x00	; 0
    ed2c:	e1 cf       	rjmp	.-62     	; 0xecf0 <MainMenu+0x2c0>
	
}
    ed2e:	cd b7       	in	r28, 0x3d	; 61
    ed30:	de b7       	in	r29, 0x3e	; 62
    ed32:	ed e0       	ldi	r30, 0x0D	; 13
    ed34:	0c 94 57 77 	jmp	0xeeae	; 0xeeae <__epilogue_restores__+0xa>

0000ed38 <Gui>:
	WaitVsync(255);
#endif
}

void Gui(){
	if(!guistate)
    ed38:	80 91 91 0d 	lds	r24, 0x0D91
    ed3c:	88 23       	and	r24, r24
    ed3e:	b9 f0       	breq	.+46     	; 0xed6e <Gui+0x36>
		return;
	switch(guistate){
    ed40:	82 30       	cpi	r24, 0x02	; 2
    ed42:	69 f0       	breq	.+26     	; 0xed5e <Gui+0x26>
    ed44:	83 30       	cpi	r24, 0x03	; 3
    ed46:	18 f4       	brcc	.+6      	; 0xed4e <Gui+0x16>
    ed48:	81 30       	cpi	r24, 0x01	; 1
    ed4a:	89 f4       	brne	.+34     	; 0xed6e <Gui+0x36>
    ed4c:	05 c0       	rjmp	.+10     	; 0xed58 <Gui+0x20>
    ed4e:	85 30       	cpi	r24, 0x05	; 5
    ed50:	49 f0       	breq	.+18     	; 0xed64 <Gui+0x2c>
    ed52:	87 30       	cpi	r24, 0x07	; 7
    ed54:	61 f4       	brne	.+24     	; 0xed6e <Gui+0x36>
    ed56:	09 c0       	rjmp	.+18     	; 0xed6a <Gui+0x32>
	case GMAINMENU:
	MainMenu();
    ed58:	0e 94 18 75 	call	0xea30	; 0xea30 <MainMenu>
    ed5c:	08 95       	ret
	break;
	case GLEVELSELECT:
	LevelSelect();
    ed5e:	0e 94 24 6e 	call	0xdc48	; 0xdc48 <LevelSelect>
    ed62:	08 95       	ret
//	case GHELP:
//	HelpMenu();
//  break;

	case GVICTORY:
	VictoryMenu();
    ed64:	0e 94 6c 6f 	call	0xded8	; 0xded8 <VictoryMenu>
    ed68:	08 95       	ret
	break;
	case GINGAMEMENU:
	InGameMenu();
    ed6a:	0e 94 38 73 	call	0xe670	; 0xe670 <InGameMenu>
    ed6e:	08 95       	ret

0000ed70 <Input>:

extern bool kernelreadpads;

void Input(){
	FillPad();
    ed70:	0e 94 14 6e 	call	0xdc28	; 0xdc28 <FillPad>
	
	if(StartDown()) {guijuststarted=true;guistate=GINGAMEMENU;}
    ed74:	0e 94 13 65 	call	0xca26	; 0xca26 <StartDown>
    ed78:	88 23       	and	r24, r24
    ed7a:	31 f0       	breq	.+12     	; 0xed88 <Input+0x18>
    ed7c:	81 e0       	ldi	r24, 0x01	; 1
    ed7e:	80 93 6d 0d 	sts	0x0D6D, r24
    ed82:	87 e0       	ldi	r24, 0x07	; 7
    ed84:	80 93 91 0d 	sts	0x0D91, r24
	if(SelectDown()){RetryLevel();return;};
    ed88:	0e 94 26 65 	call	0xca4c	; 0xca4c <SelectDown>
    ed8c:	88 23       	and	r24, r24
    ed8e:	19 f0       	breq	.+6      	; 0xed96 <Input+0x26>
    ed90:	0e 94 f4 6d 	call	0xdbe8	; 0xdbe8 <RetryLevel>
    ed94:	08 95       	ret
	if(padstate & BTN_B && !(oldpadstate & BTN_B))
		Redo();
*/


	if(padstate & BTN_SR && !(oldpadstate & BTN_SR)){
    ed96:	20 91 70 0d 	lds	r18, 0x0D70
    ed9a:	30 91 71 0d 	lds	r19, 0x0D71
    ed9e:	33 ff       	sbrs	r19, 3
    eda0:	0f c0       	rjmp	.+30     	; 0xedc0 <Input+0x50>
    eda2:	80 91 6e 0d 	lds	r24, 0x0D6E
    eda6:	90 91 6f 0d 	lds	r25, 0x0D6F
    edaa:	93 fd       	sbrc	r25, 3
    edac:	09 c0       	rjmp	.+18     	; 0xedc0 <Input+0x50>
		if(gamestate & FASTMOVE){gamestate ^= FASTMOVE;}
    edae:	80 91 83 0d 	lds	r24, 0x0D83
    edb2:	87 ff       	sbrs	r24, 7
    edb4:	02 c0       	rjmp	.+4      	; 0xedba <Input+0x4a>
    edb6:	80 58       	subi	r24, 0x80	; 128
    edb8:	01 c0       	rjmp	.+2      	; 0xedbc <Input+0x4c>
	  else						  {gamestate |= FASTMOVE;}
    edba:	80 68       	ori	r24, 0x80	; 128
    edbc:	80 93 83 0d 	sts	0x0D83, r24
	}

	if(poffset)
    edc0:	80 91 8c 0d 	lds	r24, 0x0D8C
    edc4:	88 23       	and	r24, r24
    edc6:	99 f4       	brne	.+38     	; 0xedee <Input+0x7e>
		return;

	if(padstate & BTN_UP)		  {pstate = UP	| MOVE;}
    edc8:	24 ff       	sbrs	r18, 4
    edca:	02 c0       	rjmp	.+4      	; 0xedd0 <Input+0x60>
    edcc:	81 e1       	ldi	r24, 0x11	; 17
    edce:	07 c0       	rjmp	.+14     	; 0xedde <Input+0x6e>
	else if(padstate & BTN_DOWN) {pstate = DOWN | MOVE;}
    edd0:	25 ff       	sbrs	r18, 5
    edd2:	02 c0       	rjmp	.+4      	; 0xedd8 <Input+0x68>
    edd4:	82 e1       	ldi	r24, 0x12	; 18
    edd6:	03 c0       	rjmp	.+6      	; 0xedde <Input+0x6e>
	else if(padstate & BTN_LEFT) {pstate = LEFT | MOVE;}
    edd8:	26 ff       	sbrs	r18, 6
    edda:	04 c0       	rjmp	.+8      	; 0xede4 <Input+0x74>
    eddc:	84 e1       	ldi	r24, 0x14	; 20
    edde:	80 93 7c 0d 	sts	0x0D7C, r24
    ede2:	08 95       	ret
	else if(padstate & BTN_RIGHT){pstate = RIGHT| MOVE;}
    ede4:	27 ff       	sbrs	r18, 7
    ede6:	03 c0       	rjmp	.+6      	; 0xedee <Input+0x7e>
    ede8:	88 e1       	ldi	r24, 0x18	; 24
    edea:	80 93 7c 0d 	sts	0x0D7C, r24
    edee:	08 95       	ret

0000edf0 <main>:
#include <stdint.h>

#include "engine.h"
	
int main(){
	EngineInit();
    edf0:	0e 94 6d 6c 	call	0xd8da	; 0xd8da <EngineInit>

	while(true){
		Input();
    edf4:	0e 94 b8 76 	call	0xed70	; 0xed70 <Input>
		Gui();
    edf8:	0e 94 9c 76 	call	0xed38	; 0xed38 <Gui>
		Logic();
    edfc:	0e 94 d0 70 	call	0xe1a0	; 0xe1a0 <Logic>
		Render();
    ee00:	0e 94 9a 67 	call	0xcf34	; 0xcf34 <Render>
    ee04:	f7 cf       	rjmp	.-18     	; 0xedf4 <main+0x4>

0000ee06 <__udivmodqi4>:
    ee06:	99 1b       	sub	r25, r25
    ee08:	79 e0       	ldi	r23, 0x09	; 9
    ee0a:	04 c0       	rjmp	.+8      	; 0xee14 <__udivmodqi4_ep>

0000ee0c <__udivmodqi4_loop>:
    ee0c:	99 1f       	adc	r25, r25
    ee0e:	96 17       	cp	r25, r22
    ee10:	08 f0       	brcs	.+2      	; 0xee14 <__udivmodqi4_ep>
    ee12:	96 1b       	sub	r25, r22

0000ee14 <__udivmodqi4_ep>:
    ee14:	88 1f       	adc	r24, r24
    ee16:	7a 95       	dec	r23
    ee18:	c9 f7       	brne	.-14     	; 0xee0c <__udivmodqi4_loop>
    ee1a:	80 95       	com	r24
    ee1c:	08 95       	ret

0000ee1e <__udivmodhi4>:
    ee1e:	aa 1b       	sub	r26, r26
    ee20:	bb 1b       	sub	r27, r27
    ee22:	51 e1       	ldi	r21, 0x11	; 17
    ee24:	07 c0       	rjmp	.+14     	; 0xee34 <__udivmodhi4_ep>

0000ee26 <__udivmodhi4_loop>:
    ee26:	aa 1f       	adc	r26, r26
    ee28:	bb 1f       	adc	r27, r27
    ee2a:	a6 17       	cp	r26, r22
    ee2c:	b7 07       	cpc	r27, r23
    ee2e:	10 f0       	brcs	.+4      	; 0xee34 <__udivmodhi4_ep>
    ee30:	a6 1b       	sub	r26, r22
    ee32:	b7 0b       	sbc	r27, r23

0000ee34 <__udivmodhi4_ep>:
    ee34:	88 1f       	adc	r24, r24
    ee36:	99 1f       	adc	r25, r25
    ee38:	5a 95       	dec	r21
    ee3a:	a9 f7       	brne	.-22     	; 0xee26 <__udivmodhi4_loop>
    ee3c:	80 95       	com	r24
    ee3e:	90 95       	com	r25
    ee40:	bc 01       	movw	r22, r24
    ee42:	cd 01       	movw	r24, r26
    ee44:	08 95       	ret

0000ee46 <__divmodhi4>:
    ee46:	97 fb       	bst	r25, 7
    ee48:	09 2e       	mov	r0, r25
    ee4a:	07 26       	eor	r0, r23
    ee4c:	0a d0       	rcall	.+20     	; 0xee62 <__divmodhi4_neg1>
    ee4e:	77 fd       	sbrc	r23, 7
    ee50:	04 d0       	rcall	.+8      	; 0xee5a <__divmodhi4_neg2>
    ee52:	e5 df       	rcall	.-54     	; 0xee1e <__udivmodhi4>
    ee54:	06 d0       	rcall	.+12     	; 0xee62 <__divmodhi4_neg1>
    ee56:	00 20       	and	r0, r0
    ee58:	1a f4       	brpl	.+6      	; 0xee60 <__divmodhi4_exit>

0000ee5a <__divmodhi4_neg2>:
    ee5a:	70 95       	com	r23
    ee5c:	61 95       	neg	r22
    ee5e:	7f 4f       	sbci	r23, 0xFF	; 255

0000ee60 <__divmodhi4_exit>:
    ee60:	08 95       	ret

0000ee62 <__divmodhi4_neg1>:
    ee62:	f6 f7       	brtc	.-4      	; 0xee60 <__divmodhi4_exit>
    ee64:	90 95       	com	r25
    ee66:	81 95       	neg	r24
    ee68:	9f 4f       	sbci	r25, 0xFF	; 255
    ee6a:	08 95       	ret

0000ee6c <__prologue_saves__>:
    ee6c:	2f 92       	push	r2
    ee6e:	3f 92       	push	r3
    ee70:	4f 92       	push	r4
    ee72:	5f 92       	push	r5
    ee74:	6f 92       	push	r6
    ee76:	7f 92       	push	r7
    ee78:	8f 92       	push	r8
    ee7a:	9f 92       	push	r9
    ee7c:	af 92       	push	r10
    ee7e:	bf 92       	push	r11
    ee80:	cf 92       	push	r12
    ee82:	df 92       	push	r13
    ee84:	ef 92       	push	r14
    ee86:	ff 92       	push	r15
    ee88:	0f 93       	push	r16
    ee8a:	1f 93       	push	r17
    ee8c:	cf 93       	push	r28
    ee8e:	df 93       	push	r29
    ee90:	cd b7       	in	r28, 0x3d	; 61
    ee92:	de b7       	in	r29, 0x3e	; 62
    ee94:	ca 1b       	sub	r28, r26
    ee96:	db 0b       	sbc	r29, r27
    ee98:	0f b6       	in	r0, 0x3f	; 63
    ee9a:	f8 94       	cli
    ee9c:	de bf       	out	0x3e, r29	; 62
    ee9e:	0f be       	out	0x3f, r0	; 63
    eea0:	cd bf       	out	0x3d, r28	; 61
    eea2:	09 94       	ijmp

0000eea4 <__epilogue_restores__>:
    eea4:	2a 88       	ldd	r2, Y+18	; 0x12
    eea6:	39 88       	ldd	r3, Y+17	; 0x11
    eea8:	48 88       	ldd	r4, Y+16	; 0x10
    eeaa:	5f 84       	ldd	r5, Y+15	; 0x0f
    eeac:	6e 84       	ldd	r6, Y+14	; 0x0e
    eeae:	7d 84       	ldd	r7, Y+13	; 0x0d
    eeb0:	8c 84       	ldd	r8, Y+12	; 0x0c
    eeb2:	9b 84       	ldd	r9, Y+11	; 0x0b
    eeb4:	aa 84       	ldd	r10, Y+10	; 0x0a
    eeb6:	b9 84       	ldd	r11, Y+9	; 0x09
    eeb8:	c8 84       	ldd	r12, Y+8	; 0x08
    eeba:	df 80       	ldd	r13, Y+7	; 0x07
    eebc:	ee 80       	ldd	r14, Y+6	; 0x06
    eebe:	fd 80       	ldd	r15, Y+5	; 0x05
    eec0:	0c 81       	ldd	r16, Y+4	; 0x04
    eec2:	1b 81       	ldd	r17, Y+3	; 0x03
    eec4:	aa 81       	ldd	r26, Y+2	; 0x02
    eec6:	b9 81       	ldd	r27, Y+1	; 0x01
    eec8:	ce 0f       	add	r28, r30
    eeca:	d1 1d       	adc	r29, r1
    eecc:	0f b6       	in	r0, 0x3f	; 63
    eece:	f8 94       	cli
    eed0:	de bf       	out	0x3e, r29	; 62
    eed2:	0f be       	out	0x3f, r0	; 63
    eed4:	cd bf       	out	0x3d, r28	; 61
    eed6:	ed 01       	movw	r28, r26
    eed8:	08 95       	ret

0000eeda <_exit>:
    eeda:	f8 94       	cli

0000eedc <__stop_program>:
    eedc:	ff cf       	rjmp	.-2      	; 0xeedc <__stop_program>
